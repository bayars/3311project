package facaderandoopoutput;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList57 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strList57);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = strMap14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry12.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList16 = excludeCountry14.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry14.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry14.analysisType();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry25.analysisType();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry25.analysisType();
        java.util.Vector<java.lang.String> strList28 = excludeCountry25.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList29 = excludeCountry14.removeExcludedYears(intList21, strMap23, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry32.removeExcludedYears(intList48, strMap50, "", strList62);
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry32.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry32.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry12.excludeYears(intList29, strMap30, "", strList67);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry0.removeExcludedYears(intList8, strMap10, "", strList67);
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(intList29);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass36 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList18 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass20 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry59.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry7.removeExcludedYears(intList48, strMap57, "", strList61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry65.removeExcludedYears(intList69, strMap71, "", strList75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList48, strMap63, "hi!", strList75);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass82 = strMap81.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strMap81);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass48 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass83 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(strMap87);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass43 = strMap42.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass33 = intList32.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass47 = strMap46.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass48 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strList36);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.util.Vector<java.lang.String> strList12 = null;
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry0.excludeYears(intList8, strMap10, "", strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry45.removeExcludedYears(intList49, strMap51, "", strList55);
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry45.removeExcludedYears(intList62, strMap71, "hi!", strList75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry80.analysisType();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry80.analysisType();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry80.analysisType();
        java.util.Vector<java.lang.String> strList84 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry0.removeExcludedYears(intList62, strMap78, "hi!", strList84);
        java.lang.Class<?> wildcardClass86 = intList62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNull(intList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Vector<java.lang.String> strList90 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList91 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass92 = strList91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry9.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = excludeCountry12.readJson();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry12.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = excludeCountry12.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry28 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry28.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry28.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeCountry28.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry28.analysisType();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry39.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry39.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry39.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry28.removeExcludedYears(intList35, strMap37, "hi!", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry46.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry46.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry46.ISOconverter();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry46.analysisType();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry57.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry57.analysisType();
        java.util.Vector<java.lang.String> strList60 = excludeCountry57.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry46.removeExcludedYears(intList53, strMap55, "hi!", strList60);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry62.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeCountry62.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeCountry62.ISOconverter();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry62.analysisType();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry73 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry73.analysisType();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry73.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry73.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry62.removeExcludedYears(intList69, strMap71, "hi!", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry46.removeExcludedYears(intList77, strMap78, "hi!", strList81);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry12.excludeYears(intList35, strMap44, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        java.util.Vector<java.lang.String> strList86 = null;
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry9.excludeYears(intList35, strMap84, "hi!", strList86);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry90 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList91 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.String> strList92 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.String> strList93 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry0.removeExcludedYears(intList87, strMap88, "hi!", strList93);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass95 = intList87.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(intList94);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry6.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry24.removeExcludedYears(intList28, strMap30, "", strList34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry6.excludeYears(intList21, strMap22, "hi!", strList34);
        java.util.Vector<java.lang.String> strList38 = excludeCountry6.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry54.analysisType();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry54.analysisType();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeCountry65.analysisType();
        java.util.Vector<java.lang.String> strList69 = excludeCountry65.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry54.removeExcludedYears(intList61, strMap63, "hi!", strList69);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry6.removeExcludedYears(intList43, strMap52, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry74.ISOconverter();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList88 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList88);
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.removeExcludedYears(intList43, strMap72, "", strList88);
        java.util.Vector<java.lang.String> strList91 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNotNull(strList91);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList71, strMap72, "", strList89);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap92 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass94 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList71, strMap72, "", strList89);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.Vector<java.lang.String> strList63 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry0.excludeYears(intList45, strMap47, "", strList63);
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList68 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList69 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass46 = strMap45.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry48 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList49 = excludeCountry48.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry48.analysisType();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList55 = new java.util.Vector<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry59.analysisType();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry59.analysisType();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry59.analysisType();
        java.util.Vector<java.lang.String> strList63 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry48.removeExcludedYears(intList55, strMap57, "hi!", strList63);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry0.removeExcludedYears(intList37, strMap46, "", strList63);
        java.util.Vector<java.lang.Integer> intList66 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry69 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList70 = excludeCountry69.initilizeCountries();
        java.util.Vector<java.lang.String> strList71 = excludeCountry69.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.removeExcludedYears(intList66, strMap67, "hi!", strList71);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strMap73);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.lang.Class<?> wildcardClass46 = strList44.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass4 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass78 = strList77.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry36.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry36.excludeYears(intList51, strMap52, "hi!", strList64);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry0.excludeYears(intList18, strMap34, "", strList64);
        java.lang.Class<?> wildcardClass69 = strList64.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass64 = strMap63.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(strList60);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass34 = strList33.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass47 = strList46.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry19.removeExcludedYears(intList35, strMap37, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry55 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry55.analysisType();
        java.util.Vector<java.lang.String> strList57 = excludeCountry55.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeCountry55.ISOconverter();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry55.analysisType();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry66.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeCountry66.analysisType();
        java.util.Vector<java.lang.String> strList69 = excludeCountry66.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry55.removeExcludedYears(intList62, strMap64, "hi!", strList69);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry0.excludeYears(intList35, strMap53, "hi!", strList69);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass17 = strMap16.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass40 = strMap39.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strList80);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry66.removeExcludedYears(intList70, strMap72, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry53.removeExcludedYears(intList70, strMap79, "hi!", strList83);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry88 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry88.analysisType();
        java.util.Vector<java.lang.String> strList90 = excludeCountry88.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry52.removeExcludedYears(intList85, strMap86, "hi!", strList90);
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry0.excludeYears(intList41, strMap50, "", strList90);
        java.util.ArrayList<java.lang.String> strList93 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList94 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList95 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(intList85);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNotNull(strList95);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList18 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass19 = strList18.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass57 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass39 = strList38.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList16 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList19 = new java.util.Vector<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry23.removeExcludedYears(intList40, strMap49, "hi!", strList53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry14.excludeYears(intList19, strMap21, "hi!", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        java.lang.String[] strArray88 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList89 = new java.util.Vector<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry59.removeExcludedYears(intList76, strMap85, "hi!", strList89);
        java.util.Vector<java.lang.String> strList92 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.String> strList93 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry0.excludeYears(intList19, strMap57, "", strList93);
        java.util.Map<java.lang.String, java.lang.String> strMap95 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap96 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap97 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass98 = strMap97.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(intList94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNotNull(strMap97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass9 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.Vector<java.lang.String> strList63 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry0.excludeYears(intList45, strMap47, "", strList63);
        java.util.Vector<java.lang.String> strList65 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strMap68);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList75 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strList75);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList10 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry13.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry13.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry13.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry13.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry18.analysisType();
        java.util.Vector<java.lang.String> strList20 = excludeCountry18.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeCountry18.ISOconverter();
        java.util.ArrayList<java.lang.String> strList22 = excludeCountry18.analysisType();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList30 = excludeCountry29.analysisType();
        java.util.ArrayList<java.lang.String> strList31 = excludeCountry29.analysisType();
        java.util.Vector<java.lang.String> strList32 = excludeCountry29.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry18.removeExcludedYears(intList25, strMap27, "hi!", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry36.ISOconverter();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry36.analysisType();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry47.analysisType();
        java.util.ArrayList<java.lang.String> strList49 = excludeCountry47.analysisType();
        java.util.Vector<java.lang.String> strList50 = excludeCountry47.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry36.removeExcludedYears(intList43, strMap45, "hi!", strList50);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeCountry52.ISOconverter();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry52.analysisType();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList59 = new java.util.Vector<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList59, intArray58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry63.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry63.analysisType();
        java.util.Vector<java.lang.String> strList66 = excludeCountry63.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry52.removeExcludedYears(intList59, strMap61, "hi!", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry70 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList71 = excludeCountry70.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry36.removeExcludedYears(intList67, strMap68, "hi!", strList71);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry13.excludeYears(intList33, strMap34, "hi!", strList71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry0.removeExcludedYears(intList10, strMap11, "hi!", strList71);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(intList74);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass41 = strList40.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass44 = strList43.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = strMap15.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList93 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap94 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList95 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap96 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList34 = new java.util.Vector<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList34, intArray33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        statsVisualiser.facade.ExcludeCountry excludeCountry51 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList55 = new java.util.Vector<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry51.removeExcludedYears(intList55, strMap57, "", strList61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry38.removeExcludedYears(intList55, strMap64, "hi!", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry29.excludeYears(intList34, strMap36, "hi!", strList68);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList26, strMap27, "hi!", strList68);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap54 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass56 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass81 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass7 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList83 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass85 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass48 = strMap47.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass39 = strMap38.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass33 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList50 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strList50);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strList48);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList17 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList15);
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass21 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strList5);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry6.analysisType();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry17.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeCountry17.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList22 = excludeCountry6.removeExcludedYears(intList13, strMap15, "hi!", strList21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry25.removeExcludedYears(intList29, strMap31, "", strList35);
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry25.removeExcludedYears(intList42, strMap51, "hi!", strList55);
        java.util.Vector<java.lang.String> strList58 = excludeCountry25.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry0.excludeYears(intList13, strMap23, "hi!", strList58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(intList22);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(strMap60);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass12 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry3.readJson();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry3.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = excludeCountry3.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeCountry19.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeCountry19.ISOconverter();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry19.analysisType();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry30 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList31 = excludeCountry30.analysisType();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry30.analysisType();
        java.util.Vector<java.lang.String> strList33 = excludeCountry30.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry19.removeExcludedYears(intList26, strMap28, "hi!", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry37.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeCountry37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry37.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry37.analysisType();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry48 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList49 = excludeCountry48.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry48.analysisType();
        java.util.Vector<java.lang.String> strList51 = excludeCountry48.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry37.removeExcludedYears(intList44, strMap46, "hi!", strList51);
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList72 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry37.removeExcludedYears(intList68, strMap69, "hi!", strList72);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry3.excludeYears(intList26, strMap35, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.util.Vector<java.lang.String> strList77 = null;
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList26, strMap75, "hi!", strList77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass81 = strMap80.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass33 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass51 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass65 = strMap64.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strList40);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { 0, 100 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry44.analysisType();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry44.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeCountry44.ISOconverter();
        java.util.Vector<java.lang.String> strList49 = excludeCountry44.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry0.excludeYears(intList40, strMap42, "", strList49);
        java.util.Vector<java.lang.String> strList51 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(strList51);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList63 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass62 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.Vector<java.lang.String> strList63 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry0.excludeYears(intList45, strMap47, "", strList63);
        java.util.Vector<java.lang.String> strList65 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList66 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.Vector<java.lang.Integer> intList42 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry45.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = excludeCountry45.readJson();
        java.util.Vector<java.lang.String> strList50 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry0.removeExcludedYears(intList42, strMap43, "", strList50);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(intList51);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList63 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList65 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList58 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass64 = strList63.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strList63);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry5.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry5.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry5.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry5.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.Integer> intList23 = excludeCountry11.removeExcludedYears(intList15, strMap17, "", strList21);
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry24.removeExcludedYears(intList28, strMap30, "", strList34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry11.removeExcludedYears(intList28, strMap37, "hi!", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.util.Vector<java.lang.String> strList46 = null;
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry5.removeExcludedYears(intList43, strMap44, "hi!", strList46);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = excludeCountry54.readJson();
        java.util.Vector<java.lang.String> strList68 = excludeCountry54.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry5.excludeYears(intList50, strMap52, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry72.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry72.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry72.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList79);
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass82 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList93 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap94 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList95 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList96 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap97 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(strList96);
        org.junit.Assert.assertNull(strMap97);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry76 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry76.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry76.analysisType();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList83 = new java.util.Vector<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList83, intArray82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry87 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry87.analysisType();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry87.analysisType();
        java.util.ArrayList<java.lang.String> strList90 = excludeCountry87.analysisType();
        java.util.Vector<java.lang.String> strList91 = excludeCountry87.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry76.removeExcludedYears(intList83, strMap85, "hi!", strList91);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = null;
        java.util.Vector<java.lang.String> strList95 = null;
        java.util.Vector<java.lang.Integer> intList96 = excludeCountry0.excludeYears(intList83, strMap93, "hi!", strList95);
        java.util.ArrayList<java.lang.String> strList97 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap98 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap99 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(intList96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNotNull(strMap98);
        org.junit.Assert.assertNotNull(strMap99);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry6.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry24.removeExcludedYears(intList28, strMap30, "", strList34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry6.excludeYears(intList21, strMap22, "hi!", strList34);
        java.util.Vector<java.lang.String> strList38 = excludeCountry6.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry54.analysisType();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry54.analysisType();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeCountry65.analysisType();
        java.util.Vector<java.lang.String> strList69 = excludeCountry65.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry54.removeExcludedYears(intList61, strMap63, "hi!", strList69);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry6.removeExcludedYears(intList43, strMap52, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList78 = new java.util.Vector<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList78, intArray77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = null;
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList84 = new java.util.Vector<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.Vector<java.lang.Integer> intList86 = excludeCountry74.removeExcludedYears(intList78, strMap80, "", strList84);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap87 = excludeCountry74.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = excludeCountry74.readJson();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList90 = excludeCountry74.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry74.readJson();
        java.util.Vector<java.lang.String> strList92 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList93 = excludeCountry0.removeExcludedYears(intList71, strMap72, "hi!", strList92);
        java.lang.Class<?> wildcardClass94 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(intList86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(intList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList18 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass19 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry4.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry4.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry4.excludeYears(intList19, strMap20, "hi!", strList32);
        java.util.Vector<java.lang.String> strList36 = excludeCountry4.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList59 = new java.util.Vector<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList59, intArray58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry63.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry63.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry63.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry63.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry52.removeExcludedYears(intList59, strMap61, "hi!", strList67);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry4.removeExcludedYears(intList41, strMap50, "", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry72.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry72.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = excludeCountry72.readJson();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry72.analysisType();
        java.util.Vector<java.lang.String> strList79 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry0.removeExcludedYears(intList41, strMap70, "hi!", strList79);
        java.lang.Class<?> wildcardClass81 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strList44);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList16 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass4 = strMap3.getClass();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry76 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry76.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry76.analysisType();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList83 = new java.util.Vector<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList83, intArray82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry87 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry87.analysisType();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry87.analysisType();
        java.util.ArrayList<java.lang.String> strList90 = excludeCountry87.analysisType();
        java.util.Vector<java.lang.String> strList91 = excludeCountry87.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry76.removeExcludedYears(intList83, strMap85, "hi!", strList91);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = null;
        java.util.Vector<java.lang.String> strList95 = null;
        java.util.Vector<java.lang.Integer> intList96 = excludeCountry0.excludeYears(intList83, strMap93, "hi!", strList95);
        java.util.ArrayList<java.lang.String> strList97 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap98 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList99 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(intList96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNotNull(strMap98);
        org.junit.Assert.assertNull(strList99);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { 0, 100 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry44.analysisType();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry44.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeCountry44.ISOconverter();
        java.util.Vector<java.lang.String> strList49 = excludeCountry44.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry0.excludeYears(intList40, strMap42, "", strList49);
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass53 = strList52.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList80 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass82 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry8.analysisType();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry19.analysisType();
        java.util.Vector<java.lang.String> strList22 = excludeCountry19.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList23 = excludeCountry8.removeExcludedYears(intList15, strMap17, "hi!", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry26 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry26.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry26.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeCountry26.ISOconverter();
        java.util.ArrayList<java.lang.String> strList30 = excludeCountry26.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = excludeCountry26.readJson();
        java.util.Vector<java.lang.String> strList32 = excludeCountry26.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry26.analysisType();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry26.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry26.readJson();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry26.analysisType();
        java.util.Vector<java.lang.String> strList37 = excludeCountry26.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry0.excludeYears(intList23, strMap24, "hi!", strList37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass39 = intList23.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(intList38);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass80 = strMap79.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry9.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = excludeCountry12.readJson();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry12.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = excludeCountry12.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry28 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry28.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry28.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeCountry28.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry28.analysisType();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry39.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry39.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry39.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry28.removeExcludedYears(intList35, strMap37, "hi!", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry46.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry46.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry46.ISOconverter();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry46.analysisType();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry57.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry57.analysisType();
        java.util.Vector<java.lang.String> strList60 = excludeCountry57.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry46.removeExcludedYears(intList53, strMap55, "hi!", strList60);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry62.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeCountry62.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeCountry62.ISOconverter();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry62.analysisType();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry73 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry73.analysisType();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry73.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry73.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry62.removeExcludedYears(intList69, strMap71, "hi!", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry46.removeExcludedYears(intList77, strMap78, "hi!", strList81);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry12.excludeYears(intList35, strMap44, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        java.util.Vector<java.lang.String> strList86 = null;
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry9.excludeYears(intList35, strMap84, "hi!", strList86);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry90 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList91 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.String> strList92 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.String> strList93 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry0.removeExcludedYears(intList87, strMap88, "hi!", strList93);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass95 = intList94.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(intList94);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList37 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass40 = strMap39.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList71, strMap72, "", strList89);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList94 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap96 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList97 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap98 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass99 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strMap98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 100, 0, 100 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry50.removeExcludedYears(intList54, strMap56, "", strList60);
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList67 = new java.util.Vector<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList67, intArray66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry63.removeExcludedYears(intList67, strMap69, "", strList73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry50.removeExcludedYears(intList67, strMap76, "hi!", strList80);
        java.util.Vector<java.lang.String> strList83 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.excludeYears(intList46, strMap48, "", strList83);
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList88 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strList88);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass8 = strMap7.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass10 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.Integer> intList7 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry12.removeExcludedYears(intList28, strMap30, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.util.Vector<java.lang.String> strList48 = null;
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry10.removeExcludedYears(intList45, strMap46, "", strList48);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry10.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeCountry10.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeCountry10.ISOconverter();
        java.util.Vector<java.lang.String> strList53 = excludeCountry10.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry10.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry10.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = excludeCountry10.readJson();
        java.util.Vector<java.lang.String> strList57 = excludeCountry10.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry0.removeExcludedYears(intList7, strMap8, "", strList57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNull(strMap59);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = strMap17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass44 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass48 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry5.removeExcludedYears(intList9, strMap11, "", strList15);
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry5.removeExcludedYears(intList22, strMap31, "hi!", strList35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry40.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry40.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry0.removeExcludedYears(intList37, strMap38, "", strList42);
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass46 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass43 = strMap42.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass84 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass57 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strList43);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList34 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry37.analysisType();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry37.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry55 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList59 = new java.util.Vector<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList59, intArray58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry55.removeExcludedYears(intList59, strMap61, "", strList65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry37.excludeYears(intList52, strMap53, "hi!", strList65);
        java.util.Vector<java.lang.String> strList69 = excludeCountry37.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry0.removeExcludedYears(intList34, strMap35, "", strList69);
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strMap72);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList16 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass17 = strList16.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList34 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry37.analysisType();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry37.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry55 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList59 = new java.util.Vector<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList59, intArray58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry55.removeExcludedYears(intList59, strMap61, "", strList65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry37.excludeYears(intList52, strMap53, "hi!", strList65);
        java.util.Vector<java.lang.String> strList69 = excludeCountry37.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry0.removeExcludedYears(intList34, strMap35, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(strMap71);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry45.removeExcludedYears(intList49, strMap51, "", strList55);
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry45.removeExcludedYears(intList62, strMap71, "hi!", strList75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry80.analysisType();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry80.analysisType();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry80.analysisType();
        java.util.Vector<java.lang.String> strList84 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry0.removeExcludedYears(intList62, strMap78, "hi!", strList84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass86 = intList85.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNull(intList85);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass4 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass8 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry8.analysisType();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry19.analysisType();
        java.util.Vector<java.lang.String> strList22 = excludeCountry19.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList23 = excludeCountry8.removeExcludedYears(intList15, strMap17, "hi!", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry26 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry26.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry26.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeCountry26.ISOconverter();
        java.util.ArrayList<java.lang.String> strList30 = excludeCountry26.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = excludeCountry26.readJson();
        java.util.Vector<java.lang.String> strList32 = excludeCountry26.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry26.analysisType();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry26.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry26.readJson();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry26.analysisType();
        java.util.Vector<java.lang.String> strList37 = excludeCountry26.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry0.excludeYears(intList23, strMap24, "hi!", strList37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass39 = intList38.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(intList38);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList15);
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass18 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList48, strMap57, "", strList69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass73 = intList72.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.Vector<java.lang.String> strList63 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry0.excludeYears(intList45, strMap47, "", strList63);
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList68 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass70 = strList69.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(strList69);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList83 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList80 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(strList81);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList93 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass95 = strMap94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap90 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap92 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass93 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList59 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(strMap60);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strMap79);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry5.removeExcludedYears(intList9, strMap11, "", strList15);
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry5.removeExcludedYears(intList22, strMap31, "hi!", strList35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry40.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry40.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry0.removeExcludedYears(intList37, strMap38, "", strList42);
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass47 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass38 = strMap37.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass41 = strList40.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(strList82);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList71, strMap72, "", strList89);
        java.util.Vector<java.lang.String> strList92 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strList92);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList59 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass60 = strList59.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList19 = new java.util.Vector<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry23.removeExcludedYears(intList40, strMap49, "hi!", strList53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry14.excludeYears(intList19, strMap21, "hi!", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        java.lang.String[] strArray88 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList89 = new java.util.Vector<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry59.removeExcludedYears(intList76, strMap85, "hi!", strList89);
        java.util.Vector<java.lang.String> strList92 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.String> strList93 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry0.excludeYears(intList19, strMap57, "", strList93);
        java.util.Map<java.lang.String, java.lang.String> strMap95 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap96 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList97 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap98 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass99 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(intList94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNotNull(strList97);
        org.junit.Assert.assertNotNull(strMap98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass38 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList7 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        java.util.Vector<java.lang.String> strList12 = excludeCountry10.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry10.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry29.removeExcludedYears(intList33, strMap35, "", strList39);
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry29.removeExcludedYears(intList46, strMap55, "hi!", strList59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry10.excludeYears(intList26, strMap27, "", strList59);
        java.util.Vector<java.lang.String> strList63 = excludeCountry10.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry10.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry10.readJson();
        java.util.Vector<java.lang.String> strList66 = excludeCountry10.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry0.excludeYears(intList7, strMap8, "", strList66);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass68 = intList67.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass39 = strMap38.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass76 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList19 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        statsVisualiser.facade.ExcludeCountry excludeCountry35 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList39 = new java.util.Vector<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList39, intArray38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry35.removeExcludedYears(intList39, strMap41, "", strList45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry22.removeExcludedYears(intList39, strMap48, "hi!", strList52);
        statsVisualiser.facade.ExcludeCountry excludeCountry55 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList59 = new java.util.Vector<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList59, intArray58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry55.removeExcludedYears(intList59, strMap61, "", strList65);
        statsVisualiser.facade.ExcludeCountry excludeCountry68 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList72 = new java.util.Vector<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList72, intArray71);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = null;
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList78 = new java.util.Vector<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry68.removeExcludedYears(intList72, strMap74, "", strList78);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = null;
        java.lang.String[] strArray84 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry55.removeExcludedYears(intList72, strMap81, "hi!", strList85);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = null;
        java.lang.String[] strArray92 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList93 = new java.util.Vector<java.lang.String>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList93, strArray92);
        java.util.Vector<java.lang.Integer> intList95 = excludeCountry22.removeExcludedYears(intList87, strMap88, "hi!", strList93);
        java.util.Vector<java.lang.Integer> intList96 = excludeCountry0.excludeYears(intList19, strMap20, "", strList93);
        java.util.Vector<java.lang.String> strList97 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap98 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(intList95);
        org.junit.Assert.assertNull(intList96);
        org.junit.Assert.assertNotNull(strList97);
        org.junit.Assert.assertNotNull(strMap98);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strMap63);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry5.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry5.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry5.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry5.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.Integer> intList23 = excludeCountry11.removeExcludedYears(intList15, strMap17, "", strList21);
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry24.removeExcludedYears(intList28, strMap30, "", strList34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry11.removeExcludedYears(intList28, strMap37, "hi!", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.util.Vector<java.lang.String> strList46 = null;
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry5.removeExcludedYears(intList43, strMap44, "hi!", strList46);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = excludeCountry54.readJson();
        java.util.Vector<java.lang.String> strList68 = excludeCountry54.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry5.excludeYears(intList50, strMap52, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry72.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry72.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry72.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList79);
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass84 = strMap83.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList34 = new java.util.Vector<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList34, intArray33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        statsVisualiser.facade.ExcludeCountry excludeCountry51 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList55 = new java.util.Vector<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry51.removeExcludedYears(intList55, strMap57, "", strList61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry38.removeExcludedYears(intList55, strMap64, "hi!", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry29.excludeYears(intList34, strMap36, "hi!", strList68);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList26, strMap27, "hi!", strList68);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strMap74);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry7.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry7.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry7.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry7.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry7.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        java.util.Vector<java.lang.Integer> intList46 = excludeCountry13.removeExcludedYears(intList29, strMap31, "", strList43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry49.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry49.ISOconverter();
        java.util.Vector<java.lang.String> strList65 = excludeCountry49.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry49.ISOconverter();
        java.util.Vector<java.lang.String> strList67 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry7.removeExcludedYears(intList29, strMap47, "", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList75 = new java.util.Vector<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList75, intArray74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = null;
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry71.removeExcludedYears(intList75, strMap77, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = excludeCountry71.readJson();
        java.util.Vector<java.lang.String> strList85 = excludeCountry71.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry71.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry71.ISOconverter();
        java.util.Vector<java.lang.String> strList88 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.removeExcludedYears(intList29, strMap69, "hi!", strList88);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap90 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(intList46);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(strMap90);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass17 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList63 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList64 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList50 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList18 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry9.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = excludeCountry12.readJson();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry12.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = excludeCountry12.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry28 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry28.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry28.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeCountry28.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry28.analysisType();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry39.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry39.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry39.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry28.removeExcludedYears(intList35, strMap37, "hi!", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry46.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry46.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry46.ISOconverter();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry46.analysisType();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry57.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry57.analysisType();
        java.util.Vector<java.lang.String> strList60 = excludeCountry57.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry46.removeExcludedYears(intList53, strMap55, "hi!", strList60);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry62.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeCountry62.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeCountry62.ISOconverter();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry62.analysisType();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry73 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry73.analysisType();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry73.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry73.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry62.removeExcludedYears(intList69, strMap71, "hi!", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry46.removeExcludedYears(intList77, strMap78, "hi!", strList81);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry12.excludeYears(intList35, strMap44, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        java.util.Vector<java.lang.String> strList86 = null;
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry9.excludeYears(intList35, strMap84, "hi!", strList86);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry90 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList91 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.String> strList92 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.String> strList93 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry0.removeExcludedYears(intList87, strMap88, "hi!", strList93);
        java.util.ArrayList<java.lang.String> strList95 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList96 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass97 = strList96.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(intList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNotNull(strList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap79);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass76 = strMap75.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry6.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry24.removeExcludedYears(intList28, strMap30, "", strList34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry6.excludeYears(intList21, strMap22, "hi!", strList34);
        java.util.Vector<java.lang.String> strList38 = excludeCountry6.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry54.analysisType();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry54.analysisType();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeCountry65.analysisType();
        java.util.Vector<java.lang.String> strList69 = excludeCountry65.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry54.removeExcludedYears(intList61, strMap63, "hi!", strList69);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry6.removeExcludedYears(intList43, strMap52, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry74.ISOconverter();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList88 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList88);
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.removeExcludedYears(intList43, strMap72, "", strList88);
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList92 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList93 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass7 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry59.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry7.removeExcludedYears(intList48, strMap57, "", strList61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry65.removeExcludedYears(intList69, strMap71, "", strList75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList48, strMap63, "hi!", strList75);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass80 = strMap79.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass42 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass18 = strMap17.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass10 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strList43);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass11 = strMap10.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList85 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap87 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strMap87);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList16 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass17 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry12.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList16 = excludeCountry14.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry14.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry14.analysisType();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry25.analysisType();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry25.analysisType();
        java.util.Vector<java.lang.String> strList28 = excludeCountry25.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList29 = excludeCountry14.removeExcludedYears(intList21, strMap23, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry32.removeExcludedYears(intList48, strMap50, "", strList62);
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry32.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry32.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry12.excludeYears(intList29, strMap30, "", strList67);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry0.removeExcludedYears(intList8, strMap10, "", strList67);
        java.util.Vector<java.lang.String> strList70 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(intList29);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass81 = strMap80.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList7 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry10.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry10.ISOconverter();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry10.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry10.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList20 = new java.util.Vector<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry16.removeExcludedYears(intList20, strMap22, "", strList26);
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry29.removeExcludedYears(intList33, strMap35, "", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry16.removeExcludedYears(intList33, strMap42, "hi!", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.util.Vector<java.lang.String> strList51 = null;
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry10.removeExcludedYears(intList48, strMap49, "hi!", strList51);
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList55 = new java.util.Vector<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = excludeCountry59.readJson();
        java.util.Vector<java.lang.String> strList73 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry10.excludeYears(intList55, strMap57, "", strList73);
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry10.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry10.analysisType();
        java.util.Vector<java.lang.String> strList77 = excludeCountry10.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList7, strMap8, "", strList77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass63 = strList62.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass37 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList14);
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry16.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeCountry16.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeCountry16.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry16.analysisType();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry27.analysisType();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry27.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry27.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry16.removeExcludedYears(intList23, strMap25, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList35 = excludeCountry34.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry0.removeExcludedYears(intList31, strMap32, "hi!", strList35);
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNull(strList37);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass9 = strList8.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList71, strMap72, "", strList89);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList94 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap96 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList97 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap98 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap99 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strMap98);
        org.junit.Assert.assertNotNull(strMap99);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.Vector<java.lang.String> strList63 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry0.excludeYears(intList45, strMap47, "", strList63);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList67 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strList67);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList64 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strList64);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry18.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry18.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeCountry18.ISOconverter();
        java.util.Vector<java.lang.String> strList22 = excludeCountry18.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry38.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry40.removeExcludedYears(intList56, strMap58, "", strList70);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = null;
        java.util.Vector<java.lang.String> strList76 = null;
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList73, strMap74, "", strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeCountry38.ISOconverter();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry38.analysisType();
        java.util.Vector<java.lang.String> strList80 = excludeCountry38.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry18.excludeYears(intList27, strMap36, "hi!", strList80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry84 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList85 = excludeCountry84.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry84.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap87 = excludeCountry84.readJson();
        java.util.Vector<java.lang.String> strList88 = excludeCountry84.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList27, strMap82, "", strList88);
        java.lang.Class<?> wildcardClass90 = strList88.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strList35);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.util.Vector<java.lang.String> strList46 = null;
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry34.excludeYears(intList42, strMap44, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry50.analysisType();
        java.util.Vector<java.lang.String> strList52 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry0.removeExcludedYears(intList42, strMap48, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap54 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass43 = strMap42.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap86 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass87 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass86 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry17.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeCountry17.ISOconverter();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry17.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry17.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry23.removeExcludedYears(intList40, strMap49, "hi!", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.util.Vector<java.lang.String> strList58 = null;
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry17.removeExcludedYears(intList55, strMap56, "hi!", strList58);
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry66.removeExcludedYears(intList70, strMap72, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry66.readJson();
        java.util.Vector<java.lang.String> strList80 = excludeCountry66.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry17.excludeYears(intList62, strMap64, "", strList80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry84 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry84.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry84.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry84.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeCountry84.ISOconverter();
        java.util.Vector<java.lang.String> strList89 = excludeCountry84.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList62, strMap82, "", strList89);
        java.util.Vector<java.lang.String> strList91 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNotNull(strList91);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strMap41);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList78 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass79 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strMap45);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.util.Vector<java.lang.String> strList46 = null;
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry34.excludeYears(intList42, strMap44, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry50.analysisType();
        java.util.Vector<java.lang.String> strList52 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry0.removeExcludedYears(intList42, strMap48, "", strList52);
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass55 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass52 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass51 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(strList65);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry5.removeExcludedYears(intList9, strMap11, "", strList15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry22.removeExcludedYears(intList38, strMap40, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.util.Vector<java.lang.String> strList58 = null;
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry20.removeExcludedYears(intList55, strMap56, "", strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry20.ISOconverter();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry20.analysisType();
        java.util.Vector<java.lang.String> strList62 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.excludeYears(intList9, strMap18, "hi!", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList65 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        java.util.Vector<java.lang.String> strList12 = excludeCountry10.initilizeCountries();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry22.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList25 = excludeCountry24.analysisType();
        java.util.Vector<java.lang.String> strList26 = excludeCountry24.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeCountry24.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry24.analysisType();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry35 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry35.analysisType();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry35.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry35.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry24.removeExcludedYears(intList31, strMap33, "hi!", strList38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry42.removeExcludedYears(intList58, strMap60, "", strList72);
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry42.analysisType();
        java.util.Vector<java.lang.String> strList77 = excludeCountry42.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry22.excludeYears(intList39, strMap40, "", strList77);
        java.util.Vector<java.lang.Integer> intList79 = excludeCountry10.removeExcludedYears(intList18, strMap20, "", strList77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry82 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry82.analysisType();
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry82.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeCountry82.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap86 = excludeCountry82.ISOconverter();
        java.util.Vector<java.lang.String> strList87 = excludeCountry82.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry0.excludeYears(intList79, strMap80, "", strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap89 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList90 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(intList79);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strList90);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList52 = new java.util.Vector<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList52, intArray51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap54 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry56 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry56.removeExcludedYears(intList60, strMap62, "", strList66);
        statsVisualiser.facade.ExcludeCountry excludeCountry69 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList73 = new java.util.Vector<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList73, intArray72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry69.removeExcludedYears(intList73, strMap75, "", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = null;
        java.lang.String[] strArray85 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList86 = new java.util.Vector<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry56.removeExcludedYears(intList73, strMap82, "hi!", strList86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry47.excludeYears(intList52, strMap54, "hi!", strList86);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap90 = null;
        java.util.Vector<java.lang.String> strList92 = null;
        java.util.Vector<java.lang.Integer> intList93 = excludeCountry0.removeExcludedYears(intList89, strMap90, "", strList92);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap94 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(intList93);
        org.junit.Assert.assertNull(strMap94);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry66.removeExcludedYears(intList70, strMap72, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry53.removeExcludedYears(intList70, strMap79, "hi!", strList83);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry88 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry88.analysisType();
        java.util.Vector<java.lang.String> strList90 = excludeCountry88.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry52.removeExcludedYears(intList85, strMap86, "hi!", strList90);
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry0.excludeYears(intList41, strMap50, "", strList90);
        java.util.ArrayList<java.lang.String> strList93 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap96 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(intList85);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNull(strMap96);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass64 = strList63.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strList63);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = strMap6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strList47);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass49 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry3.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry3.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry3.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.util.Vector<java.lang.String> strList44 = null;
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry3.removeExcludedYears(intList41, strMap42, "hi!", strList44);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry52.readJson();
        java.util.Vector<java.lang.String> strList66 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry3.excludeYears(intList48, strMap50, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry70 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry70.analysisType();
        java.util.Vector<java.lang.String> strList74 = excludeCountry70.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList67, strMap68, "", strList74);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass77 = strList76.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.util.Vector<java.lang.String> strList21 = null;
        java.util.Vector<java.lang.Integer> intList22 = excludeCountry0.excludeYears(intList10, strMap19, "hi!", strList21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass26 = strMap25.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNull(intList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(strList61);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 100, 0, 100 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry50.removeExcludedYears(intList54, strMap56, "", strList60);
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList67 = new java.util.Vector<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList67, intArray66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry63.removeExcludedYears(intList67, strMap69, "", strList73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry50.removeExcludedYears(intList67, strMap76, "hi!", strList80);
        java.util.Vector<java.lang.String> strList83 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.excludeYears(intList46, strMap48, "", strList83);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass86 = strMap85.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strMap85);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList6 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry9.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = excludeCountry9.readJson();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList25 = excludeCountry9.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = excludeCountry9.readJson();
        java.util.Vector<java.lang.String> strList27 = excludeCountry9.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry0.removeExcludedYears(intList6, strMap7, "hi!", strList27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNull(strMap29);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList14 = new java.util.Vector<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList14, intArray13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList20 = new java.util.Vector<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.Vector<java.lang.Integer> intList22 = excludeCountry10.removeExcludedYears(intList14, strMap16, "", strList20);
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry10.removeExcludedYears(intList27, strMap36, "hi!", strList40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry46.removeExcludedYears(intList63, strMap72, "hi!", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry81 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry81.analysisType();
        java.util.Vector<java.lang.String> strList83 = excludeCountry81.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry45.removeExcludedYears(intList78, strMap79, "hi!", strList83);
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeCountry45.ISOconverter();
        java.util.Vector<java.lang.String> strList86 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.String> strList87 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry0.excludeYears(intList27, strMap43, "hi!", strList87);
        java.lang.Class<?> wildcardClass89 = strList87.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(intList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry4.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry4.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry4.excludeYears(intList19, strMap20, "hi!", strList32);
        java.util.Vector<java.lang.String> strList36 = excludeCountry4.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList59 = new java.util.Vector<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList59, intArray58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry63.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry63.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry63.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry63.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry52.removeExcludedYears(intList59, strMap61, "hi!", strList67);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry4.removeExcludedYears(intList41, strMap50, "", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry72.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry72.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = excludeCountry72.readJson();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry72.analysisType();
        java.util.Vector<java.lang.String> strList79 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry0.removeExcludedYears(intList41, strMap70, "hi!", strList79);
        java.lang.Class<?> wildcardClass81 = strList79.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry3.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry3.excludeYears(intList18, strMap19, "hi!", strList31);
        java.util.Vector<java.lang.String> strList35 = excludeCountry3.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry51 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry51.analysisType();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry51.analysisType();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry62.analysisType();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry62.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry62.analysisType();
        java.util.Vector<java.lang.String> strList66 = excludeCountry62.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry51.removeExcludedYears(intList58, strMap60, "hi!", strList66);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry3.removeExcludedYears(intList40, strMap49, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry0.removeExcludedYears(intList68, strMap69, "hi!", strList73);
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry6.analysisType();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry17.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeCountry17.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList22 = excludeCountry6.removeExcludedYears(intList13, strMap15, "hi!", strList21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry25.removeExcludedYears(intList29, strMap31, "", strList35);
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry25.removeExcludedYears(intList42, strMap51, "hi!", strList55);
        java.util.Vector<java.lang.String> strList58 = excludeCountry25.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry0.excludeYears(intList13, strMap23, "hi!", strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass61 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(intList22);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Vector<java.lang.String> strList90 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap92 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(strMap92);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry5.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry5.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry5.analysisType();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList12 = new java.util.Vector<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList12, intArray11);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry16.analysisType();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry16.analysisType();
        java.util.Vector<java.lang.String> strList19 = excludeCountry16.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList20 = excludeCountry5.removeExcludedYears(intList12, strMap14, "hi!", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry23.analysisType();
        java.util.Vector<java.lang.String> strList25 = excludeCountry23.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeCountry23.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry23.analysisType();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList30 = new java.util.Vector<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList30, intArray29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList37 = excludeCountry34.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry23.removeExcludedYears(intList30, strMap32, "hi!", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry39.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry39.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry39.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry39.analysisType();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry50.analysisType();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry50.analysisType();
        java.util.Vector<java.lang.String> strList53 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry39.removeExcludedYears(intList46, strMap48, "hi!", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList58 = excludeCountry57.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry23.removeExcludedYears(intList54, strMap55, "hi!", strList58);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList20, strMap21, "hi!", strList58);
        statsVisualiser.facade.ExcludeCountry excludeCountry61 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry61.analysisType();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry61.analysisType();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry61.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry61.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry61.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry67 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList71 = new java.util.Vector<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList71, intArray70);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = null;
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.Integer> intList79 = excludeCountry67.removeExcludedYears(intList71, strMap73, "", strList77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = null;
        java.util.Vector<java.lang.String> strList82 = null;
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry61.excludeYears(intList71, strMap80, "hi!", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry86 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry86.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry86.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry86.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap90 = excludeCountry86.readJson();
        java.util.Vector<java.lang.String> strList91 = excludeCountry86.initilizeCountries();
        java.util.Vector<java.lang.String> strList92 = excludeCountry86.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList93 = excludeCountry0.excludeYears(intList71, strMap84, "", strList92);
        java.lang.Class<?> wildcardClass94 = intList71.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(intList20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(intList79);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(intList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass7 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList71, strMap72, "", strList89);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap92 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap94 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNull(strMap94);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList19 = new java.util.Vector<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry23.removeExcludedYears(intList40, strMap49, "hi!", strList53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry14.excludeYears(intList19, strMap21, "hi!", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        java.lang.String[] strArray88 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList89 = new java.util.Vector<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry59.removeExcludedYears(intList76, strMap85, "hi!", strList89);
        java.util.Vector<java.lang.String> strList92 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.String> strList93 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry0.excludeYears(intList19, strMap57, "", strList93);
        java.util.Map<java.lang.String, java.lang.String> strMap95 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap96 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList97 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(intList94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNull(strMap96);
        org.junit.Assert.assertNotNull(strList97);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.util.Vector<java.lang.String> strList46 = null;
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry34.excludeYears(intList42, strMap44, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry50.analysisType();
        java.util.Vector<java.lang.String> strList52 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry0.removeExcludedYears(intList42, strMap48, "", strList52);
        java.lang.Class<?> wildcardClass54 = strList52.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass46 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass42 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry7.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeCountry7.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList25 = excludeCountry24.analysisType();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry24.analysisType();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry24.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = excludeCountry24.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = excludeCountry24.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry30 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList34 = new java.util.Vector<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList34, intArray33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry30.removeExcludedYears(intList34, strMap36, "", strList40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.util.Vector<java.lang.String> strList45 = null;
        java.util.Vector<java.lang.Integer> intList46 = excludeCountry24.excludeYears(intList34, strMap43, "hi!", strList45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry49.analysisType();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry49.analysisType();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry49.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = excludeCountry49.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeCountry49.ISOconverter();
        java.util.Vector<java.lang.String> strList55 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry7.excludeYears(intList34, strMap47, "", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        java.lang.String[] strArray88 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList89 = new java.util.Vector<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry59.removeExcludedYears(intList76, strMap85, "hi!", strList89);
        java.util.Vector<java.lang.String> strList92 = excludeCountry59.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry59.ISOconverter();
        java.util.Vector<java.lang.String> strList94 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList95 = excludeCountry0.excludeYears(intList34, strMap57, "", strList94);
        java.util.ArrayList<java.lang.String> strList96 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList97 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap98 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(intList46);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNull(intList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNotNull(strList97);
        org.junit.Assert.assertNotNull(strMap98);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strList47);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry3.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.util.Vector<java.lang.String> strList15 = null;
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry3.excludeYears(intList11, strMap13, "", strList15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry21.removeExcludedYears(intList37, strMap39, "", strList51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.util.Vector<java.lang.String> strList57 = null;
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry19.removeExcludedYears(intList54, strMap55, "", strList57);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry19.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry19.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeCountry19.ISOconverter();
        java.util.Vector<java.lang.String> strList62 = excludeCountry19.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.removeExcludedYears(intList16, strMap17, "", strList62);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass66 = strMap65.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass40 = strMap39.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass47 = strMap46.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry59.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry7.removeExcludedYears(intList48, strMap57, "", strList61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry65.removeExcludedYears(intList69, strMap71, "", strList75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList48, strMap63, "hi!", strList75);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList83 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strList83);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass44 = strList43.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass19 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strList77);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass18 = strMap17.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.util.Vector<java.lang.String> strList21 = null;
        java.util.Vector<java.lang.Integer> intList22 = excludeCountry0.excludeYears(intList10, strMap19, "hi!", strList21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass25 = strMap24.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNull(intList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry3.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.util.Vector<java.lang.String> strList15 = null;
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry3.excludeYears(intList11, strMap13, "", strList15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry21.removeExcludedYears(intList37, strMap39, "", strList51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.util.Vector<java.lang.String> strList57 = null;
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry19.removeExcludedYears(intList54, strMap55, "", strList57);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry19.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry19.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeCountry19.ISOconverter();
        java.util.Vector<java.lang.String> strList62 = excludeCountry19.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.removeExcludedYears(intList16, strMap17, "", strList62);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 100, 0, 100 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry50.removeExcludedYears(intList54, strMap56, "", strList60);
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList67 = new java.util.Vector<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList67, intArray66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry63.removeExcludedYears(intList67, strMap69, "", strList73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry50.removeExcludedYears(intList67, strMap76, "hi!", strList80);
        java.util.Vector<java.lang.String> strList83 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.excludeYears(intList46, strMap48, "", strList83);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap86 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass6 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass39 = strList38.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass43 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList91 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap92 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList93 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(strList93);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strMap78);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.Integer> intList29 = excludeCountry17.removeExcludedYears(intList21, strMap23, "", strList27);
        statsVisualiser.facade.ExcludeCountry excludeCountry30 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList34 = new java.util.Vector<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList34, intArray33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry30.removeExcludedYears(intList34, strMap36, "", strList40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry17.removeExcludedYears(intList34, strMap43, "hi!", strList47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = excludeCountry17.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeCountry17.ISOconverter();
        java.util.Vector<java.lang.String> strList52 = excludeCountry17.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeCountry17.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry54.analysisType();
        java.util.Vector<java.lang.String> strList56 = excludeCountry54.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry54.ISOconverter();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry54.analysisType();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry65.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeCountry65.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry54.removeExcludedYears(intList61, strMap63, "hi!", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry72.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry72.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry72.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.String> strList80 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry17.removeExcludedYears(intList61, strMap70, "", strList80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry84 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry84.analysisType();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry84.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry84.ISOconverter();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry84.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap89 = excludeCountry84.readJson();
        java.util.Vector<java.lang.String> strList90 = excludeCountry84.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry84.analysisType();
        java.util.ArrayList<java.lang.String> strList92 = excludeCountry84.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = excludeCountry84.readJson();
        java.util.ArrayList<java.lang.String> strList94 = excludeCountry84.analysisType();
        java.util.Vector<java.lang.String> strList95 = excludeCountry84.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList96 = excludeCountry0.removeExcludedYears(intList81, strMap82, "hi!", strList95);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(intList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNull(intList96);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry7.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry7.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry7.ISOconverter();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry7.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = excludeCountry7.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        statsVisualiser.facade.ExcludeCountry excludeCountry26 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList30 = new java.util.Vector<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList30, intArray29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry26.removeExcludedYears(intList30, strMap32, "", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry13.removeExcludedYears(intList30, strMap39, "hi!", strList43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.util.Vector<java.lang.String> strList48 = null;
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry7.removeExcludedYears(intList45, strMap46, "hi!", strList48);
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList52 = new java.util.Vector<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList52, intArray51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap54 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry56 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry56.removeExcludedYears(intList60, strMap62, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = excludeCountry56.readJson();
        java.util.Vector<java.lang.String> strList70 = excludeCountry56.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry7.excludeYears(intList52, strMap54, "", strList70);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        java.util.Vector<java.lang.String> strList74 = null;
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList71, strMap72, "hi!", strList74);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass77 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = strList4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass8 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass19 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry6.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry6.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry6.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.util.Vector<java.lang.String> strList27 = null;
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry6.excludeYears(intList16, strMap25, "hi!", strList27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry31 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry31.analysisType();
        java.util.Vector<java.lang.String> strList33 = excludeCountry31.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry31.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry31.analysisType();
        java.util.Vector<java.lang.Integer> intList36 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry39.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry39.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry39.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry43 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList47 = new java.util.Vector<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry43.removeExcludedYears(intList47, strMap49, "", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList75 = new java.util.Vector<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList75, intArray74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = null;
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry71.removeExcludedYears(intList75, strMap77, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        java.lang.String[] strArray87 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList88 = new java.util.Vector<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry58.removeExcludedYears(intList75, strMap84, "hi!", strList88);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry39.excludeYears(intList55, strMap56, "", strList88);
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry31.excludeYears(intList36, strMap37, "", strList88);
        java.util.Vector<java.lang.Integer> intList93 = excludeCountry0.excludeYears(intList28, strMap29, "hi!", strList88);
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap95 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList96 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(intList93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(strList96);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(strMap46);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeCountry6.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry6.ISOconverter();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry6.analysisType();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry17.analysisType();
        java.util.Vector<java.lang.String> strList20 = excludeCountry17.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry6.removeExcludedYears(intList13, strMap15, "hi!", strList20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList25 = excludeCountry24.analysisType();
        java.util.Vector<java.lang.String> strList26 = excludeCountry24.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeCountry24.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry28 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList32 = new java.util.Vector<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList32, intArray31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.Integer> intList40 = excludeCountry28.removeExcludedYears(intList32, strMap34, "", strList38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry43 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList47 = new java.util.Vector<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry43.removeExcludedYears(intList47, strMap49, "", strList53);
        statsVisualiser.facade.ExcludeCountry excludeCountry56 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry56.removeExcludedYears(intList60, strMap62, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry43.removeExcludedYears(intList60, strMap69, "hi!", strList73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry24.excludeYears(intList40, strMap41, "", strList73);
        java.util.Vector<java.lang.String> strList77 = excludeCountry24.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry24.analysisType();
        java.util.Vector<java.lang.String> strList79 = excludeCountry24.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry0.removeExcludedYears(intList13, strMap22, "hi!", strList79);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(intList40);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(intList80);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass51 = strMap50.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList17 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strList37);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry5.initilizeCountries();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeCountry19.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeCountry19.ISOconverter();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry19.analysisType();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry30 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList31 = excludeCountry30.analysisType();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry30.analysisType();
        java.util.Vector<java.lang.String> strList33 = excludeCountry30.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry19.removeExcludedYears(intList26, strMap28, "hi!", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry57.removeExcludedYears(intList61, strMap63, "", strList67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry37.removeExcludedYears(intList53, strMap55, "", strList67);
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry37.analysisType();
        java.util.Vector<java.lang.String> strList72 = excludeCountry37.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry17.excludeYears(intList34, strMap35, "", strList72);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry5.removeExcludedYears(intList13, strMap15, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry77 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry77.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry77.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry77.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry77.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry77.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.removeExcludedYears(intList74, strMap75, "hi!", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strMap85);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList71, strMap72, "", strList89);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList94 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap96 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap97 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList98 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNotNull(strMap97);
        org.junit.Assert.assertNull(strList98);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList71, strMap72, "", strList89);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList93 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass94 = strList93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry3.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry3.analysisType();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeCountry14.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry3.removeExcludedYears(intList10, strMap12, "hi!", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry21.removeExcludedYears(intList37, strMap39, "", strList51);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList18, strMap19, "hi!", strList51);
        statsVisualiser.facade.ExcludeCountry excludeCountry56 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry56.analysisType();
        java.util.Vector<java.lang.String> strList58 = excludeCountry56.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry56.ISOconverter();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.util.Vector<java.lang.String> strList68 = null;
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry56.excludeYears(intList64, strMap66, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList73 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry72.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList80 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass83 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass38 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry31 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry31.removeExcludedYears(intList35, strMap37, "", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry18.removeExcludedYears(intList35, strMap44, "hi!", strList48);
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry18.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeCountry52.ISOconverter();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.util.Vector<java.lang.String> strList64 = null;
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry52.excludeYears(intList60, strMap62, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry68 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry68.analysisType();
        java.util.Vector<java.lang.String> strList70 = excludeCountry68.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry18.removeExcludedYears(intList60, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList7, strMap16, "", strList70);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strList76);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass48 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 1, 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = excludeCountry13.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = excludeCountry13.readJson();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry13.analysisType();
        java.util.Vector<java.lang.Integer> intList29 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry45.removeExcludedYears(intList49, strMap51, "", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry32.removeExcludedYears(intList49, strMap58, "hi!", strList62);
        java.util.Vector<java.lang.String> strList65 = excludeCountry32.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry66.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeCountry66.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry66.ISOconverter();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry66.analysisType();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList73 = new java.util.Vector<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList73, intArray72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry77 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry77.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry77.analysisType();
        java.util.Vector<java.lang.String> strList80 = excludeCountry77.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry66.removeExcludedYears(intList73, strMap75, "hi!", strList80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry84 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry84.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry84.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry32.removeExcludedYears(intList73, strMap82, "", strList86);
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry13.excludeYears(intList29, strMap30, "", strList86);
        java.util.Vector<java.lang.String> strList89 = excludeCountry13.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList9, strMap11, "", strList89);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass91 = intList90.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.Integer> intList46 = excludeCountry34.removeExcludedYears(intList38, strMap40, "", strList44);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry34.removeExcludedYears(intList50, strMap52, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry70 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry70.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeCountry70.ISOconverter();
        java.util.Vector<java.lang.String> strList74 = excludeCountry70.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList50, strMap68, "", strList74);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(intList46);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strMap77);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList92 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass93 = strList92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry5.initilizeCountries();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeCountry19.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeCountry19.ISOconverter();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry19.analysisType();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry30 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList31 = excludeCountry30.analysisType();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry30.analysisType();
        java.util.Vector<java.lang.String> strList33 = excludeCountry30.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry19.removeExcludedYears(intList26, strMap28, "hi!", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry57.removeExcludedYears(intList61, strMap63, "", strList67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry37.removeExcludedYears(intList53, strMap55, "", strList67);
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry37.analysisType();
        java.util.Vector<java.lang.String> strList72 = excludeCountry37.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry17.excludeYears(intList34, strMap35, "", strList72);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry5.removeExcludedYears(intList13, strMap15, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry77 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry77.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry77.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry77.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry77.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry77.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.removeExcludedYears(intList74, strMap75, "hi!", strList82);
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap86 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass87 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = strList6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass38 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList80 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList9 = excludeCountry8.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry13.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry13.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry13.ISOconverter();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry13.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = excludeCountry13.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.util.Vector<java.lang.String> strList54 = null;
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry13.removeExcludedYears(intList51, strMap52, "hi!", strList54);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry62.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry62.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry13.excludeYears(intList58, strMap60, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry80.analysisType();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry80.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry80.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry80.ISOconverter();
        java.util.Vector<java.lang.String> strList85 = excludeCountry80.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry80.readJson();
        java.util.Vector<java.lang.String> strList87 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry8.excludeYears(intList77, strMap78, "hi!", strList87);
        java.util.Vector<java.lang.String> strList89 = excludeCountry8.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.removeExcludedYears(intList5, strMap6, "", strList89);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(strMap91);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass5 = strMap4.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry44.analysisType();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry44.analysisType();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry55 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry55.analysisType();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry55.analysisType();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry55.analysisType();
        java.util.Vector<java.lang.String> strList59 = excludeCountry55.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry44.removeExcludedYears(intList51, strMap53, "hi!", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry63.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry63.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry63.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry63.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry0.excludeYears(intList60, strMap61, "hi!", strList67);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.Integer> intList46 = excludeCountry34.removeExcludedYears(intList38, strMap40, "", strList44);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry34.removeExcludedYears(intList50, strMap52, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry70 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry70.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeCountry70.ISOconverter();
        java.util.Vector<java.lang.String> strList74 = excludeCountry70.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList50, strMap68, "", strList74);
        statsVisualiser.facade.ExcludeCountry excludeCountry76 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry76.analysisType();
        java.util.Vector<java.lang.String> strList78 = excludeCountry76.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry76.ISOconverter();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry76.analysisType();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList83 = new java.util.Vector<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList83, intArray82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry87 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry87.analysisType();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry87.analysisType();
        java.util.Vector<java.lang.String> strList90 = excludeCountry87.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry76.removeExcludedYears(intList83, strMap85, "hi!", strList90);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap92 = null;
        java.util.Vector<java.lang.String> strList94 = null;
        java.util.Vector<java.lang.Integer> intList95 = excludeCountry0.removeExcludedYears(intList83, strMap92, "hi!", strList94);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap96 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(intList46);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNull(intList95);
        org.junit.Assert.assertNull(strMap96);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        java.util.Vector<java.lang.String> strList84 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass85 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass49 = strList48.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass47 = strList46.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry5.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry5.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry5.analysisType();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList12 = new java.util.Vector<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList12, intArray11);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry16.analysisType();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry16.analysisType();
        java.util.Vector<java.lang.String> strList19 = excludeCountry16.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList20 = excludeCountry5.removeExcludedYears(intList12, strMap14, "hi!", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry23.analysisType();
        java.util.Vector<java.lang.String> strList25 = excludeCountry23.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeCountry23.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry23.analysisType();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList30 = new java.util.Vector<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList30, intArray29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList37 = excludeCountry34.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry23.removeExcludedYears(intList30, strMap32, "hi!", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry39.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry39.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry39.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry39.analysisType();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry50.analysisType();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry50.analysisType();
        java.util.Vector<java.lang.String> strList53 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry39.removeExcludedYears(intList46, strMap48, "hi!", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList58 = excludeCountry57.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry23.removeExcludedYears(intList54, strMap55, "hi!", strList58);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList20, strMap21, "hi!", strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList63 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(intList20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strList63);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry76 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry76.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry76.analysisType();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList83 = new java.util.Vector<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList83, intArray82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry87 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry87.analysisType();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry87.analysisType();
        java.util.ArrayList<java.lang.String> strList90 = excludeCountry87.analysisType();
        java.util.Vector<java.lang.String> strList91 = excludeCountry87.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry76.removeExcludedYears(intList83, strMap85, "hi!", strList91);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = null;
        java.util.Vector<java.lang.String> strList95 = null;
        java.util.Vector<java.lang.Integer> intList96 = excludeCountry0.excludeYears(intList83, strMap93, "hi!", strList95);
        java.util.Map<java.lang.String, java.lang.String> strMap97 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass98 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(intList96);
        org.junit.Assert.assertNotNull(strMap97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry5.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList12 = new java.util.Vector<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList12, intArray11);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.Integer> intList20 = excludeCountry8.removeExcludedYears(intList12, strMap14, "", strList18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = excludeCountry8.readJson();
        java.util.ArrayList<java.lang.String> strList22 = excludeCountry8.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = excludeCountry8.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList25 = excludeCountry24.analysisType();
        java.util.Vector<java.lang.String> strList26 = excludeCountry24.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeCountry24.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry24.analysisType();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry35 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry35.analysisType();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry35.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry35.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry24.removeExcludedYears(intList31, strMap33, "hi!", strList38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry42.analysisType();
        java.util.Vector<java.lang.String> strList44 = excludeCountry42.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry42.ISOconverter();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry42.analysisType();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList56 = excludeCountry53.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry42.removeExcludedYears(intList49, strMap51, "hi!", strList56);
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry58.analysisType();
        java.util.Vector<java.lang.String> strList60 = excludeCountry58.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeCountry58.ISOconverter();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry58.analysisType();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList65 = new java.util.Vector<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList65, intArray64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry69 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry69.analysisType();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry69.analysisType();
        java.util.Vector<java.lang.String> strList72 = excludeCountry69.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry58.removeExcludedYears(intList65, strMap67, "hi!", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry76 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList77 = excludeCountry76.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry42.removeExcludedYears(intList73, strMap74, "hi!", strList77);
        java.util.Vector<java.lang.Integer> intList79 = excludeCountry8.excludeYears(intList31, strMap40, "", strList77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = null;
        java.util.Vector<java.lang.String> strList82 = null;
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry5.excludeYears(intList31, strMap80, "hi!", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry86 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList87 = excludeCountry86.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = excludeCountry86.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap89 = excludeCountry86.readJson();
        java.util.Vector<java.lang.String> strList90 = excludeCountry86.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList31, strMap84, "hi!", strList90);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(intList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(intList79);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(intList91);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass80 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass9 = strList8.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList14);
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry16.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeCountry16.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeCountry16.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry16.analysisType();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry27.analysisType();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry27.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry27.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry16.removeExcludedYears(intList23, strMap25, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.Integer> intList46 = excludeCountry34.removeExcludedYears(intList38, strMap40, "", strList44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry34.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry34.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = excludeCountry34.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry34.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry51 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry51.analysisType();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry51.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry51.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry51.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = excludeCountry51.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry57.removeExcludedYears(intList61, strMap63, "", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.util.Vector<java.lang.String> strList72 = null;
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry51.excludeYears(intList61, strMap70, "hi!", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry76 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry76.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry76.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry76.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry76.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry76.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry76.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry34.excludeYears(intList61, strMap74, "", strList82);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.removeExcludedYears(intList31, strMap32, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(intList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strMap85);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry50.removeExcludedYears(intList54, strMap56, "", strList60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry37.removeExcludedYears(intList54, strMap63, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry72.readJson();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry72.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeCountry72.ISOconverter();
        java.util.Vector<java.lang.String> strList89 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList54, strMap70, "hi!", strList89);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass91 = intList90.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = strMap36.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry9.analysisType();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        java.util.ArrayList<java.lang.String> strList22 = excludeCountry20.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry20.analysisType();
        java.util.Vector<java.lang.String> strList24 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry9.removeExcludedYears(intList16, strMap18, "hi!", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry28 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry28.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeCountry28.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry31 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry31.removeExcludedYears(intList35, strMap37, "", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry28.excludeYears(intList43, strMap44, "hi!", strList56);
        java.util.Vector<java.lang.String> strList60 = excludeCountry28.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = excludeCountry28.readJson();
        java.util.Vector<java.lang.String> strList62 = excludeCountry28.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.excludeYears(intList16, strMap26, "hi!", strList62);
        java.util.Vector<java.lang.String> strList64 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNotNull(strList64);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(strMap84);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strList48);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass8 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass57 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass4 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry4.readJson();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry4.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = excludeCountry4.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        java.util.Vector<java.lang.String> strList22 = excludeCountry20.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeCountry20.ISOconverter();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry20.analysisType();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry31 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry31.analysisType();
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry31.analysisType();
        java.util.Vector<java.lang.String> strList34 = excludeCountry31.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry20.removeExcludedYears(intList27, strMap29, "hi!", strList34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry38.analysisType();
        java.util.Vector<java.lang.String> strList40 = excludeCountry38.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry38.ISOconverter();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry38.analysisType();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry49.analysisType();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry49.analysisType();
        java.util.Vector<java.lang.String> strList52 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry38.removeExcludedYears(intList45, strMap47, "hi!", strList52);
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry54.analysisType();
        java.util.Vector<java.lang.String> strList56 = excludeCountry54.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry54.ISOconverter();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry54.analysisType();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry65.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeCountry65.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry54.removeExcludedYears(intList61, strMap63, "hi!", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList73 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry38.removeExcludedYears(intList69, strMap70, "hi!", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry4.excludeYears(intList27, strMap36, "", strList73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = null;
        java.util.Vector<java.lang.String> strList78 = null;
        java.util.Vector<java.lang.Integer> intList79 = excludeCountry0.removeExcludedYears(intList27, strMap76, "", strList78);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNull(intList79);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.util.Vector<java.lang.String> strList46 = null;
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry34.excludeYears(intList42, strMap44, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry50.analysisType();
        java.util.Vector<java.lang.String> strList52 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry0.removeExcludedYears(intList42, strMap48, "", strList52);
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList55 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass57 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry17.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = excludeCountry17.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry17.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry17.excludeYears(intList27, strMap36, "hi!", strList38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry42.analysisType();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry42.analysisType();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry42.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry42.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry42.ISOconverter();
        java.util.Vector<java.lang.String> strList48 = excludeCountry42.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry0.excludeYears(intList27, strMap40, "", strList48);
        java.lang.Class<?> wildcardClass50 = strList48.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        java.util.Vector<java.lang.Integer> intList40 = excludeCountry7.removeExcludedYears(intList23, strMap25, "", strList37);
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry7.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry7.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry0.excludeYears(intList4, strMap5, "", strList43);
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(intList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strList45);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass3 = strList2.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList6 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry9.readJson();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList25 = excludeCountry9.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = excludeCountry9.readJson();
        java.util.Vector<java.lang.String> strList27 = excludeCountry9.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry0.excludeYears(intList6, strMap7, "", strList27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strList31);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass42 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList12 = excludeCountry11.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry11.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry29.removeExcludedYears(intList33, strMap35, "", strList39);
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry29.removeExcludedYears(intList46, strMap55, "hi!", strList59);
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry29.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry63.analysisType();
        java.util.Vector<java.lang.String> strList65 = excludeCountry63.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry63.ISOconverter();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList71 = new java.util.Vector<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList71, intArray70);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = null;
        java.util.Vector<java.lang.String> strList75 = null;
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry63.excludeYears(intList71, strMap73, "", strList75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry79 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry79.analysisType();
        java.util.Vector<java.lang.String> strList81 = excludeCountry79.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry29.removeExcludedYears(intList71, strMap77, "", strList81);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry11.excludeYears(intList18, strMap27, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry86 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap87 = excludeCountry86.readJson();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry86.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry86.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList83, strMap84, "hi!", strList89);
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap92 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strMap92);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeCountry6.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry6.ISOconverter();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList14 = new java.util.Vector<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList14, intArray13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        java.util.Vector<java.lang.String> strList18 = null;
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry6.excludeYears(intList14, strMap16, "", strList18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList23 = excludeCountry22.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = excludeCountry22.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry25.removeExcludedYears(intList29, strMap31, "", strList35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry40.removeExcludedYears(intList57, strMap66, "hi!", strList70);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry40.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry74.ISOconverter();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList82 = new java.util.Vector<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList82, intArray81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        java.util.Vector<java.lang.String> strList86 = null;
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry74.excludeYears(intList82, strMap84, "", strList86);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry90 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry90.analysisType();
        java.util.Vector<java.lang.String> strList92 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList93 = excludeCountry40.removeExcludedYears(intList82, strMap88, "", strList92);
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry22.excludeYears(intList29, strMap38, "", strList92);
        java.util.Vector<java.lang.Integer> intList95 = excludeCountry0.removeExcludedYears(intList14, strMap20, "hi!", strList92);
        java.util.Map<java.lang.String, java.lang.String> strMap96 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass97 = strMap96.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(intList93);
        org.junit.Assert.assertNull(intList94);
        org.junit.Assert.assertNull(intList95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass38 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList12 = new java.util.Vector<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList12, intArray11);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList20 = new java.util.Vector<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry16.removeExcludedYears(intList20, strMap22, "", strList26);
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry29.removeExcludedYears(intList33, strMap35, "", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry16.removeExcludedYears(intList33, strMap42, "hi!", strList46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry7.excludeYears(intList12, strMap14, "hi!", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.util.Vector<java.lang.String> strList52 = null;
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry0.removeExcludedYears(intList12, strMap50, "", strList52);
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNotNull(strList54);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry36.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry36.excludeYears(intList51, strMap52, "hi!", strList64);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry0.excludeYears(intList18, strMap34, "", strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList71 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strList73);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList80 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList83 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strList83);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList48, strMap57, "", strList69);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList75 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass76 = strList75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList48, strMap57, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strList74);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass57 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList18 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList6 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry9.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = excludeCountry9.readJson();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList25 = excludeCountry9.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = excludeCountry9.readJson();
        java.util.Vector<java.lang.String> strList27 = excludeCountry9.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry0.removeExcludedYears(intList6, strMap7, "hi!", strList27);
        java.lang.Class<?> wildcardClass29 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList6 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry9.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = excludeCountry9.readJson();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList25 = excludeCountry9.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = excludeCountry9.readJson();
        java.util.Vector<java.lang.String> strList27 = excludeCountry9.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry0.removeExcludedYears(intList6, strMap7, "hi!", strList27);
        java.util.Vector<java.lang.String> strList29 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNotNull(strList29);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry6.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry24.removeExcludedYears(intList28, strMap30, "", strList34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry6.excludeYears(intList21, strMap22, "hi!", strList34);
        java.util.Vector<java.lang.String> strList38 = excludeCountry6.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry54.analysisType();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry54.analysisType();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeCountry65.analysisType();
        java.util.Vector<java.lang.String> strList69 = excludeCountry65.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry54.removeExcludedYears(intList61, strMap63, "hi!", strList69);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry6.removeExcludedYears(intList43, strMap52, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry74.ISOconverter();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList88 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList88);
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.removeExcludedYears(intList43, strMap72, "", strList88);
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strMap92);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass8 = strMap7.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList12 = new java.util.Vector<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList12, intArray11);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.Integer> intList20 = excludeCountry8.removeExcludedYears(intList12, strMap14, "", strList18);
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry28 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList32 = new java.util.Vector<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList32, intArray31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.Integer> intList40 = excludeCountry28.removeExcludedYears(intList32, strMap34, "", strList38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry8.removeExcludedYears(intList24, strMap26, "", strList38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry44.analysisType();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry44.ISOconverter();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry44.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = excludeCountry44.readJson();
        java.util.Vector<java.lang.String> strList50 = excludeCountry44.initilizeCountries();
        java.util.Vector<java.lang.String> strList51 = excludeCountry44.initilizeCountries();
        java.util.Vector<java.lang.String> strList52 = excludeCountry44.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeCountry44.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry0.excludeYears(intList41, strMap42, "hi!", strList53);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(intList20);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(intList40);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        java.util.Vector<java.lang.String> strList12 = excludeCountry10.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry10.ISOconverter();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry10.analysisType();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList22 = excludeCountry21.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry21.analysisType();
        java.util.Vector<java.lang.String> strList24 = excludeCountry21.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry10.removeExcludedYears(intList17, strMap19, "hi!", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry28 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry28.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry28.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeCountry28.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeCountry28.ISOconverter();
        java.util.Vector<java.lang.String> strList33 = excludeCountry28.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList33);
        java.lang.Class<?> wildcardClass35 = intList17.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry48 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList49 = excludeCountry48.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry48.analysisType();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList55 = new java.util.Vector<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry59.analysisType();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry59.analysisType();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry59.analysisType();
        java.util.Vector<java.lang.String> strList63 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry48.removeExcludedYears(intList55, strMap57, "hi!", strList63);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry0.removeExcludedYears(intList37, strMap46, "", strList63);
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList68 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strList68);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass43 = strList42.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strList47);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry5.removeExcludedYears(intList9, strMap11, "", strList15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry22.removeExcludedYears(intList38, strMap40, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.util.Vector<java.lang.String> strList58 = null;
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry20.removeExcludedYears(intList55, strMap56, "", strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry20.ISOconverter();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry20.analysisType();
        java.util.Vector<java.lang.String> strList62 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.excludeYears(intList9, strMap18, "hi!", strList62);
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNull(strList64);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList52 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = strList16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry7.ISOconverter();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), (-1), (-1), 0, 1 };
        java.util.Vector<java.lang.Integer> intList52 = new java.util.Vector<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList52, intArray51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap54 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry56 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry56.removeExcludedYears(intList60, strMap62, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = excludeCountry56.readJson();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry56.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeCountry56.ISOconverter();
        java.util.Vector<java.lang.String> strList72 = excludeCountry56.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry7.excludeYears(intList52, strMap54, "hi!", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry76 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList77 = excludeCountry76.initilizeCountries();
        java.util.Vector<java.lang.String> strList78 = excludeCountry76.initilizeCountries();
        java.util.Vector<java.lang.String> strList79 = excludeCountry76.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry76.readJson();
        java.util.Vector<java.lang.String> strList81 = excludeCountry76.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry0.excludeYears(intList52, strMap74, "", strList81);
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass84 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList36);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList65 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList66 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass67 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass6 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList78 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strMap79);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass36 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.util.Vector<java.lang.String> strList12 = null;
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry0.excludeYears(intList8, strMap10, "", strList12);
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(strList14);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList58 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap90 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass91 = strMap90.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(strMap90);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass44 = strMap43.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass5 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass43 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry3.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry3.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry3.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.util.Vector<java.lang.String> strList44 = null;
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry3.removeExcludedYears(intList41, strMap42, "hi!", strList44);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry52.readJson();
        java.util.Vector<java.lang.String> strList66 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry3.excludeYears(intList48, strMap50, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry70 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry70.analysisType();
        java.util.Vector<java.lang.String> strList74 = excludeCountry70.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList67, strMap68, "", strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass78 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList35 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry38.analysisType();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry38.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap54 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry56 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry56.removeExcludedYears(intList60, strMap62, "", strList66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry38.excludeYears(intList53, strMap54, "hi!", strList66);
        java.util.Vector<java.lang.String> strList70 = excludeCountry38.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = excludeCountry38.readJson();
        java.util.Vector<java.lang.String> strList72 = excludeCountry38.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList35, strMap36, "hi!", strList72);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(intList73);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass10 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList17 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList19 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass50 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry3.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry3.excludeYears(intList18, strMap19, "hi!", strList31);
        java.util.Vector<java.lang.String> strList35 = excludeCountry3.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry51 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry51.analysisType();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry51.analysisType();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry62.analysisType();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry62.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry62.analysisType();
        java.util.Vector<java.lang.String> strList66 = excludeCountry62.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry51.removeExcludedYears(intList58, strMap60, "hi!", strList66);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry3.removeExcludedYears(intList40, strMap49, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry0.removeExcludedYears(intList68, strMap69, "hi!", strList73);
        java.util.Vector<java.lang.String> strList75 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.ArrayList<java.lang.String> strList90 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(strList90);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList18 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList55 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass57 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass44 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList14);
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry16.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeCountry16.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeCountry16.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry16.analysisType();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry27.analysisType();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry27.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry27.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry16.removeExcludedYears(intList23, strMap25, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList35 = excludeCountry34.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry0.removeExcludedYears(intList31, strMap32, "hi!", strList35);
        java.util.Vector<java.lang.String> strList37 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry63.analysisType();
        java.util.Vector<java.lang.String> strList65 = excludeCountry63.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry63.ISOconverter();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry63.analysisType();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList77 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry63.removeExcludedYears(intList70, strMap72, "hi!", strList77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry81 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry81.analysisType();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry81.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry81.ISOconverter();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry81.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry81.readJson();
        java.util.Vector<java.lang.String> strList87 = excludeCountry81.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry0.excludeYears(intList70, strMap79, "", strList87);
        java.util.Vector<java.lang.String> strList89 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass90 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass39 = strMap38.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList59 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass60 = strList59.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry17.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = excludeCountry17.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry17.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry17.excludeYears(intList27, strMap36, "hi!", strList38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry42.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry42.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeCountry42.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeCountry42.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry0.excludeYears(intList39, strMap40, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNull(strMap48);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 100, 0, 100 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry50.removeExcludedYears(intList54, strMap56, "", strList60);
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList67 = new java.util.Vector<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList67, intArray66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry63.removeExcludedYears(intList67, strMap69, "", strList73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry50.removeExcludedYears(intList67, strMap76, "hi!", strList80);
        java.util.Vector<java.lang.String> strList83 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.excludeYears(intList46, strMap48, "", strList83);
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap86 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass87 = strMap86.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList7 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        java.util.Vector<java.lang.String> strList12 = excludeCountry10.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry10.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry29.removeExcludedYears(intList33, strMap35, "", strList39);
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry29.removeExcludedYears(intList46, strMap55, "hi!", strList59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry10.excludeYears(intList26, strMap27, "", strList59);
        java.util.Vector<java.lang.String> strList63 = excludeCountry10.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry10.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry10.readJson();
        java.util.Vector<java.lang.String> strList66 = excludeCountry10.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry0.excludeYears(intList7, strMap8, "", strList66);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass69 = strMap68.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass43 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList85 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strList85);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry33.removeExcludedYears(intList49, strMap51, "", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry69 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList73 = new java.util.Vector<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList73, intArray72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry69.removeExcludedYears(intList73, strMap75, "", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = excludeCountry69.readJson();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry69.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry69.ISOconverter();
        java.util.Vector<java.lang.String> strList85 = excludeCountry69.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList86 = excludeCountry0.excludeYears(intList49, strMap67, "hi!", strList85);
        java.util.Vector<java.lang.String> strList87 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList88 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(intList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(strList88);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry4.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry4.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry4.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry4.readJson();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry4.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry10.analysisType();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList22 = excludeCountry21.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry21.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry21.analysisType();
        java.util.Vector<java.lang.String> strList25 = excludeCountry21.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry10.removeExcludedYears(intList17, strMap19, "hi!", strList25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry29.removeExcludedYears(intList33, strMap35, "", strList39);
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry29.removeExcludedYears(intList46, strMap55, "hi!", strList59);
        java.util.Vector<java.lang.String> strList62 = excludeCountry29.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry4.excludeYears(intList17, strMap27, "hi!", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = excludeCountry66.readJson();
        java.util.ArrayList<java.lang.String> strList68 = excludeCountry66.analysisType();
        java.util.Vector<java.lang.String> strList69 = excludeCountry66.initilizeCountries();
        java.util.Vector<java.lang.String> strList70 = excludeCountry66.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = excludeCountry66.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeCountry66.ISOconverter();
        java.util.Vector<java.lang.String> strList73 = excludeCountry66.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry0.removeExcludedYears(intList63, strMap64, "hi!", strList73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strMap75);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList84 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList85 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(strList85);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList16 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass84 = intList83.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass18 = strMap17.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList12 = new java.util.Vector<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList12, intArray11);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.Integer> intList20 = excludeCountry8.removeExcludedYears(intList12, strMap14, "", strList18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = excludeCountry8.readJson();
        java.util.ArrayList<java.lang.String> strList22 = excludeCountry8.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeCountry8.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry25.removeExcludedYears(intList29, strMap31, "", strList35);
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry25.removeExcludedYears(intList42, strMap51, "hi!", strList55);
        java.util.Vector<java.lang.String> strList58 = excludeCountry25.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry59.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeCountry59.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeCountry59.ISOconverter();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry59.analysisType();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry70 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry70.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry70.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry59.removeExcludedYears(intList66, strMap68, "hi!", strList73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry77 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry77.analysisType();
        java.util.Vector<java.lang.String> strList79 = excludeCountry77.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry25.removeExcludedYears(intList66, strMap75, "", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = null;
        java.util.Vector<java.lang.String> strList83 = null;
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry8.removeExcludedYears(intList66, strMap81, "hi!", strList83);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry87 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry87.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap89 = excludeCountry87.ISOconverter();
        java.util.Vector<java.lang.Integer> intList90 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = null;
        java.util.Vector<java.lang.String> strList93 = null;
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry87.removeExcludedYears(intList90, strMap91, "", strList93);
        java.util.Vector<java.lang.String> strList95 = excludeCountry87.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList96 = excludeCountry0.excludeYears(intList66, strMap85, "hi!", strList95);
        java.util.ArrayList<java.lang.String> strList97 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(intList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNull(intList94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNull(intList96);
        org.junit.Assert.assertNull(strList97);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry36.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry36.excludeYears(intList51, strMap52, "hi!", strList64);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry0.excludeYears(intList18, strMap34, "", strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList70 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList71 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass78 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry8.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry8.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry8.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry8.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry8.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeCountry8.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry0.removeExcludedYears(intList5, strMap6, "hi!", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList20 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass21 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass46 = strMap45.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass44 = strList43.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList20 = new java.util.Vector<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry16.removeExcludedYears(intList20, strMap22, "", strList26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry3.removeExcludedYears(intList20, strMap29, "hi!", strList33);
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry3.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry37.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeCountry37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry37.ISOconverter();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.util.Vector<java.lang.String> strList49 = null;
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry37.excludeYears(intList45, strMap47, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry3.removeExcludedYears(intList45, strMap51, "", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        java.lang.String[] strArray88 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList89 = new java.util.Vector<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry59.removeExcludedYears(intList76, strMap85, "hi!", strList89);
        java.util.Vector<java.lang.String> strList92 = excludeCountry59.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry59.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry59.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry59.readJson();
        java.util.Vector<java.lang.String> strList96 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList97 = excludeCountry0.removeExcludedYears(intList56, strMap57, "", strList96);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap98 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNotNull(strList96);
        org.junit.Assert.assertNull(intList97);
        org.junit.Assert.assertNull(strMap98);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry31 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry31.removeExcludedYears(intList35, strMap37, "", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry18.removeExcludedYears(intList35, strMap44, "hi!", strList48);
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry18.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeCountry52.ISOconverter();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.util.Vector<java.lang.String> strList64 = null;
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry52.excludeYears(intList60, strMap62, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry68 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry68.analysisType();
        java.util.Vector<java.lang.String> strList70 = excludeCountry68.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry18.removeExcludedYears(intList60, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList7, strMap16, "", strList70);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass44 = strMap43.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList9 = excludeCountry8.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry13.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry13.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry13.ISOconverter();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry13.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = excludeCountry13.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.util.Vector<java.lang.String> strList54 = null;
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry13.removeExcludedYears(intList51, strMap52, "hi!", strList54);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry62.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry62.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry13.excludeYears(intList58, strMap60, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry80.analysisType();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry80.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry80.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry80.ISOconverter();
        java.util.Vector<java.lang.String> strList85 = excludeCountry80.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry80.readJson();
        java.util.Vector<java.lang.String> strList87 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry8.excludeYears(intList77, strMap78, "hi!", strList87);
        java.util.Vector<java.lang.String> strList89 = excludeCountry8.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.removeExcludedYears(intList5, strMap6, "", strList89);
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList92 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList93 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry5.removeExcludedYears(intList9, strMap11, "", strList15);
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry5.removeExcludedYears(intList22, strMap31, "hi!", strList35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry40.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry40.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry0.removeExcludedYears(intList37, strMap38, "", strList42);
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList52 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass39 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList50 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strList50);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strList42);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList7 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        java.util.Vector<java.lang.String> strList12 = excludeCountry10.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry10.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry29.removeExcludedYears(intList33, strMap35, "", strList39);
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry29.removeExcludedYears(intList46, strMap55, "hi!", strList59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry10.excludeYears(intList26, strMap27, "", strList59);
        java.util.Vector<java.lang.String> strList63 = excludeCountry10.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry10.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry10.readJson();
        java.util.Vector<java.lang.String> strList66 = excludeCountry10.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry0.excludeYears(intList7, strMap8, "", strList66);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList69 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strList70);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        java.util.Vector<java.lang.String> strList84 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap86 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass52 = strMap51.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass44 = strMap43.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 100, 0, 100 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry50.removeExcludedYears(intList54, strMap56, "", strList60);
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList67 = new java.util.Vector<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList67, intArray66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry63.removeExcludedYears(intList67, strMap69, "", strList73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry50.removeExcludedYears(intList67, strMap76, "hi!", strList80);
        java.util.Vector<java.lang.String> strList83 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.excludeYears(intList46, strMap48, "", strList83);
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass87 = strList86.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry3.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry3.excludeYears(intList18, strMap19, "hi!", strList31);
        java.util.Vector<java.lang.String> strList35 = excludeCountry3.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry51 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry51.analysisType();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry51.analysisType();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry62.analysisType();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry62.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry62.analysisType();
        java.util.Vector<java.lang.String> strList66 = excludeCountry62.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry51.removeExcludedYears(intList58, strMap60, "hi!", strList66);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry3.removeExcludedYears(intList40, strMap49, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry0.removeExcludedYears(intList68, strMap69, "hi!", strList73);
        java.util.Vector<java.lang.String> strList75 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry48 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList49 = excludeCountry48.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry48.analysisType();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList55 = new java.util.Vector<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry59.analysisType();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry59.analysisType();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry59.analysisType();
        java.util.Vector<java.lang.String> strList63 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry48.removeExcludedYears(intList55, strMap57, "hi!", strList63);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry0.removeExcludedYears(intList37, strMap46, "", strList63);
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry6.analysisType();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry17.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeCountry17.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList22 = excludeCountry6.removeExcludedYears(intList13, strMap15, "hi!", strList21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry25.removeExcludedYears(intList29, strMap31, "", strList35);
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry25.removeExcludedYears(intList42, strMap51, "hi!", strList55);
        java.util.Vector<java.lang.String> strList58 = excludeCountry25.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry0.excludeYears(intList13, strMap23, "hi!", strList58);
        java.lang.Class<?> wildcardClass60 = strList58.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(intList22);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass9 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry63.analysisType();
        java.util.Vector<java.lang.String> strList65 = excludeCountry63.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry63.ISOconverter();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry63.analysisType();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList77 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry63.removeExcludedYears(intList70, strMap72, "hi!", strList77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry81 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry81.analysisType();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry81.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry81.ISOconverter();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry81.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry81.readJson();
        java.util.Vector<java.lang.String> strList87 = excludeCountry81.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry0.excludeYears(intList70, strMap79, "", strList87);
        java.util.Vector<java.lang.String> strList89 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList90 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass91 = strList90.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }
}

