package facaderandoopoutput;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass50 = strMap49.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList14);
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass18 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass6 = strList5.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList52 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strMap53);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList60 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry5.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry5.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry5.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry5.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.Integer> intList23 = excludeCountry11.removeExcludedYears(intList15, strMap17, "", strList21);
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry24.removeExcludedYears(intList28, strMap30, "", strList34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry11.removeExcludedYears(intList28, strMap37, "hi!", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.util.Vector<java.lang.String> strList46 = null;
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry5.removeExcludedYears(intList43, strMap44, "hi!", strList46);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = excludeCountry54.readJson();
        java.util.Vector<java.lang.String> strList68 = excludeCountry54.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry5.excludeYears(intList50, strMap52, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry72.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry72.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry72.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList79);
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(strList83);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList17 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass18 = strList17.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList14);
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry16.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeCountry16.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeCountry16.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry16.analysisType();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry27.analysisType();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry27.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry27.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry16.removeExcludedYears(intList23, strMap25, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.Integer> intList46 = excludeCountry34.removeExcludedYears(intList38, strMap40, "", strList44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry34.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry34.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = excludeCountry34.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry34.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry51 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry51.analysisType();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry51.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry51.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry51.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = excludeCountry51.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry57.removeExcludedYears(intList61, strMap63, "", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.util.Vector<java.lang.String> strList72 = null;
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry51.excludeYears(intList61, strMap70, "hi!", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry76 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry76.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry76.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry76.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry76.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry76.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry76.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry34.excludeYears(intList61, strMap74, "", strList82);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.removeExcludedYears(intList31, strMap32, "", strList82);
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(intList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strMap85);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry5.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry5.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry5.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry5.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.Integer> intList23 = excludeCountry11.removeExcludedYears(intList15, strMap17, "", strList21);
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry24.removeExcludedYears(intList28, strMap30, "", strList34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry11.removeExcludedYears(intList28, strMap37, "hi!", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.util.Vector<java.lang.String> strList46 = null;
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry5.removeExcludedYears(intList43, strMap44, "hi!", strList46);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = excludeCountry54.readJson();
        java.util.Vector<java.lang.String> strList68 = excludeCountry54.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry5.excludeYears(intList50, strMap52, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry72.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry72.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry72.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry31 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry31.removeExcludedYears(intList35, strMap37, "", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry18.removeExcludedYears(intList35, strMap44, "hi!", strList48);
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry18.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeCountry52.ISOconverter();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.util.Vector<java.lang.String> strList64 = null;
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry52.excludeYears(intList60, strMap62, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry68 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry68.analysisType();
        java.util.Vector<java.lang.String> strList70 = excludeCountry68.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry18.removeExcludedYears(intList60, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList7, strMap16, "", strList70);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass61 = strMap60.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(strMap50);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList14);
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry16.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeCountry16.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeCountry16.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry16.analysisType();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry27.analysisType();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry27.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry27.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry16.removeExcludedYears(intList23, strMap25, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.Integer> intList46 = excludeCountry34.removeExcludedYears(intList38, strMap40, "", strList44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry34.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry34.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = excludeCountry34.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry34.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry51 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry51.analysisType();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry51.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry51.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry51.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = excludeCountry51.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry57.removeExcludedYears(intList61, strMap63, "", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.util.Vector<java.lang.String> strList72 = null;
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry51.excludeYears(intList61, strMap70, "hi!", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry76 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry76.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry76.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry76.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry76.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry76.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry76.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry34.excludeYears(intList61, strMap74, "", strList82);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.removeExcludedYears(intList31, strMap32, "", strList82);
        java.util.Vector<java.lang.String> strList85 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(intList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strList85);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry4.analysisType();
        java.util.Vector<java.lang.String> strList6 = excludeCountry4.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry4.ISOconverter();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList12 = new java.util.Vector<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList12, intArray11);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = null;
        java.util.Vector<java.lang.String> strList16 = null;
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry4.excludeYears(intList12, strMap14, "", strList16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList21 = excludeCountry20.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeCountry20.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry23.analysisType();
        java.util.ArrayList<java.lang.String> strList25 = excludeCountry23.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeCountry23.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry23.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = excludeCountry23.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry29.removeExcludedYears(intList33, strMap35, "", strList39);
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry29.removeExcludedYears(intList46, strMap55, "hi!", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.util.Vector<java.lang.String> strList64 = null;
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry23.removeExcludedYears(intList61, strMap62, "hi!", strList64);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList86 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry23.excludeYears(intList68, strMap70, "", strList86);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry90 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry90.analysisType();
        java.util.ArrayList<java.lang.String> strList92 = excludeCountry90.analysisType();
        java.util.ArrayList<java.lang.String> strList93 = excludeCountry90.analysisType();
        java.util.Vector<java.lang.String> strList94 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList95 = excludeCountry20.excludeYears(intList87, strMap88, "", strList94);
        java.util.Vector<java.lang.Integer> intList96 = excludeCountry0.excludeYears(intList12, strMap18, "", strList94);
        java.util.Vector<java.lang.String> strList97 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNull(intList95);
        org.junit.Assert.assertNull(intList96);
        org.junit.Assert.assertNotNull(strList97);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList85 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strMap86);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strList11);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList17 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry20.removeExcludedYears(intList37, strMap46, "hi!", strList50);
        java.util.Vector<java.lang.String> strList53 = excludeCountry20.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry54.analysisType();
        java.util.Vector<java.lang.String> strList56 = excludeCountry54.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry54.ISOconverter();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry54.analysisType();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry65.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeCountry65.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry54.removeExcludedYears(intList61, strMap63, "hi!", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry72.analysisType();
        java.util.Vector<java.lang.String> strList74 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry20.removeExcludedYears(intList61, strMap70, "", strList74);
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry20.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = excludeCountry20.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry20.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry20.readJson();
        java.util.Vector<java.lang.String> strList80 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry0.excludeYears(intList17, strMap18, "", strList80);
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(strList82);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList18 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry6.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry6.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry6.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.util.Vector<java.lang.String> strList27 = null;
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry6.excludeYears(intList16, strMap25, "hi!", strList27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry31 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry31.analysisType();
        java.util.Vector<java.lang.String> strList33 = excludeCountry31.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry31.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry31.analysisType();
        java.util.Vector<java.lang.Integer> intList36 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry39.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry39.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry39.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry43 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList47 = new java.util.Vector<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry43.removeExcludedYears(intList47, strMap49, "", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList75 = new java.util.Vector<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList75, intArray74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = null;
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry71.removeExcludedYears(intList75, strMap77, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        java.lang.String[] strArray87 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList88 = new java.util.Vector<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry58.removeExcludedYears(intList75, strMap84, "hi!", strList88);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry39.excludeYears(intList55, strMap56, "", strList88);
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry31.excludeYears(intList36, strMap37, "", strList88);
        java.util.Vector<java.lang.Integer> intList93 = excludeCountry0.excludeYears(intList28, strMap29, "hi!", strList88);
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap95 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass96 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(intList93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList85 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass87 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList18 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry76 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry76.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry76.analysisType();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList83 = new java.util.Vector<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList83, intArray82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry87 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry87.analysisType();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry87.analysisType();
        java.util.ArrayList<java.lang.String> strList90 = excludeCountry87.analysisType();
        java.util.Vector<java.lang.String> strList91 = excludeCountry87.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry76.removeExcludedYears(intList83, strMap85, "hi!", strList91);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = null;
        java.util.Vector<java.lang.String> strList95 = null;
        java.util.Vector<java.lang.Integer> intList96 = excludeCountry0.excludeYears(intList83, strMap93, "hi!", strList95);
        java.util.ArrayList<java.lang.String> strList97 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList98 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass99 = strList98.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(intList96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strList98);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList64 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(strMap65);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strList61);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList87 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass88 = strList87.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry22.analysisType();
        java.util.Vector<java.lang.String> strList24 = excludeCountry22.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeCountry22.ISOconverter();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry22.analysisType();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry33.analysisType();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry33.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry33.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry22.removeExcludedYears(intList29, strMap31, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry40.removeExcludedYears(intList56, strMap58, "", strList70);
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry40.analysisType();
        java.util.Vector<java.lang.String> strList75 = excludeCountry40.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry20.excludeYears(intList37, strMap38, "", strList75);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry8.removeExcludedYears(intList16, strMap18, "", strList75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList84 = new java.util.Vector<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList84, intArray83);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = null;
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList90 = new java.util.Vector<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry80.removeExcludedYears(intList84, strMap86, "", strList90);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = excludeCountry80.readJson();
        java.util.Vector<java.lang.String> strList94 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList95 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList94);
        java.util.ArrayList<java.lang.String> strList96 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap97 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList98 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList99 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNull(intList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strMap97);
        org.junit.Assert.assertNotNull(strList98);
        org.junit.Assert.assertNotNull(strList99);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strMap60);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass11 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry3.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.util.Vector<java.lang.String> strList15 = null;
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry3.excludeYears(intList11, strMap13, "", strList15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry21.removeExcludedYears(intList37, strMap39, "", strList51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.util.Vector<java.lang.String> strList57 = null;
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry19.removeExcludedYears(intList54, strMap55, "", strList57);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry19.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry19.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeCountry19.ISOconverter();
        java.util.Vector<java.lang.String> strList62 = excludeCountry19.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.removeExcludedYears(intList16, strMap17, "", strList62);
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass39 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass12 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList48, strMap57, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass74 = strMap73.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strMap73);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry59.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry7.removeExcludedYears(intList48, strMap57, "", strList61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry65.removeExcludedYears(intList69, strMap71, "", strList75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList48, strMap63, "hi!", strList75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass80 = strMap79.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strMap79);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass9 = strList8.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry7.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeCountry7.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList25 = excludeCountry24.analysisType();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry24.analysisType();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry24.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = excludeCountry24.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = excludeCountry24.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry30 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList34 = new java.util.Vector<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList34, intArray33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry30.removeExcludedYears(intList34, strMap36, "", strList40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.util.Vector<java.lang.String> strList45 = null;
        java.util.Vector<java.lang.Integer> intList46 = excludeCountry24.excludeYears(intList34, strMap43, "hi!", strList45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry49.analysisType();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry49.analysisType();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry49.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = excludeCountry49.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeCountry49.ISOconverter();
        java.util.Vector<java.lang.String> strList55 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry7.excludeYears(intList34, strMap47, "", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        java.lang.String[] strArray88 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList89 = new java.util.Vector<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry59.removeExcludedYears(intList76, strMap85, "hi!", strList89);
        java.util.Vector<java.lang.String> strList92 = excludeCountry59.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry59.ISOconverter();
        java.util.Vector<java.lang.String> strList94 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList95 = excludeCountry0.excludeYears(intList34, strMap57, "", strList94);
        java.util.ArrayList<java.lang.String> strList96 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList97 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList98 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(intList46);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNull(intList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNotNull(strList97);
        org.junit.Assert.assertNotNull(strList98);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList37 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strList35);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry6.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry24.removeExcludedYears(intList28, strMap30, "", strList34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry6.excludeYears(intList21, strMap22, "hi!", strList34);
        java.util.Vector<java.lang.String> strList38 = excludeCountry6.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry54.analysisType();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry54.analysisType();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeCountry65.analysisType();
        java.util.Vector<java.lang.String> strList69 = excludeCountry65.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry54.removeExcludedYears(intList61, strMap63, "hi!", strList69);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry6.removeExcludedYears(intList43, strMap52, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList78 = new java.util.Vector<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList78, intArray77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = null;
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList84 = new java.util.Vector<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.Vector<java.lang.Integer> intList86 = excludeCountry74.removeExcludedYears(intList78, strMap80, "", strList84);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap87 = excludeCountry74.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = excludeCountry74.readJson();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList90 = excludeCountry74.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry74.readJson();
        java.util.Vector<java.lang.String> strList92 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList93 = excludeCountry0.removeExcludedYears(intList71, strMap72, "hi!", strList92);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass94 = intList93.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(intList86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(intList93);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass10 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList6 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry9.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = excludeCountry9.readJson();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList25 = excludeCountry9.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = excludeCountry9.readJson();
        java.util.Vector<java.lang.String> strList27 = excludeCountry9.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry0.removeExcludedYears(intList6, strMap7, "hi!", strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass30 = strMap29.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.Vector<java.lang.String> strList63 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry0.excludeYears(intList45, strMap47, "", strList63);
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList68 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry52.removeExcludedYears(intList68, strMap70, "", strList82);
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry52.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry52.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = excludeCountry52.readJson();
        java.util.Vector<java.lang.String> strList89 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList41, strMap50, "hi!", strList89);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass93 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(intList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass62 = strMap61.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry16.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeCountry16.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeCountry16.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry16.analysisType();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry27.analysisType();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry27.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry27.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry16.removeExcludedYears(intList23, strMap25, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry50.analysisType();
        java.util.Vector<java.lang.String> strList52 = excludeCountry50.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeCountry50.ISOconverter();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry50.analysisType();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry61 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry61.analysisType();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry61.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeCountry61.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry50.removeExcludedYears(intList57, strMap59, "hi!", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry68 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList69 = excludeCountry68.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry34.removeExcludedYears(intList65, strMap66, "hi!", strList69);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry0.excludeYears(intList23, strMap32, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strMap72);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList17 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass18 = strList17.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry43 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry43.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeCountry43.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry43.ISOconverter();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.util.Vector<java.lang.String> strList55 = null;
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry43.excludeYears(intList51, strMap53, "", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry59.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeCountry59.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeCountry59.ISOconverter();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry59.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry0.removeExcludedYears(intList56, strMap57, "", strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList66);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass8 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass56 = strMap55.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList65);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList71, strMap72, "", strList89);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap92 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass95 = strMap94.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry33.removeExcludedYears(intList49, strMap51, "", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry69 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList73 = new java.util.Vector<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList73, intArray72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry69.removeExcludedYears(intList73, strMap75, "", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = excludeCountry69.readJson();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry69.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry69.ISOconverter();
        java.util.Vector<java.lang.String> strList85 = excludeCountry69.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList86 = excludeCountry0.excludeYears(intList49, strMap67, "hi!", strList85);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap87 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(intList86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNotNull(strMap88);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass45 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = strList2.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.util.Vector<java.lang.String> strList46 = null;
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry34.excludeYears(intList42, strMap44, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry50.analysisType();
        java.util.Vector<java.lang.String> strList52 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry0.removeExcludedYears(intList42, strMap48, "", strList52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass54 = intList53.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(intList53);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList12 = excludeCountry11.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry11.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry29.removeExcludedYears(intList33, strMap35, "", strList39);
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry29.removeExcludedYears(intList46, strMap55, "hi!", strList59);
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry29.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry63.analysisType();
        java.util.Vector<java.lang.String> strList65 = excludeCountry63.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry63.ISOconverter();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList71 = new java.util.Vector<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList71, intArray70);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = null;
        java.util.Vector<java.lang.String> strList75 = null;
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry63.excludeYears(intList71, strMap73, "", strList75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry79 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry79.analysisType();
        java.util.Vector<java.lang.String> strList81 = excludeCountry79.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry29.removeExcludedYears(intList71, strMap77, "", strList81);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry11.excludeYears(intList18, strMap27, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry86 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap87 = excludeCountry86.readJson();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry86.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry86.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList83, strMap84, "hi!", strList89);
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList92 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass19 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry9.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeCountry9.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry9.ISOconverter();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry9.analysisType();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        java.util.ArrayList<java.lang.String> strList22 = excludeCountry20.analysisType();
        java.util.Vector<java.lang.String> strList23 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry9.removeExcludedYears(intList16, strMap18, "hi!", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList32 = new java.util.Vector<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList32, intArray31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry36.removeExcludedYears(intList53, strMap62, "hi!", strList66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry27.excludeYears(intList32, strMap34, "hi!", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = excludeCountry27.readJson();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry27.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = excludeCountry27.readJson();
        java.util.Vector<java.lang.String> strList73 = excludeCountry27.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry0.removeExcludedYears(intList16, strMap25, "", strList73);
        java.lang.Class<?> wildcardClass75 = intList16.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList14 = new java.util.Vector<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList14, intArray13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList20 = new java.util.Vector<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.Vector<java.lang.Integer> intList22 = excludeCountry10.removeExcludedYears(intList14, strMap16, "", strList20);
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry10.removeExcludedYears(intList27, strMap36, "hi!", strList40);
        java.util.Vector<java.lang.String> strList43 = excludeCountry10.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry10.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry10.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry10.readJson();
        java.util.Vector<java.lang.String> strList47 = excludeCountry10.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeCountry10.ISOconverter();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), (-1), (-1), 0, 1 };
        java.util.Vector<java.lang.Integer> intList55 = new java.util.Vector<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = excludeCountry59.readJson();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry59.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry59.ISOconverter();
        java.util.Vector<java.lang.String> strList75 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry10.excludeYears(intList55, strMap57, "hi!", strList75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry79 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry79.analysisType();
        java.util.Vector<java.lang.String> strList81 = excludeCountry79.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry79.ISOconverter();
        java.util.Vector<java.lang.String> strList83 = excludeCountry79.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.excludeYears(intList76, strMap77, "", strList83);
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(intList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strList85);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Vector<java.lang.String> strList90 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList92 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(strMap93);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList37 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass38 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList47 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList55 = new java.util.Vector<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        java.lang.String[] strArray88 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList89 = new java.util.Vector<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry59.removeExcludedYears(intList76, strMap85, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry50.excludeYears(intList55, strMap57, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList93 = excludeCountry0.excludeYears(intList47, strMap48, "hi!", strList89);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(intList93);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass12 = strMap11.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList9 = excludeCountry8.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry13.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry13.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry13.ISOconverter();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry13.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = excludeCountry13.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.util.Vector<java.lang.String> strList54 = null;
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry13.removeExcludedYears(intList51, strMap52, "hi!", strList54);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry62.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry62.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry13.excludeYears(intList58, strMap60, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry80.analysisType();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry80.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry80.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry80.ISOconverter();
        java.util.Vector<java.lang.String> strList85 = excludeCountry80.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry80.readJson();
        java.util.Vector<java.lang.String> strList87 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry8.excludeYears(intList77, strMap78, "hi!", strList87);
        java.util.Vector<java.lang.String> strList89 = excludeCountry8.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.removeExcludedYears(intList5, strMap6, "", strList89);
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap92 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(strMap92);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry5.removeExcludedYears(intList9, strMap11, "", strList15);
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry5.removeExcludedYears(intList22, strMap31, "hi!", strList35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry40.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry40.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry0.removeExcludedYears(intList37, strMap38, "", strList42);
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry12.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList16 = excludeCountry14.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry14.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry14.analysisType();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry25.analysisType();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry25.analysisType();
        java.util.Vector<java.lang.String> strList28 = excludeCountry25.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList29 = excludeCountry14.removeExcludedYears(intList21, strMap23, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry32.removeExcludedYears(intList48, strMap50, "", strList62);
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry32.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry32.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry12.excludeYears(intList29, strMap30, "", strList67);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry0.removeExcludedYears(intList8, strMap10, "", strList67);
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList72 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass73 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(intList29);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList6 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry9.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = excludeCountry9.readJson();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList25 = excludeCountry9.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = excludeCountry9.readJson();
        java.util.Vector<java.lang.String> strList27 = excludeCountry9.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry0.removeExcludedYears(intList6, strMap7, "hi!", strList27);
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNull(strList29);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass37 = strList36.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strMap59);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry17.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = excludeCountry17.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry17.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry17.excludeYears(intList27, strMap36, "hi!", strList38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry42.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry42.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeCountry42.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeCountry42.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry0.excludeYears(intList39, strMap40, "", strList46);
        java.lang.Class<?> wildcardClass48 = strList46.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList92 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList93 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(strList93);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(strMap46);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList59 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strList59);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry15 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry15.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry15.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        java.util.Vector<java.lang.Integer> intList46 = excludeCountry15.excludeYears(intList30, strMap31, "hi!", strList43);
        java.util.Vector<java.lang.String> strList47 = excludeCountry15.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry48 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList52 = new java.util.Vector<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList52, intArray51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap54 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry48.removeExcludedYears(intList52, strMap54, "", strList58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry63.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry63.analysisType();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList78 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList79 = excludeCountry63.removeExcludedYears(intList70, strMap72, "hi!", strList78);
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry15.removeExcludedYears(intList52, strMap61, "", strList78);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry83 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry83.analysisType();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry83.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap86 = excludeCountry83.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry83.ISOconverter();
        java.util.Vector<java.lang.String> strList88 = excludeCountry83.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry83.analysisType();
        java.util.Vector<java.lang.String> strList90 = excludeCountry83.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeCountry83.ISOconverter();
        java.util.Vector<java.lang.String> strList92 = excludeCountry83.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList93 = excludeCountry0.excludeYears(intList52, strMap81, "", strList92);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass94 = intList93.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(intList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNull(intList79);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(intList93);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry42.analysisType();
        java.util.Vector<java.lang.String> strList44 = excludeCountry42.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry42.ISOconverter();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.util.Vector<java.lang.String> strList54 = null;
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry42.excludeYears(intList50, strMap52, "", strList54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry58.readJson();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry58.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeCountry58.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry58.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.removeExcludedYears(intList55, strMap56, "", strList62);
        java.util.Vector<java.lang.String> strList64 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass65 = strList64.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass4 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList57);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList60 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strList60);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.util.Vector<java.lang.String> strList68 = null;
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList68);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(intList69);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 1, 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = excludeCountry13.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = excludeCountry13.readJson();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry13.analysisType();
        java.util.Vector<java.lang.Integer> intList29 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry45.removeExcludedYears(intList49, strMap51, "", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry32.removeExcludedYears(intList49, strMap58, "hi!", strList62);
        java.util.Vector<java.lang.String> strList65 = excludeCountry32.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry66.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeCountry66.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry66.ISOconverter();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry66.analysisType();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList73 = new java.util.Vector<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList73, intArray72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry77 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry77.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry77.analysisType();
        java.util.Vector<java.lang.String> strList80 = excludeCountry77.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry66.removeExcludedYears(intList73, strMap75, "hi!", strList80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry84 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry84.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry84.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry32.removeExcludedYears(intList73, strMap82, "", strList86);
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry13.excludeYears(intList29, strMap30, "", strList86);
        java.util.Vector<java.lang.String> strList89 = excludeCountry13.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList9, strMap11, "", strList89);
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList92 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList93 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass95 = strMap94.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass66 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { 0, 100 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry44.analysisType();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry44.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeCountry44.ISOconverter();
        java.util.Vector<java.lang.String> strList49 = excludeCountry44.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry0.excludeYears(intList40, strMap42, "", strList49);
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strList54);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap86 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList87 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strList87);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry8.analysisType();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry19.analysisType();
        java.util.Vector<java.lang.String> strList22 = excludeCountry19.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList23 = excludeCountry8.removeExcludedYears(intList15, strMap17, "hi!", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry26 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry26.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry26.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeCountry26.ISOconverter();
        java.util.ArrayList<java.lang.String> strList30 = excludeCountry26.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = excludeCountry26.readJson();
        java.util.Vector<java.lang.String> strList32 = excludeCountry26.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry26.analysisType();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry26.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry26.readJson();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry26.analysisType();
        java.util.Vector<java.lang.String> strList37 = excludeCountry26.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry0.excludeYears(intList23, strMap24, "hi!", strList37);
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry55 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList59 = new java.util.Vector<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList59, intArray58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry55.removeExcludedYears(intList59, strMap61, "", strList65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = excludeCountry55.readJson();
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry55.analysisType();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry55.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeCountry55.ISOconverter();
        java.util.Vector<java.lang.String> strList72 = excludeCountry55.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList44, strMap53, "hi!", strList72);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(intList73);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry36.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry36.excludeYears(intList51, strMap52, "hi!", strList64);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry0.excludeYears(intList18, strMap34, "", strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList71 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList72 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry5.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry5.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry5.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry5.readJson();
        java.util.Vector<java.lang.String> strList11 = excludeCountry5.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry25.removeExcludedYears(intList29, strMap31, "", strList35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry12.removeExcludedYears(intList29, strMap38, "hi!", strList42);
        java.util.Vector<java.lang.String> strList45 = excludeCountry12.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry46.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry46.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry46.ISOconverter();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry46.analysisType();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry57.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry57.analysisType();
        java.util.Vector<java.lang.String> strList60 = excludeCountry57.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry46.removeExcludedYears(intList53, strMap55, "hi!", strList60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList66 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry12.removeExcludedYears(intList53, strMap62, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry70 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList74 = new java.util.Vector<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList74, intArray73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry70.removeExcludedYears(intList74, strMap76, "", strList80);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry5.excludeYears(intList53, strMap68, "hi!", strList80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry86 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry86.analysisType();
        java.util.Vector<java.lang.String> strList88 = excludeCountry86.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap89 = excludeCountry86.ISOconverter();
        java.util.ArrayList<java.lang.String> strList90 = excludeCountry86.analysisType();
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry86.analysisType();
        java.util.ArrayList<java.lang.String> strList92 = excludeCountry86.analysisType();
        java.util.Vector<java.lang.String> strList93 = excludeCountry86.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry0.excludeYears(intList83, strMap84, "", strList93);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(intList94);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry76 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry76.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry76.analysisType();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList83 = new java.util.Vector<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList83, intArray82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry87 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry87.analysisType();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry87.analysisType();
        java.util.ArrayList<java.lang.String> strList90 = excludeCountry87.analysisType();
        java.util.Vector<java.lang.String> strList91 = excludeCountry87.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry76.removeExcludedYears(intList83, strMap85, "hi!", strList91);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = null;
        java.util.Vector<java.lang.String> strList95 = null;
        java.util.Vector<java.lang.Integer> intList96 = excludeCountry0.excludeYears(intList83, strMap93, "hi!", strList95);
        java.util.Map<java.lang.String, java.lang.String> strMap97 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList98 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList99 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(intList96);
        org.junit.Assert.assertNotNull(strMap97);
        org.junit.Assert.assertNotNull(strList98);
        org.junit.Assert.assertNull(strList99);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(strList82);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry17.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeCountry17.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeCountry17.ISOconverter();
        java.util.Vector<java.lang.String> strList22 = excludeCountry17.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry17.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeCountry17.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeCountry17.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry0.removeExcludedYears(intList14, strMap15, "hi!", strList25);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNull(intList26);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass40 = strList39.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry48 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList52 = new java.util.Vector<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList52, intArray51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap54 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry48.removeExcludedYears(intList52, strMap54, "", strList58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry63.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry63.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry63.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeCountry63.ISOconverter();
        java.util.Vector<java.lang.String> strList68 = excludeCountry63.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = excludeCountry63.readJson();
        java.util.Vector<java.lang.String> strList70 = excludeCountry63.initilizeCountries();
        java.util.Vector<java.lang.String> strList71 = excludeCountry63.initilizeCountries();
        java.util.Vector<java.lang.String> strList72 = excludeCountry63.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.excludeYears(intList60, strMap61, "", strList72);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(intList73);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList56 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry60.analysisType();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry60.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeCountry60.ISOconverter();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry60.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry60.readJson();
        java.util.Vector<java.lang.String> strList66 = excludeCountry60.initilizeCountries();
        java.util.Vector<java.lang.String> strList67 = excludeCountry60.initilizeCountries();
        java.util.Vector<java.lang.String> strList68 = excludeCountry60.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry0.excludeYears(intList57, strMap58, "hi!", strList68);
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList70);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList75 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strList78);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList48, strMap57, "", strList69);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass75 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass85 = strMap84.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNull(strMap84);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList48, strMap57, "", strList69);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList17 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry36.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry36.excludeYears(intList51, strMap52, "hi!", strList64);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry0.excludeYears(intList18, strMap34, "", strList64);
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry74.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeCountry74.ISOconverter();
        java.util.Vector<java.lang.String> strList79 = excludeCountry74.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry74.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry74.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList54, strMap72, "", strList82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass84 = intList83.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass7 = strMap6.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList51 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(strList52);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass56 = strList55.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry62.analysisType();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry62.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry62.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry62.readJson();
        java.util.Vector<java.lang.String> strList67 = excludeCountry62.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry0.removeExcludedYears(intList59, strMap60, "", strList67);
        java.util.Vector<java.lang.String> strList69 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass70 = strList69.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass47 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList84 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass85 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry3.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry3.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry3.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.util.Vector<java.lang.String> strList44 = null;
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry3.removeExcludedYears(intList41, strMap42, "hi!", strList44);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry52.readJson();
        java.util.Vector<java.lang.String> strList66 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry3.excludeYears(intList48, strMap50, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry70 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry70.analysisType();
        java.util.Vector<java.lang.String> strList74 = excludeCountry70.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList67, strMap68, "", strList74);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(strMap77);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.lang.Class<?> wildcardClass56 = strList54.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass48 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList80 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass81 = strList80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList80 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(strList81);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass65 = strList64.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strList44);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass56 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry36.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry36.excludeYears(intList51, strMap52, "hi!", strList64);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry0.excludeYears(intList18, strMap34, "", strList64);
        java.util.Vector<java.lang.String> strList69 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(strList69);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList93 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap94 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList95 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList96 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap97 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass98 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(strList96);
        org.junit.Assert.assertNotNull(strMap97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry7.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry7.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry7.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry7.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeCountry7.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry7.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry7.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeCountry7.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry25.removeExcludedYears(intList29, strMap31, "", strList35);
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry25.removeExcludedYears(intList42, strMap51, "hi!", strList55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry16.excludeYears(intList21, strMap23, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry61 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry61.analysisType();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry61.analysisType();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry61.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry61.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry61.ISOconverter();
        java.util.Vector<java.lang.String> strList67 = excludeCountry61.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry7.excludeYears(intList21, strMap59, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry71.ISOconverter();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry71.analysisType();
        java.lang.Integer[] intArray77 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList78 = new java.util.Vector<java.lang.Integer>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList78, intArray77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry82 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry82.analysisType();
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry82.analysisType();
        java.util.Vector<java.lang.String> strList85 = excludeCountry82.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList86 = excludeCountry71.removeExcludedYears(intList78, strMap80, "hi!", strList85);
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry0.excludeYears(intList68, strMap69, "hi!", strList85);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(intList86);
        org.junit.Assert.assertNull(intList87);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry5.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry5.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry5.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry5.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.Integer> intList23 = excludeCountry11.removeExcludedYears(intList15, strMap17, "", strList21);
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry24.removeExcludedYears(intList28, strMap30, "", strList34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry11.removeExcludedYears(intList28, strMap37, "hi!", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.util.Vector<java.lang.String> strList46 = null;
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry5.removeExcludedYears(intList43, strMap44, "hi!", strList46);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = excludeCountry54.readJson();
        java.util.Vector<java.lang.String> strList68 = excludeCountry54.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry5.excludeYears(intList50, strMap52, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry72.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry72.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry72.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList79);
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList83 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strList83);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList85 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap86 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap87 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry44.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeCountry44.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry8.removeExcludedYears(intList41, strMap42, "hi!", strList46);
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry8.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry49.analysisType();
        java.util.Vector<java.lang.String> strList51 = excludeCountry49.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeCountry49.ISOconverter();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry49.analysisType();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry60.analysisType();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry60.analysisType();
        java.util.Vector<java.lang.String> strList63 = excludeCountry60.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry49.removeExcludedYears(intList56, strMap58, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry67 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList71 = new java.util.Vector<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList71, intArray70);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = null;
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.Integer> intList79 = excludeCountry67.removeExcludedYears(intList71, strMap73, "", strList77);
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry8.excludeYears(intList56, strMap65, "", strList77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = null;
        java.util.Vector<java.lang.String> strList83 = null;
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.excludeYears(intList80, strMap81, "hi!", strList83);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(intList79);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNull(intList84);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass47 = strList46.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList41, strMap50, "", strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList63 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass41 = strList40.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strList48);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass34 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.util.Vector<java.lang.String> strList46 = null;
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry34.excludeYears(intList42, strMap44, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry50.analysisType();
        java.util.Vector<java.lang.String> strList52 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry0.removeExcludedYears(intList42, strMap48, "", strList52);
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList55 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.util.Vector<java.lang.String> strList21 = null;
        java.util.Vector<java.lang.Integer> intList22 = excludeCountry0.excludeYears(intList18, strMap19, "hi!", strList21);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNull(intList22);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        statsVisualiser.facade.ExcludeCountry excludeCountry35 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList39 = new java.util.Vector<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList39, intArray38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry35.removeExcludedYears(intList39, strMap41, "", strList45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry22.removeExcludedYears(intList39, strMap48, "hi!", strList52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry13.excludeYears(intList18, strMap20, "hi!", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = excludeCountry13.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry13.readJson();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry13.analysisType();
        java.util.Vector<java.lang.String> strList59 = excludeCountry13.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = excludeCountry13.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = excludeCountry13.readJson();
        java.util.Vector<java.lang.String> strList62 = excludeCountry13.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.excludeYears(intList9, strMap11, "", strList62);
        java.lang.Class<?> wildcardClass64 = intList9.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList37 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strList39);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry4.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry4.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry4.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry4.readJson();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry4.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry10.analysisType();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList22 = excludeCountry21.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry21.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry21.analysisType();
        java.util.Vector<java.lang.String> strList25 = excludeCountry21.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry10.removeExcludedYears(intList17, strMap19, "hi!", strList25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry29.removeExcludedYears(intList33, strMap35, "", strList39);
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry29.removeExcludedYears(intList46, strMap55, "hi!", strList59);
        java.util.Vector<java.lang.String> strList62 = excludeCountry29.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry4.excludeYears(intList17, strMap27, "hi!", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = excludeCountry66.readJson();
        java.util.ArrayList<java.lang.String> strList68 = excludeCountry66.analysisType();
        java.util.Vector<java.lang.String> strList69 = excludeCountry66.initilizeCountries();
        java.util.Vector<java.lang.String> strList70 = excludeCountry66.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = excludeCountry66.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeCountry66.ISOconverter();
        java.util.Vector<java.lang.String> strList73 = excludeCountry66.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry0.removeExcludedYears(intList63, strMap64, "hi!", strList73);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strMap75);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass12 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList59 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass60 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 1, 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = excludeCountry13.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = excludeCountry13.readJson();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry13.analysisType();
        java.util.Vector<java.lang.Integer> intList29 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry45.removeExcludedYears(intList49, strMap51, "", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry32.removeExcludedYears(intList49, strMap58, "hi!", strList62);
        java.util.Vector<java.lang.String> strList65 = excludeCountry32.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry66.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeCountry66.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry66.ISOconverter();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry66.analysisType();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList73 = new java.util.Vector<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList73, intArray72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry77 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry77.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry77.analysisType();
        java.util.Vector<java.lang.String> strList80 = excludeCountry77.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry66.removeExcludedYears(intList73, strMap75, "hi!", strList80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry84 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry84.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry84.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry32.removeExcludedYears(intList73, strMap82, "", strList86);
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry13.excludeYears(intList29, strMap30, "", strList86);
        java.util.Vector<java.lang.String> strList89 = excludeCountry13.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList9, strMap11, "", strList89);
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList92 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList93 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass96 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList16 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass48 = strList47.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass82 = strList81.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry5.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry5.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry5.analysisType();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList12 = new java.util.Vector<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList12, intArray11);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry16.analysisType();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry16.analysisType();
        java.util.Vector<java.lang.String> strList19 = excludeCountry16.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList20 = excludeCountry5.removeExcludedYears(intList12, strMap14, "hi!", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry23.analysisType();
        java.util.Vector<java.lang.String> strList25 = excludeCountry23.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeCountry23.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry23.analysisType();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList30 = new java.util.Vector<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList30, intArray29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList37 = excludeCountry34.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry23.removeExcludedYears(intList30, strMap32, "hi!", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry39.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry39.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry39.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry39.analysisType();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry50.analysisType();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry50.analysisType();
        java.util.Vector<java.lang.String> strList53 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry39.removeExcludedYears(intList46, strMap48, "hi!", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList58 = excludeCountry57.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry23.removeExcludedYears(intList54, strMap55, "hi!", strList58);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList20, strMap21, "hi!", strList58);
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass62 = strList61.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(intList20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(strList61);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry5.initilizeCountries();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeCountry19.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeCountry19.ISOconverter();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry19.analysisType();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry30 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList31 = excludeCountry30.analysisType();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry30.analysisType();
        java.util.Vector<java.lang.String> strList33 = excludeCountry30.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry19.removeExcludedYears(intList26, strMap28, "hi!", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry57.removeExcludedYears(intList61, strMap63, "", strList67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry37.removeExcludedYears(intList53, strMap55, "", strList67);
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry37.analysisType();
        java.util.Vector<java.lang.String> strList72 = excludeCountry37.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry17.excludeYears(intList34, strMap35, "", strList72);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry5.removeExcludedYears(intList13, strMap15, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry77 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry77.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry77.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry77.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry77.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry77.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.removeExcludedYears(intList74, strMap75, "hi!", strList82);
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList17 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass10 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry6.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry24.removeExcludedYears(intList28, strMap30, "", strList34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry6.excludeYears(intList21, strMap22, "hi!", strList34);
        java.util.Vector<java.lang.String> strList38 = excludeCountry6.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry54.analysisType();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry54.analysisType();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeCountry65.analysisType();
        java.util.Vector<java.lang.String> strList69 = excludeCountry65.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry54.removeExcludedYears(intList61, strMap63, "hi!", strList69);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry6.removeExcludedYears(intList43, strMap52, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry74.ISOconverter();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList88 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList88);
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.removeExcludedYears(intList43, strMap72, "", strList88);
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList92 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass93 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList34 = new java.util.Vector<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList34, intArray33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        statsVisualiser.facade.ExcludeCountry excludeCountry51 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList55 = new java.util.Vector<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry51.removeExcludedYears(intList55, strMap57, "", strList61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry38.removeExcludedYears(intList55, strMap64, "hi!", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry29.excludeYears(intList34, strMap36, "hi!", strList68);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList26, strMap27, "hi!", strList68);
        java.util.Vector<java.lang.String> strList73 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strList74);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList41);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass8 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        java.util.Vector<java.lang.String> strList84 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass86 = strList85.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNull(strList85);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass37 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry17.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = excludeCountry17.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry17.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry17.excludeYears(intList27, strMap36, "hi!", strList38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry42.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry42.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeCountry42.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeCountry42.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry0.excludeYears(intList39, strMap40, "", strList46);
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNull(strList48);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList37);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strList64);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry17.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = excludeCountry17.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry17.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry17.excludeYears(intList27, strMap36, "hi!", strList38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry42.analysisType();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry42.analysisType();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry42.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry42.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry42.ISOconverter();
        java.util.Vector<java.lang.String> strList48 = excludeCountry42.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry0.excludeYears(intList27, strMap40, "", strList48);
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList50);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry8.analysisType();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry19.analysisType();
        java.util.Vector<java.lang.String> strList22 = excludeCountry19.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList23 = excludeCountry8.removeExcludedYears(intList15, strMap17, "hi!", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry26 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry26.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry26.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeCountry26.ISOconverter();
        java.util.ArrayList<java.lang.String> strList30 = excludeCountry26.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = excludeCountry26.readJson();
        java.util.Vector<java.lang.String> strList32 = excludeCountry26.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry26.analysisType();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry26.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry26.readJson();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry26.analysisType();
        java.util.Vector<java.lang.String> strList37 = excludeCountry26.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry0.excludeYears(intList23, strMap24, "hi!", strList37);
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry9.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeCountry9.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry9.ISOconverter();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry9.analysisType();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        java.util.ArrayList<java.lang.String> strList22 = excludeCountry20.analysisType();
        java.util.Vector<java.lang.String> strList23 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry9.removeExcludedYears(intList16, strMap18, "hi!", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList32 = new java.util.Vector<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList32, intArray31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry36.removeExcludedYears(intList53, strMap62, "hi!", strList66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry27.excludeYears(intList32, strMap34, "hi!", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = excludeCountry27.readJson();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry27.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = excludeCountry27.readJson();
        java.util.Vector<java.lang.String> strList73 = excludeCountry27.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry0.removeExcludedYears(intList16, strMap25, "", strList73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strMap75);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strList35);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass8 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry7.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.util.Vector<java.lang.String> strList53 = null;
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry41.excludeYears(intList49, strMap51, "", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry57.analysisType();
        java.util.Vector<java.lang.String> strList59 = excludeCountry57.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry7.removeExcludedYears(intList49, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList64 = excludeCountry63.initilizeCountries();
        java.util.Vector<java.lang.String> strList65 = excludeCountry63.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry63.readJson();
        java.util.Vector<java.lang.String> strList67 = excludeCountry63.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry0.excludeYears(intList60, strMap61, "", strList67);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass78 = strList77.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry3.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry3.excludeYears(intList18, strMap19, "hi!", strList31);
        java.util.Vector<java.lang.String> strList35 = excludeCountry3.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry51 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry51.analysisType();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry51.analysisType();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry62.analysisType();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry62.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry62.analysisType();
        java.util.Vector<java.lang.String> strList66 = excludeCountry62.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry51.removeExcludedYears(intList58, strMap60, "hi!", strList66);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry3.removeExcludedYears(intList40, strMap49, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry0.removeExcludedYears(intList68, strMap69, "hi!", strList73);
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass76 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry7.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry7.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry7.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry7.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry7.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        java.util.Vector<java.lang.Integer> intList46 = excludeCountry13.removeExcludedYears(intList29, strMap31, "", strList43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry49.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry49.ISOconverter();
        java.util.Vector<java.lang.String> strList65 = excludeCountry49.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry49.ISOconverter();
        java.util.Vector<java.lang.String> strList67 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry7.removeExcludedYears(intList29, strMap47, "", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList75 = new java.util.Vector<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList75, intArray74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = null;
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry71.removeExcludedYears(intList75, strMap77, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = excludeCountry71.readJson();
        java.util.Vector<java.lang.String> strList85 = excludeCountry71.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry71.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry71.ISOconverter();
        java.util.Vector<java.lang.String> strList88 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.removeExcludedYears(intList29, strMap69, "hi!", strList88);
        java.util.Vector<java.lang.String> strList90 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(intList46);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(strList91);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList83 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass7 = strMap6.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass43 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList87 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList88 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(strList88);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry46.analysisType();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry46.analysisType();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry57.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry57.analysisType();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry57.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeCountry57.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry46.removeExcludedYears(intList53, strMap55, "hi!", strList61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry65.removeExcludedYears(intList69, strMap71, "", strList75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry65.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry65.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry65.readJson();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry65.analysisType();
        java.util.Vector<java.lang.Integer> intList82 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeCountry85.ISOconverter();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry85.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap90 = excludeCountry85.readJson();
        java.util.Vector<java.lang.String> strList91 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry65.excludeYears(intList82, strMap83, "hi!", strList91);
        java.util.Vector<java.lang.Integer> intList93 = excludeCountry0.excludeYears(intList53, strMap63, "", strList91);
        java.util.ArrayList<java.lang.String> strList94 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(intList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strMap95);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry3.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry3.analysisType();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeCountry14.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry3.removeExcludedYears(intList10, strMap12, "hi!", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry21.removeExcludedYears(intList37, strMap39, "", strList51);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList18, strMap19, "hi!", strList51);
        statsVisualiser.facade.ExcludeCountry excludeCountry56 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry56.analysisType();
        java.util.Vector<java.lang.String> strList58 = excludeCountry56.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry56.ISOconverter();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.util.Vector<java.lang.String> strList68 = null;
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry56.excludeYears(intList64, strMap66, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList73 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry72.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass79 = strMap78.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList37 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), (-1), (-1), 0, 1 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry49.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry49.ISOconverter();
        java.util.Vector<java.lang.String> strList65 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry0.excludeYears(intList45, strMap47, "hi!", strList65);
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry3.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry3.analysisType();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeCountry14.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry3.removeExcludedYears(intList10, strMap12, "hi!", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry21.removeExcludedYears(intList37, strMap39, "", strList51);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList18, strMap19, "hi!", strList51);
        statsVisualiser.facade.ExcludeCountry excludeCountry56 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry56.analysisType();
        java.util.Vector<java.lang.String> strList58 = excludeCountry56.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry56.ISOconverter();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.util.Vector<java.lang.String> strList68 = null;
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry56.excludeYears(intList64, strMap66, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList73 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry72.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList80 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(strMap83);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass5 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList71, strMap72, "", strList89);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList94 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap96 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList97 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap98 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNotNull(strMap98);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry7.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry7.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry7.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry7.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry7.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        java.util.Vector<java.lang.Integer> intList46 = excludeCountry13.removeExcludedYears(intList29, strMap31, "", strList43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry49.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry49.ISOconverter();
        java.util.Vector<java.lang.String> strList65 = excludeCountry49.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry49.ISOconverter();
        java.util.Vector<java.lang.String> strList67 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry7.removeExcludedYears(intList29, strMap47, "", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList75 = new java.util.Vector<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList75, intArray74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = null;
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry71.removeExcludedYears(intList75, strMap77, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = excludeCountry71.readJson();
        java.util.Vector<java.lang.String> strList85 = excludeCountry71.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry71.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry71.ISOconverter();
        java.util.Vector<java.lang.String> strList88 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.removeExcludedYears(intList29, strMap69, "hi!", strList88);
        java.util.Vector<java.lang.String> strList90 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass91 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNull(intList46);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass46 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strList45);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList49 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList3 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = null;
        java.util.Vector<java.lang.String> strList6 = null;
        java.util.Vector<java.lang.Integer> intList7 = excludeCountry0.removeExcludedYears(intList3, strMap4, "", strList6);
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass12 = strList11.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(intList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry50.removeExcludedYears(intList54, strMap56, "", strList60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry37.removeExcludedYears(intList54, strMap63, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry72.readJson();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry72.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeCountry72.ISOconverter();
        java.util.Vector<java.lang.String> strList89 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList54, strMap70, "hi!", strList89);
        java.util.Vector<java.lang.String> strList91 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNotNull(strList91);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry9.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = excludeCountry12.readJson();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry12.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = excludeCountry12.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry28 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry28.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry28.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeCountry28.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry28.analysisType();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry39.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry39.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry39.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry28.removeExcludedYears(intList35, strMap37, "hi!", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry46.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry46.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry46.ISOconverter();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry46.analysisType();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry57.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry57.analysisType();
        java.util.Vector<java.lang.String> strList60 = excludeCountry57.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry46.removeExcludedYears(intList53, strMap55, "hi!", strList60);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry62.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeCountry62.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeCountry62.ISOconverter();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry62.analysisType();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry73 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry73.analysisType();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry73.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry73.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry62.removeExcludedYears(intList69, strMap71, "hi!", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry46.removeExcludedYears(intList77, strMap78, "hi!", strList81);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry12.excludeYears(intList35, strMap44, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        java.util.Vector<java.lang.String> strList86 = null;
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry9.excludeYears(intList35, strMap84, "hi!", strList86);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry90 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList91 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.String> strList92 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.String> strList93 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry0.removeExcludedYears(intList87, strMap88, "hi!", strList93);
        java.util.Map<java.lang.String, java.lang.String> strMap95 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList96 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(intList94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNull(strList96);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry4.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry4.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry4.excludeYears(intList19, strMap20, "hi!", strList32);
        java.util.Vector<java.lang.String> strList36 = excludeCountry4.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList59 = new java.util.Vector<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList59, intArray58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry63.analysisType();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry63.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry63.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry63.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry52.removeExcludedYears(intList59, strMap61, "hi!", strList67);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry4.removeExcludedYears(intList41, strMap50, "", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry72.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry72.ISOconverter();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry72.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList78 = excludeCountry72.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry72.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = excludeCountry72.readJson();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry72.analysisType();
        java.util.Vector<java.lang.String> strList83 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList83);
        java.util.Vector<java.lang.String> strList85 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap86 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = excludeCountry0.readJson();
        java.util.Vector<java.lang.Integer> intList50 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry53.analysisType();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry53.analysisType();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeCountry53.ISOconverter();
        java.util.Vector<java.lang.String> strList59 = excludeCountry53.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry53.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = excludeCountry53.readJson();
        java.util.Vector<java.lang.String> strList62 = excludeCountry53.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.excludeYears(intList50, strMap51, "", strList62);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass51 = strMap50.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass84 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList7 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        java.util.Vector<java.lang.String> strList12 = excludeCountry10.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry10.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry29.removeExcludedYears(intList33, strMap35, "", strList39);
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry29.removeExcludedYears(intList46, strMap55, "hi!", strList59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry10.excludeYears(intList26, strMap27, "", strList59);
        java.util.Vector<java.lang.String> strList63 = excludeCountry10.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry10.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry10.readJson();
        java.util.Vector<java.lang.String> strList66 = excludeCountry10.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry0.excludeYears(intList7, strMap8, "", strList66);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList70 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList48, strMap57, "", strList69);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { 10, 10, (-1), 1 };
        java.util.Vector<java.lang.Integer> intList80 = new java.util.Vector<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList80, intArray79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry84 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry84.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry84.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry84.ISOconverter();
        java.util.Vector<java.lang.String> strList88 = excludeCountry84.initilizeCountries();
        java.util.Vector<java.lang.String> strList89 = excludeCountry84.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList80, strMap82, "hi!", strList89);
        java.lang.Class<?> wildcardClass91 = strList89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass81 = strMap80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass82 = strMap81.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strList78);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry55 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList59 = new java.util.Vector<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList59, intArray58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry55.removeExcludedYears(intList59, strMap61, "", strList65);
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList71 = new java.util.Vector<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList71, intArray70);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry75 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList79 = new java.util.Vector<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList79, intArray78);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = null;
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry75.removeExcludedYears(intList79, strMap81, "", strList85);
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry55.removeExcludedYears(intList71, strMap73, "", strList85);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap89 = null;
        java.util.Vector<java.lang.String> strList91 = null;
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry0.removeExcludedYears(intList71, strMap89, "", strList91);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNotNull(strMap94);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.Integer> intList29 = excludeCountry17.removeExcludedYears(intList21, strMap23, "", strList27);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry17.removeExcludedYears(intList33, strMap35, "", strList47);
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry17.analysisType();
        java.util.Vector<java.lang.String> strList52 = excludeCountry17.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeCountry17.initilizeCountries();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 0, 100 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry61 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry61.analysisType();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry61.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry61.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeCountry61.ISOconverter();
        java.util.Vector<java.lang.String> strList66 = excludeCountry61.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry17.excludeYears(intList57, strMap59, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry70 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry70.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = excludeCountry70.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry70.readJson();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry70.analysisType();
        java.util.Vector<java.lang.String> strList77 = excludeCountry70.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.removeExcludedYears(intList67, strMap68, "", strList77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass79 = intList78.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(intList29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(intList78);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass15 = strList14.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList85 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap87 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strList88);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = strMap17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry3.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.util.Vector<java.lang.String> strList15 = null;
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry3.excludeYears(intList11, strMap13, "", strList15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry21.removeExcludedYears(intList37, strMap39, "", strList51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.util.Vector<java.lang.String> strList57 = null;
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry19.removeExcludedYears(intList54, strMap55, "", strList57);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry19.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry19.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeCountry19.ISOconverter();
        java.util.Vector<java.lang.String> strList62 = excludeCountry19.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.removeExcludedYears(intList16, strMap17, "", strList62);
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList65 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = strList4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList64 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass65 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry5.removeExcludedYears(intList9, strMap11, "", strList15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry22.removeExcludedYears(intList38, strMap40, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.util.Vector<java.lang.String> strList58 = null;
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry20.removeExcludedYears(intList55, strMap56, "", strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry20.ISOconverter();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry20.analysisType();
        java.util.Vector<java.lang.String> strList62 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.excludeYears(intList9, strMap18, "hi!", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList65 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strMap66);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry5.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry5.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry5.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = excludeCountry5.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.Integer> intList23 = excludeCountry11.removeExcludedYears(intList15, strMap17, "", strList21);
        statsVisualiser.facade.ExcludeCountry excludeCountry24 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry24.removeExcludedYears(intList28, strMap30, "", strList34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry11.removeExcludedYears(intList28, strMap37, "hi!", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.util.Vector<java.lang.String> strList46 = null;
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry5.removeExcludedYears(intList43, strMap44, "hi!", strList46);
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap67 = excludeCountry54.readJson();
        java.util.Vector<java.lang.String> strList68 = excludeCountry54.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry5.excludeYears(intList50, strMap52, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry72.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry72.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry72.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList79);
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList85 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList86 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strMap45);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass48 = strList47.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList47);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass40 = strList39.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strList39);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry52.removeExcludedYears(intList68, strMap70, "", strList82);
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry52.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry52.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = excludeCountry52.readJson();
        java.util.Vector<java.lang.String> strList89 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList41, strMap50, "hi!", strList89);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(intList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry3.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry3.analysisType();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeCountry14.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry3.removeExcludedYears(intList10, strMap12, "hi!", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry21.removeExcludedYears(intList37, strMap39, "", strList51);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList18, strMap19, "hi!", strList51);
        statsVisualiser.facade.ExcludeCountry excludeCountry56 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry56.analysisType();
        java.util.Vector<java.lang.String> strList58 = excludeCountry56.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry56.ISOconverter();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.util.Vector<java.lang.String> strList68 = null;
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry56.excludeYears(intList64, strMap66, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList73 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry72.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass80 = strList79.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strList79);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strList3);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry59.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry7.removeExcludedYears(intList48, strMap57, "", strList61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry65.removeExcludedYears(intList69, strMap71, "", strList75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList48, strMap63, "hi!", strList75);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry9.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeCountry9.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry9.ISOconverter();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry9.analysisType();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        java.util.ArrayList<java.lang.String> strList22 = excludeCountry20.analysisType();
        java.util.Vector<java.lang.String> strList23 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry9.removeExcludedYears(intList16, strMap18, "hi!", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList32 = new java.util.Vector<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList32, intArray31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry36.removeExcludedYears(intList53, strMap62, "hi!", strList66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry27.excludeYears(intList32, strMap34, "hi!", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = excludeCountry27.readJson();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry27.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = excludeCountry27.readJson();
        java.util.Vector<java.lang.String> strList73 = excludeCountry27.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry0.removeExcludedYears(intList16, strMap25, "", strList73);
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList14);
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry16.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeCountry16.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeCountry16.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry16.analysisType();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry27.analysisType();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry27.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry27.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry16.removeExcludedYears(intList23, strMap25, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList35 = excludeCountry34.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList36 = excludeCountry0.removeExcludedYears(intList31, strMap32, "hi!", strList35);
        java.util.Vector<java.lang.String> strList37 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(intList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { 0, 100 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry44.analysisType();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry44.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeCountry44.ISOconverter();
        java.util.Vector<java.lang.String> strList49 = excludeCountry44.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry0.excludeYears(intList40, strMap42, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList52 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strList52);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass65 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = strMap8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry34.analysisType();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry34.removeExcludedYears(intList41, strMap43, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry66.removeExcludedYears(intList70, strMap72, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry53.removeExcludedYears(intList70, strMap79, "hi!", strList83);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry88 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry88.analysisType();
        java.util.Vector<java.lang.String> strList90 = excludeCountry88.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry52.removeExcludedYears(intList85, strMap86, "hi!", strList90);
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry0.excludeYears(intList41, strMap50, "", strList90);
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap94 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(intList85);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNull(strMap95);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.Integer> intList23 = excludeCountry11.removeExcludedYears(intList15, strMap17, "", strList21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry26 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry62.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeCountry62.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry26.removeExcludedYears(intList59, strMap60, "hi!", strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeCountry26.ISOconverter();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry26.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeCountry26.initilizeCountries();
        java.util.Vector<java.lang.String> strList69 = excludeCountry26.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry26.analysisType();
        java.util.Vector<java.lang.String> strList71 = excludeCountry26.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.removeExcludedYears(intList23, strMap24, "hi!", strList71);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNull(intList72);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.Vector<java.lang.String> strList13 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 100, 100, 100, 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry66.removeExcludedYears(intList70, strMap72, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry53.removeExcludedYears(intList70, strMap79, "hi!", strList83);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry53.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry53.analysisType();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry53.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeCountry53.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry53.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry53.ISOconverter();
        java.util.Vector<java.lang.String> strList93 = excludeCountry53.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry0.removeExcludedYears(intList49, strMap51, "hi!", strList93);
        java.lang.Class<?> wildcardClass95 = strList93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(intList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(intList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry8.analysisType();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry19.analysisType();
        java.util.Vector<java.lang.String> strList22 = excludeCountry19.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList23 = excludeCountry8.removeExcludedYears(intList15, strMap17, "hi!", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry26 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry35 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList39 = new java.util.Vector<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList39, intArray38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry35.removeExcludedYears(intList39, strMap41, "", strList45);
        statsVisualiser.facade.ExcludeCountry excludeCountry48 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList52 = new java.util.Vector<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList52, intArray51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap54 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry48.removeExcludedYears(intList52, strMap54, "", strList58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        java.lang.String[] strArray64 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry35.removeExcludedYears(intList52, strMap61, "hi!", strList65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry26.excludeYears(intList31, strMap33, "hi!", strList65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = excludeCountry26.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = excludeCountry26.readJson();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry26.analysisType();
        java.util.Vector<java.lang.String> strList72 = excludeCountry26.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = excludeCountry26.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry26.readJson();
        java.util.Vector<java.lang.String> strList75 = excludeCountry26.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry0.removeExcludedYears(intList15, strMap24, "", strList75);
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList78 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass40 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList19 = new java.util.Vector<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry23.removeExcludedYears(intList40, strMap49, "hi!", strList53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry14.excludeYears(intList19, strMap21, "hi!", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        java.lang.String[] strArray88 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList89 = new java.util.Vector<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry59.removeExcludedYears(intList76, strMap85, "hi!", strList89);
        java.util.Vector<java.lang.String> strList92 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.String> strList93 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry0.excludeYears(intList19, strMap57, "", strList93);
        java.util.Map<java.lang.String, java.lang.String> strMap95 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap96 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList97 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap98 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList99 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(intList94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNotNull(strList97);
        org.junit.Assert.assertNotNull(strMap98);
        org.junit.Assert.assertNull(strList99);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry3.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry3.analysisType();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeCountry14.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry3.removeExcludedYears(intList10, strMap12, "hi!", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry21.removeExcludedYears(intList37, strMap39, "", strList51);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList18, strMap19, "hi!", strList51);
        java.util.Vector<java.lang.String> strList56 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList66 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strMap67);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass48 = strMap47.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList37 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), (-1), (-1), 0, 1 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry49.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry49.ISOconverter();
        java.util.Vector<java.lang.String> strList65 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry0.excludeYears(intList45, strMap47, "hi!", strList65);
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList34 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry37.analysisType();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry37.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry55 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList59 = new java.util.Vector<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList59, intArray58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry55.removeExcludedYears(intList59, strMap61, "", strList65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry37.excludeYears(intList52, strMap53, "hi!", strList65);
        java.util.Vector<java.lang.String> strList69 = excludeCountry37.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry0.removeExcludedYears(intList34, strMap35, "", strList69);
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList72 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(strMap73);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass48 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList37 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry31 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry31.removeExcludedYears(intList35, strMap37, "", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry18.removeExcludedYears(intList35, strMap44, "hi!", strList48);
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry18.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeCountry52.ISOconverter();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.util.Vector<java.lang.String> strList64 = null;
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry52.excludeYears(intList60, strMap62, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry68 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry68.analysisType();
        java.util.Vector<java.lang.String> strList70 = excludeCountry68.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry18.removeExcludedYears(intList60, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList7, strMap16, "", strList70);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList78 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strList78);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList15);
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList22 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry25.analysisType();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry25.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeCountry25.ISOconverter();
        java.util.Vector<java.lang.String> strList29 = excludeCountry25.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry30 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList34 = new java.util.Vector<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList34, intArray33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry30.removeExcludedYears(intList34, strMap36, "", strList40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry67 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList71 = new java.util.Vector<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList71, intArray70);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = null;
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.Integer> intList79 = excludeCountry67.removeExcludedYears(intList71, strMap73, "", strList77);
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry47.removeExcludedYears(intList63, strMap65, "", strList77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = null;
        java.util.Vector<java.lang.String> strList83 = null;
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry45.removeExcludedYears(intList80, strMap81, "", strList83);
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeCountry45.ISOconverter();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry45.analysisType();
        java.util.Vector<java.lang.String> strList87 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry25.excludeYears(intList34, strMap43, "hi!", strList87);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList22, strMap23, "", strList87);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap90 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(intList79);
        org.junit.Assert.assertNull(intList80);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(strMap90);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass4 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.Vector<java.lang.String> strList63 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry0.excludeYears(intList45, strMap47, "", strList63);
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList68 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strList73);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.Vector<java.lang.String> strList63 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry0.excludeYears(intList45, strMap47, "", strList63);
        java.util.Vector<java.lang.String> strList65 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList67 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strList69);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass6 = strList5.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass43 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass49 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList17 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry20.removeExcludedYears(intList37, strMap46, "hi!", strList50);
        java.util.Vector<java.lang.String> strList53 = excludeCountry20.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry54.analysisType();
        java.util.Vector<java.lang.String> strList56 = excludeCountry54.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry54.ISOconverter();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry54.analysisType();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry65.analysisType();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry65.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeCountry65.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry54.removeExcludedYears(intList61, strMap63, "hi!", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry72.analysisType();
        java.util.Vector<java.lang.String> strList74 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry20.removeExcludedYears(intList61, strMap70, "", strList74);
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry20.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = excludeCountry20.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry20.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry20.readJson();
        java.util.Vector<java.lang.String> strList80 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry0.excludeYears(intList17, strMap18, "", strList80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(strMap82);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry44 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry44.removeExcludedYears(intList48, strMap50, "", strList54);
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList68 = new java.util.Vector<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry64.removeExcludedYears(intList68, strMap70, "", strList74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry44.removeExcludedYears(intList60, strMap62, "", strList74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList82);
        java.util.Vector<java.lang.String> strList84 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strMap86);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry22.analysisType();
        java.util.Vector<java.lang.String> strList24 = excludeCountry22.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeCountry22.ISOconverter();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry22.analysisType();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry33.analysisType();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry33.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeCountry33.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry22.removeExcludedYears(intList29, strMap31, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry40.removeExcludedYears(intList56, strMap58, "", strList70);
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry40.analysisType();
        java.util.Vector<java.lang.String> strList75 = excludeCountry40.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList76 = excludeCountry20.excludeYears(intList37, strMap38, "", strList75);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry8.removeExcludedYears(intList16, strMap18, "", strList75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray83 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList84 = new java.util.Vector<java.lang.Integer>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList84, intArray83);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = null;
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList90 = new java.util.Vector<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry80.removeExcludedYears(intList84, strMap86, "", strList90);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = excludeCountry80.readJson();
        java.util.Vector<java.lang.String> strList94 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList95 = excludeCountry0.excludeYears(intList77, strMap78, "hi!", strList94);
        java.util.ArrayList<java.lang.String> strList96 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap97 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass98 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNull(intList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNull(intList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNotNull(strMap97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 1, 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = excludeCountry13.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = excludeCountry13.readJson();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry13.analysisType();
        java.util.Vector<java.lang.Integer> intList29 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry45.removeExcludedYears(intList49, strMap51, "", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry32.removeExcludedYears(intList49, strMap58, "hi!", strList62);
        java.util.Vector<java.lang.String> strList65 = excludeCountry32.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry66.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeCountry66.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry66.ISOconverter();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry66.analysisType();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList73 = new java.util.Vector<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList73, intArray72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry77 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry77.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry77.analysisType();
        java.util.Vector<java.lang.String> strList80 = excludeCountry77.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry66.removeExcludedYears(intList73, strMap75, "hi!", strList80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry84 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry84.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry84.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry32.removeExcludedYears(intList73, strMap82, "", strList86);
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry13.excludeYears(intList29, strMap30, "", strList86);
        java.util.Vector<java.lang.String> strList89 = excludeCountry13.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList9, strMap11, "", strList89);
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList92 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList93 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList95 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNull(strList95);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList14);
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList19 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strList19);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList15);
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry5.removeExcludedYears(intList9, strMap11, "", strList15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry22.removeExcludedYears(intList38, strMap40, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.util.Vector<java.lang.String> strList58 = null;
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry20.removeExcludedYears(intList55, strMap56, "", strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry20.ISOconverter();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry20.analysisType();
        java.util.Vector<java.lang.String> strList62 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.excludeYears(intList9, strMap18, "hi!", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList65 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList7 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry10.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeCountry10.ISOconverter();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry10.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry10.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList20 = new java.util.Vector<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry16.removeExcludedYears(intList20, strMap22, "", strList26);
        statsVisualiser.facade.ExcludeCountry excludeCountry29 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry29.removeExcludedYears(intList33, strMap35, "", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry16.removeExcludedYears(intList33, strMap42, "hi!", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.util.Vector<java.lang.String> strList51 = null;
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry10.removeExcludedYears(intList48, strMap49, "hi!", strList51);
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList55 = new java.util.Vector<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = excludeCountry59.readJson();
        java.util.Vector<java.lang.String> strList73 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry10.excludeYears(intList55, strMap57, "", strList73);
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry10.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry10.analysisType();
        java.util.Vector<java.lang.String> strList77 = excludeCountry10.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList7, strMap8, "", strList77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry9.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeCountry9.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry9.ISOconverter();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry9.analysisType();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        java.util.ArrayList<java.lang.String> strList22 = excludeCountry20.analysisType();
        java.util.Vector<java.lang.String> strList23 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry9.removeExcludedYears(intList16, strMap18, "hi!", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList32 = new java.util.Vector<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList32, intArray31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry36.removeExcludedYears(intList53, strMap62, "hi!", strList66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry27.excludeYears(intList32, strMap34, "hi!", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = excludeCountry27.readJson();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry27.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = excludeCountry27.readJson();
        java.util.Vector<java.lang.String> strList73 = excludeCountry27.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry0.removeExcludedYears(intList16, strMap25, "", strList73);
        java.util.Vector<java.lang.String> strList75 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strList75);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeCountry6.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry6.ISOconverter();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList14 = new java.util.Vector<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList14, intArray13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        java.util.Vector<java.lang.String> strList18 = null;
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry6.excludeYears(intList14, strMap16, "", strList18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList23 = excludeCountry22.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = excludeCountry22.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry25.removeExcludedYears(intList29, strMap31, "", strList35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry40.removeExcludedYears(intList57, strMap66, "hi!", strList70);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry40.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry74.ISOconverter();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList82 = new java.util.Vector<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList82, intArray81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        java.util.Vector<java.lang.String> strList86 = null;
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry74.excludeYears(intList82, strMap84, "", strList86);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry90 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry90.analysisType();
        java.util.Vector<java.lang.String> strList92 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList93 = excludeCountry40.removeExcludedYears(intList82, strMap88, "", strList92);
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry22.excludeYears(intList29, strMap38, "", strList92);
        java.util.Vector<java.lang.Integer> intList95 = excludeCountry0.removeExcludedYears(intList14, strMap20, "hi!", strList92);
        java.util.Map<java.lang.String, java.lang.String> strMap96 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap97 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(intList93);
        org.junit.Assert.assertNull(intList94);
        org.junit.Assert.assertNull(intList95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNull(strMap97);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.Vector<java.lang.String> strList63 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry0.excludeYears(intList45, strMap47, "", strList63);
        java.lang.Class<?> wildcardClass65 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 1, 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = excludeCountry13.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = excludeCountry13.readJson();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry13.analysisType();
        java.util.Vector<java.lang.Integer> intList29 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry45.removeExcludedYears(intList49, strMap51, "", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry32.removeExcludedYears(intList49, strMap58, "hi!", strList62);
        java.util.Vector<java.lang.String> strList65 = excludeCountry32.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry66.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeCountry66.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry66.ISOconverter();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry66.analysisType();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList73 = new java.util.Vector<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList73, intArray72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry77 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry77.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry77.analysisType();
        java.util.Vector<java.lang.String> strList80 = excludeCountry77.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry66.removeExcludedYears(intList73, strMap75, "hi!", strList80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry84 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry84.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry84.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry32.removeExcludedYears(intList73, strMap82, "", strList86);
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry13.excludeYears(intList29, strMap30, "", strList86);
        java.util.Vector<java.lang.String> strList89 = excludeCountry13.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList9, strMap11, "", strList89);
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList94 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNull(strList94);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList71, strMap72, "", strList89);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList95 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNull(strList95);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass8 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strList37);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry12.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList16 = excludeCountry14.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry14.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry14.analysisType();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry25.analysisType();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry25.analysisType();
        java.util.Vector<java.lang.String> strList28 = excludeCountry25.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList29 = excludeCountry14.removeExcludedYears(intList21, strMap23, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry32.removeExcludedYears(intList48, strMap50, "", strList62);
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry32.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry32.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry12.excludeYears(intList29, strMap30, "", strList67);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry0.removeExcludedYears(intList8, strMap10, "", strList67);
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(intList29);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass37 = strList36.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 10, (-1), (-1), 0, 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry66.removeExcludedYears(intList70, strMap72, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry53.removeExcludedYears(intList70, strMap79, "hi!", strList83);
        java.util.Vector<java.lang.String> strList86 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry53.ISOconverter();
        java.util.Vector<java.lang.String> strList88 = excludeCountry53.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.removeExcludedYears(intList49, strMap51, "", strList88);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap90 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList92 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList93 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap94 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(intList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(strMap94);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeCountry17.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry17.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = excludeCountry17.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = excludeCountry17.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry17.excludeYears(intList27, strMap36, "hi!", strList38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry42.readJson();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry42.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeCountry42.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeCountry42.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry0.excludeYears(intList39, strMap40, "", strList46);
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass49 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass49 = strList48.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass18 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList75 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strMap76);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry42.analysisType();
        java.util.Vector<java.lang.String> strList44 = excludeCountry42.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry42.ISOconverter();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.util.Vector<java.lang.String> strList54 = null;
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry42.excludeYears(intList50, strMap52, "", strList54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = excludeCountry58.readJson();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry58.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeCountry58.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry58.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.removeExcludedYears(intList55, strMap56, "", strList62);
        java.lang.Class<?> wildcardClass64 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass87 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList18 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass10 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry5.initilizeCountries();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry17 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry17.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList20 = excludeCountry19.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeCountry19.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeCountry19.ISOconverter();
        java.util.ArrayList<java.lang.String> strList23 = excludeCountry19.analysisType();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry30 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList31 = excludeCountry30.analysisType();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry30.analysisType();
        java.util.Vector<java.lang.String> strList33 = excludeCountry30.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry19.removeExcludedYears(intList26, strMap28, "hi!", strList33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry57.removeExcludedYears(intList61, strMap63, "", strList67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry37.removeExcludedYears(intList53, strMap55, "", strList67);
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry37.analysisType();
        java.util.Vector<java.lang.String> strList72 = excludeCountry37.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry17.excludeYears(intList34, strMap35, "", strList72);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry5.removeExcludedYears(intList13, strMap15, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry77 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry77.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry77.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry77.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry77.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry77.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry0.removeExcludedYears(intList74, strMap75, "hi!", strList82);
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(strList85);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry3.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry3.analysisType();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeCountry14.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry3.removeExcludedYears(intList10, strMap12, "hi!", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry21.removeExcludedYears(intList37, strMap39, "", strList51);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList18, strMap19, "hi!", strList51);
        statsVisualiser.facade.ExcludeCountry excludeCountry56 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry56.analysisType();
        java.util.Vector<java.lang.String> strList58 = excludeCountry56.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry56.ISOconverter();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.util.Vector<java.lang.String> strList68 = null;
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry56.excludeYears(intList64, strMap66, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList73 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry72.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList80 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(strList81);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry3.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry3.analysisType();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeCountry14.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry3.removeExcludedYears(intList10, strMap12, "hi!", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry21.removeExcludedYears(intList37, strMap39, "", strList51);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList18, strMap19, "hi!", strList51);
        statsVisualiser.facade.ExcludeCountry excludeCountry56 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry56.analysisType();
        java.util.Vector<java.lang.String> strList58 = excludeCountry56.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry56.ISOconverter();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.util.Vector<java.lang.String> strList68 = null;
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry56.excludeYears(intList64, strMap66, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList73 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry72.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList82 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList83 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strList36);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 10, (-1), (-1), 0, 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry66.removeExcludedYears(intList70, strMap72, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry53.removeExcludedYears(intList70, strMap79, "hi!", strList83);
        java.util.Vector<java.lang.String> strList86 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry53.ISOconverter();
        java.util.Vector<java.lang.String> strList88 = excludeCountry53.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.removeExcludedYears(intList49, strMap51, "", strList88);
        java.util.Vector<java.lang.String> strList90 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(intList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strList90);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeCountry3.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry3.analysisType();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeCountry14.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry3.removeExcludedYears(intList10, strMap12, "hi!", strList17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry21 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry21.removeExcludedYears(intList25, strMap27, "", strList31);
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.Integer> intList53 = excludeCountry41.removeExcludedYears(intList45, strMap47, "", strList51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry21.removeExcludedYears(intList37, strMap39, "", strList51);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry0.removeExcludedYears(intList18, strMap19, "hi!", strList51);
        statsVisualiser.facade.ExcludeCountry excludeCountry56 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry56.analysisType();
        java.util.Vector<java.lang.String> strList58 = excludeCountry56.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry56.ISOconverter();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.util.Vector<java.lang.String> strList68 = null;
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry56.excludeYears(intList64, strMap66, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList73 = excludeCountry72.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry72.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry72.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry0.excludeYears(intList69, strMap70, "hi!", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList80 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(intList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry31 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry31.removeExcludedYears(intList35, strMap37, "", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry18.removeExcludedYears(intList35, strMap44, "hi!", strList48);
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry18.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeCountry52.ISOconverter();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.util.Vector<java.lang.String> strList64 = null;
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry52.excludeYears(intList60, strMap62, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry68 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry68.analysisType();
        java.util.Vector<java.lang.String> strList70 = excludeCountry68.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry18.removeExcludedYears(intList60, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList7, strMap16, "", strList70);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry9.analysisType();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry9.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = excludeCountry12.readJson();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry12.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = excludeCountry12.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry28 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList29 = excludeCountry28.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeCountry28.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeCountry28.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeCountry28.analysisType();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry39.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry39.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry39.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry28.removeExcludedYears(intList35, strMap37, "hi!", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry46.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeCountry46.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry46.ISOconverter();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry46.analysisType();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry57.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeCountry57.analysisType();
        java.util.Vector<java.lang.String> strList60 = excludeCountry57.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry46.removeExcludedYears(intList53, strMap55, "hi!", strList60);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry62.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeCountry62.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeCountry62.ISOconverter();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry62.analysisType();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry73 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry73.analysisType();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry73.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry73.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry62.removeExcludedYears(intList69, strMap71, "hi!", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry80 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList81 = excludeCountry80.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry46.removeExcludedYears(intList77, strMap78, "hi!", strList81);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry12.excludeYears(intList35, strMap44, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        java.util.Vector<java.lang.String> strList86 = null;
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry9.excludeYears(intList35, strMap84, "hi!", strList86);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap88 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry90 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList91 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.String> strList92 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.String> strList93 = excludeCountry90.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry0.removeExcludedYears(intList87, strMap88, "hi!", strList93);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList96 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList97 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(intList94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNotNull(strList96);
        org.junit.Assert.assertNotNull(strList97);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList16 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.String> strList52 = excludeCountry19.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry53.analysisType();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry64 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry64.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry64.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry64.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry53.removeExcludedYears(intList60, strMap62, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry71.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry71.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry19.removeExcludedYears(intList60, strMap69, "", strList73);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList16, strMap17, "", strList73);
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass83 = strList82.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        statsVisualiser.facade.ExcludeCountry excludeCountry43 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList47 = new java.util.Vector<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry43.removeExcludedYears(intList47, strMap49, "", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList75 = new java.util.Vector<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList75, intArray74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = null;
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry71.removeExcludedYears(intList75, strMap77, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        java.lang.String[] strArray87 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList88 = new java.util.Vector<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry58.removeExcludedYears(intList75, strMap84, "hi!", strList88);
        java.util.Vector<java.lang.String> strList91 = excludeCountry58.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry0.removeExcludedYears(intList47, strMap56, "hi!", strList91);
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNotNull(strMap93);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry0.readJson();
        java.util.Vector<java.lang.Integer> intList12 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry15 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry15.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry15.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeCountry15.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeCountry15.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList20 = excludeCountry0.excludeYears(intList12, strMap13, "hi!", strList19);
        java.util.Vector<java.lang.String> strList21 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(intList20);
        org.junit.Assert.assertNotNull(strList21);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        statsVisualiser.facade.ExcludeCountry excludeCountry33 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry33.removeExcludedYears(intList37, strMap39, "", strList43);
        statsVisualiser.facade.ExcludeCountry excludeCountry46 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.Integer> intList58 = excludeCountry46.removeExcludedYears(intList50, strMap52, "", strList56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry33.removeExcludedYears(intList50, strMap59, "hi!", strList63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList65, strMap66, "hi!", strList71);
        java.util.ArrayList<java.lang.String> strList74 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass75 = strList74.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(intList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(strList74);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 100, 100, 100, 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry66.removeExcludedYears(intList70, strMap72, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry53.removeExcludedYears(intList70, strMap79, "hi!", strList83);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap86 = excludeCountry53.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry53.analysisType();
        java.util.ArrayList<java.lang.String> strList89 = excludeCountry53.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeCountry53.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry53.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry53.ISOconverter();
        java.util.Vector<java.lang.String> strList93 = excludeCountry53.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList94 = excludeCountry0.removeExcludedYears(intList49, strMap51, "hi!", strList93);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(intList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNull(intList94);
        org.junit.Assert.assertNull(strMap95);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry12.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList16 = excludeCountry14.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry14.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry14.analysisType();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry25.analysisType();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry25.analysisType();
        java.util.Vector<java.lang.String> strList28 = excludeCountry25.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList29 = excludeCountry14.removeExcludedYears(intList21, strMap23, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry32.removeExcludedYears(intList48, strMap50, "", strList62);
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry32.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry32.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry12.excludeYears(intList29, strMap30, "", strList67);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry0.removeExcludedYears(intList8, strMap10, "", strList67);
        java.util.Vector<java.lang.String> strList70 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList75 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(intList29);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strList75);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass36 = strList35.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strMap57);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 1, 1, 1, 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry12.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry14.analysisType();
        java.util.Vector<java.lang.String> strList16 = excludeCountry14.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry14.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry14.analysisType();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry25 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList26 = excludeCountry25.analysisType();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry25.analysisType();
        java.util.Vector<java.lang.String> strList28 = excludeCountry25.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList29 = excludeCountry14.removeExcludedYears(intList21, strMap23, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry32.removeExcludedYears(intList48, strMap50, "", strList62);
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry32.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry32.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry12.excludeYears(intList29, strMap30, "", strList67);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry0.removeExcludedYears(intList8, strMap10, "", strList67);
        java.util.Vector<java.lang.String> strList70 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(intList29);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strMap74);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList14 = new java.util.Vector<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList14, intArray13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry31 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry31.removeExcludedYears(intList35, strMap37, "", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry18.removeExcludedYears(intList35, strMap44, "hi!", strList48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry9.excludeYears(intList14, strMap16, "hi!", strList48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList55 = excludeCountry54.analysisType();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry54.analysisType();
        java.util.ArrayList<java.lang.String> strList57 = excludeCountry54.analysisType();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry54.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry54.ISOconverter();
        java.util.Vector<java.lang.String> strList60 = excludeCountry54.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList14, strMap52, "hi!", strList60);
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass63 = strList62.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.lang.Class<?> wildcardClass37 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList83 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList84 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.ArrayList<java.lang.String> strList33 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass5 = strList4.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass47 = strList46.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Vector<java.lang.String> strList90 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap92 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strMap92);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList75 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strMap76);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass63 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList3 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = null;
        java.util.Vector<java.lang.String> strList6 = null;
        java.util.Vector<java.lang.Integer> intList7 = excludeCountry0.removeExcludedYears(intList3, strMap4, "", strList6);
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(intList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        statsVisualiser.facade.ExcludeCountry excludeCountry62 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList66 = new java.util.Vector<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList66, intArray65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.Integer> intList74 = excludeCountry62.removeExcludedYears(intList66, strMap68, "", strList72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry49.removeExcludedYears(intList66, strMap75, "hi!", strList79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry40.excludeYears(intList45, strMap47, "hi!", strList79);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.excludeYears(intList45, strMap83, "", strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap92 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(intList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strMap78);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry37.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeCountry37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry37.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry37.analysisType();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry48 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList49 = excludeCountry48.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry48.analysisType();
        java.util.Vector<java.lang.String> strList51 = excludeCountry48.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry37.removeExcludedYears(intList44, strMap46, "hi!", strList51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.util.Vector<java.lang.String> strList55 = null;
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry0.removeExcludedYears(intList52, strMap53, "hi!", strList55);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNull(intList56);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass41 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strList51);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry11 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry11.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry11.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeCountry11.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry0.removeExcludedYears(intList7, strMap9, "hi!", strList15);
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList4 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry7.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry7.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry7.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry0.removeExcludedYears(intList4, strMap5, "", strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList47 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList37 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strList39);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry5.removeExcludedYears(intList9, strMap11, "", strList15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry22.removeExcludedYears(intList38, strMap40, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.util.Vector<java.lang.String> strList58 = null;
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry20.removeExcludedYears(intList55, strMap56, "", strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry20.ISOconverter();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry20.analysisType();
        java.util.Vector<java.lang.String> strList62 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.excludeYears(intList9, strMap18, "hi!", strList62);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(strList65);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.util.Vector<java.lang.String> strList21 = null;
        java.util.Vector<java.lang.Integer> intList22 = excludeCountry0.excludeYears(intList10, strMap19, "hi!", strList21);
        java.lang.Class<?> wildcardClass23 = intList10.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNull(intList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList66 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strList67);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry5.removeExcludedYears(intList9, strMap11, "", strList15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList21 = excludeCountry20.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry22.removeExcludedYears(intList38, strMap40, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.util.Vector<java.lang.String> strList58 = null;
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry20.removeExcludedYears(intList55, strMap56, "", strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeCountry20.ISOconverter();
        java.util.ArrayList<java.lang.String> strList61 = excludeCountry20.analysisType();
        java.util.Vector<java.lang.String> strList62 = excludeCountry20.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList63 = excludeCountry0.excludeYears(intList9, strMap18, "hi!", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList65 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList66 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(intList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry5.removeExcludedYears(intList9, strMap11, "", strList15);
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry5.removeExcludedYears(intList22, strMap31, "hi!", strList35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry40.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry40.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry0.removeExcludedYears(intList37, strMap38, "", strList42);
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList47);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList5 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry8 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry8.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeCountry8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry8.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry12 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.Integer> intList24 = excludeCountry12.removeExcludedYears(intList16, strMap18, "", strList22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry27 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry27.removeExcludedYears(intList31, strMap33, "", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList44 = new java.util.Vector<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry40.removeExcludedYears(intList44, strMap46, "", strList50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry27.removeExcludedYears(intList44, strMap53, "hi!", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry8.excludeYears(intList24, strMap25, "", strList57);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.excludeYears(intList5, strMap6, "", strList57);
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass65 = strList64.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strList64);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList3 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry6.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry6.ISOconverter();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry6.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = excludeCountry6.readJson();
        java.util.Vector<java.lang.String> strList12 = excludeCountry6.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeCountry6.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeCountry6.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry6.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry6.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeCountry6.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry0.removeExcludedYears(intList3, strMap4, "", strList18);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(intList19);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList42 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry10.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry10.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry10.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeCountry10.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList20 = new java.util.Vector<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry16.removeExcludedYears(intList20, strMap22, "", strList26);
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList32 = new java.util.Vector<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList32, intArray31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry16.removeExcludedYears(intList32, strMap34, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry52.readJson();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry52.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeCountry52.ISOconverter();
        java.util.Vector<java.lang.String> strList68 = excludeCountry52.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry52.ISOconverter();
        java.util.Vector<java.lang.String> strList70 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry10.removeExcludedYears(intList32, strMap50, "", strList70);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeCountry74.ISOconverter();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList79 = excludeCountry74.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList80 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList81 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry0.removeExcludedYears(intList71, strMap72, "hi!", strList81);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(intList82);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList11 = new java.util.Vector<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.Integer> intList19 = excludeCountry7.removeExcludedYears(intList11, strMap13, "", strList17);
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry7.removeExcludedYears(intList24, strMap33, "hi!", strList37);
        java.util.Vector<java.lang.String> strList40 = excludeCountry7.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList60 = excludeCountry59.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry7.removeExcludedYears(intList48, strMap57, "", strList61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry65.removeExcludedYears(intList69, strMap71, "", strList75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList48, strMap63, "hi!", strList75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList80 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strList80);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strMap80);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList3 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass5 = strList4.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry47.removeExcludedYears(intList51, strMap53, "", strList57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList44, strMap45, "hi!", strList57);
        java.util.Vector<java.lang.String> strList61 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strMap68);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList36 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass37 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap2 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        statsVisualiser.facade.ExcludeCountry excludeCountry31 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry31.removeExcludedYears(intList35, strMap37, "", strList41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry18.removeExcludedYears(intList35, strMap44, "hi!", strList48);
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry18.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeCountry52.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeCountry52.ISOconverter();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList60 = new java.util.Vector<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = null;
        java.util.Vector<java.lang.String> strList64 = null;
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry52.excludeYears(intList60, strMap62, "", strList64);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry68 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry68.analysisType();
        java.util.Vector<java.lang.String> strList70 = excludeCountry68.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry18.removeExcludedYears(intList60, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList7, strMap16, "", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 10, (-1), (-1), 0, 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry66.removeExcludedYears(intList70, strMap72, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry53.removeExcludedYears(intList70, strMap79, "hi!", strList83);
        java.util.Vector<java.lang.String> strList86 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry53.ISOconverter();
        java.util.Vector<java.lang.String> strList88 = excludeCountry53.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.removeExcludedYears(intList49, strMap51, "", strList88);
        java.util.ArrayList<java.lang.String> strList90 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(intList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(strList90);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(strMap83);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry36.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry54 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList58 = new java.util.Vector<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap60 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.Integer> intList66 = excludeCountry54.removeExcludedYears(intList58, strMap60, "", strList64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry36.excludeYears(intList51, strMap52, "hi!", strList64);
        java.util.Vector<java.lang.Integer> intList68 = excludeCountry0.excludeYears(intList18, strMap34, "", strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList70 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(intList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.Vector<java.lang.String> strList32 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList38 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList39 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 1, 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = excludeCountry13.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = excludeCountry13.readJson();
        java.util.ArrayList<java.lang.String> strList28 = excludeCountry13.analysisType();
        java.util.Vector<java.lang.Integer> intList29 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry45.removeExcludedYears(intList49, strMap51, "", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry32.removeExcludedYears(intList49, strMap58, "hi!", strList62);
        java.util.Vector<java.lang.String> strList65 = excludeCountry32.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry66.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeCountry66.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry66.ISOconverter();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry66.analysisType();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList73 = new java.util.Vector<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList73, intArray72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry77 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry77.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry77.analysisType();
        java.util.Vector<java.lang.String> strList80 = excludeCountry77.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList81 = excludeCountry66.removeExcludedYears(intList73, strMap75, "hi!", strList80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry84 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry84.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry84.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry32.removeExcludedYears(intList73, strMap82, "", strList86);
        java.util.Vector<java.lang.Integer> intList88 = excludeCountry13.excludeYears(intList29, strMap30, "", strList86);
        java.util.Vector<java.lang.String> strList89 = excludeCountry13.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList9, strMap11, "", strList89);
        java.util.ArrayList<java.lang.String> strList91 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList92 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList93 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap94 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(intList81);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNull(intList87);
        org.junit.Assert.assertNull(intList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strMap94);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass4 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry47 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry47.analysisType();
        java.util.Vector<java.lang.String> strList49 = excludeCountry47.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry47.ISOconverter();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList55 = new java.util.Vector<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        java.util.Vector<java.lang.String> strList59 = null;
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry47.excludeYears(intList55, strMap57, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeCountry63.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeCountry63.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry63.readJson();
        java.util.ArrayList<java.lang.String> strList67 = excludeCountry63.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeCountry63.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry0.excludeYears(intList60, strMap61, "hi!", strList68);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(intList69);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry3.analysisType();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry3.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry3.ISOconverter();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry3.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry3.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.util.Vector<java.lang.String> strList44 = null;
        java.util.Vector<java.lang.Integer> intList45 = excludeCountry3.removeExcludedYears(intList41, strMap42, "hi!", strList44);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry52.readJson();
        java.util.Vector<java.lang.String> strList66 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry3.excludeYears(intList48, strMap50, "", strList66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry70 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList72 = excludeCountry70.analysisType();
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry70.analysisType();
        java.util.Vector<java.lang.String> strList74 = excludeCountry70.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry0.excludeYears(intList67, strMap68, "", strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList78 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass46 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry26 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList30 = new java.util.Vector<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList30, intArray29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry26.removeExcludedYears(intList30, strMap32, "", strList36);
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry6.removeExcludedYears(intList22, strMap24, "", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry42 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry42.removeExcludedYears(intList46, strMap48, "", strList52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = excludeCountry42.readJson();
        java.util.ArrayList<java.lang.String> strList56 = excludeCountry42.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry42.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeCountry42.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeCountry42.ISOconverter();
        java.util.Vector<java.lang.String> strList60 = excludeCountry42.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry0.removeExcludedYears(intList22, strMap40, "", strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList63 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strList64);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList6 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList10 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList13 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap46 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList48 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList50 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strList50);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList9 = new java.util.Vector<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.Integer> intList17 = excludeCountry5.removeExcludedYears(intList9, strMap11, "", strList15);
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.Integer> intList37 = excludeCountry5.removeExcludedYears(intList22, strMap31, "hi!", strList35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry40 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry40.analysisType();
        java.util.Vector<java.lang.String> strList42 = excludeCountry40.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList43 = excludeCountry0.removeExcludedYears(intList37, strMap38, "", strList42);
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(intList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList20 = new java.util.Vector<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry16.removeExcludedYears(intList20, strMap22, "", strList26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry3.removeExcludedYears(intList20, strMap29, "hi!", strList33);
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry3.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList38 = excludeCountry37.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeCountry37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry37.ISOconverter();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.util.Vector<java.lang.String> strList49 = null;
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry37.excludeYears(intList45, strMap47, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry53.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry53.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry3.removeExcludedYears(intList45, strMap51, "", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = null;
        java.lang.String[] strArray88 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList89 = new java.util.Vector<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry59.removeExcludedYears(intList76, strMap85, "hi!", strList89);
        java.util.Vector<java.lang.String> strList92 = excludeCountry59.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeCountry59.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry59.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry59.readJson();
        java.util.Vector<java.lang.String> strList96 = excludeCountry59.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList97 = excludeCountry0.removeExcludedYears(intList56, strMap57, "", strList96);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass98 = intList56.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNotNull(strList96);
        org.junit.Assert.assertNull(intList97);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.Vector<java.lang.String> strList53 = excludeCountry0.initilizeCountries();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry60 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList64 = new java.util.Vector<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry60.removeExcludedYears(intList64, strMap66, "", strList70);
        java.util.Vector<java.lang.Integer> intList73 = excludeCountry0.removeExcludedYears(intList56, strMap58, "hi!", strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList76 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList77 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList80 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(intList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList81 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strMap82);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { 10, (-1), (-1), 0, 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry53 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList57 = new java.util.Vector<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList57, intArray56);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.Integer> intList65 = excludeCountry53.removeExcludedYears(intList57, strMap59, "", strList63);
        statsVisualiser.facade.ExcludeCountry excludeCountry66 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList70 = new java.util.Vector<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList70, intArray69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry66.removeExcludedYears(intList70, strMap72, "", strList76);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.Integer> intList85 = excludeCountry53.removeExcludedYears(intList70, strMap79, "hi!", strList83);
        java.util.Vector<java.lang.String> strList86 = excludeCountry53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeCountry53.ISOconverter();
        java.util.Vector<java.lang.String> strList88 = excludeCountry53.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList89 = excludeCountry0.removeExcludedYears(intList49, strMap51, "", strList88);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap90 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass92 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(intList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(intList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNull(intList89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry41 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry41.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeCountry41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry41.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList53 = excludeCountry52.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeCountry52.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeCountry52.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry41.removeExcludedYears(intList48, strMap50, "hi!", strList55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry59 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry59.removeExcludedYears(intList63, strMap65, "", strList69);
        java.util.Vector<java.lang.Integer> intList72 = excludeCountry0.excludeYears(intList48, strMap57, "", strList69);
        java.util.ArrayList<java.lang.String> strList73 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList74 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(intList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList49 = new java.util.Vector<java.lang.Integer>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList49, intArray48);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.Integer> intList57 = excludeCountry45.removeExcludedYears(intList49, strMap51, "", strList55);
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList61 = new java.util.Vector<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList61, intArray60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry65 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList69 = new java.util.Vector<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap71 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry65.removeExcludedYears(intList69, strMap71, "", strList75);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry45.removeExcludedYears(intList61, strMap63, "", strList75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap79 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry81 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap82 = excludeCountry81.readJson();
        java.util.ArrayList<java.lang.String> strList83 = excludeCountry81.analysisType();
        java.util.Vector<java.lang.String> strList84 = excludeCountry81.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry81.readJson();
        java.util.Vector<java.lang.String> strList86 = excludeCountry81.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList87 = excludeCountry0.removeExcludedYears(intList61, strMap79, "", strList86);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNull(intList87);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList15 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry5 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry5.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry5.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry5.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry5.analysisType();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList12 = new java.util.Vector<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList12, intArray11);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList17 = excludeCountry16.analysisType();
        java.util.ArrayList<java.lang.String> strList18 = excludeCountry16.analysisType();
        java.util.Vector<java.lang.String> strList19 = excludeCountry16.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList20 = excludeCountry5.removeExcludedYears(intList12, strMap14, "hi!", strList19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList24 = excludeCountry23.analysisType();
        java.util.Vector<java.lang.String> strList25 = excludeCountry23.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeCountry23.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeCountry23.analysisType();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList30 = new java.util.Vector<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList30, intArray29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry34 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry34.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry34.analysisType();
        java.util.Vector<java.lang.String> strList37 = excludeCountry34.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry23.removeExcludedYears(intList30, strMap32, "hi!", strList37);
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry39.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry39.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry39.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry39.analysisType();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList51 = excludeCountry50.analysisType();
        java.util.ArrayList<java.lang.String> strList52 = excludeCountry50.analysisType();
        java.util.Vector<java.lang.String> strList53 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList54 = excludeCountry39.removeExcludedYears(intList46, strMap48, "hi!", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry57 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList58 = excludeCountry57.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList59 = excludeCountry23.removeExcludedYears(intList54, strMap55, "hi!", strList58);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry0.excludeYears(intList20, strMap21, "hi!", strList58);
        statsVisualiser.facade.ExcludeCountry excludeCountry61 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList62 = excludeCountry61.analysisType();
        java.util.ArrayList<java.lang.String> strList63 = excludeCountry61.analysisType();
        java.util.ArrayList<java.lang.String> strList64 = excludeCountry61.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = excludeCountry61.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap66 = excludeCountry61.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry67 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList71 = new java.util.Vector<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList71, intArray70);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = null;
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.Integer> intList79 = excludeCountry67.removeExcludedYears(intList71, strMap73, "", strList77);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = null;
        java.util.Vector<java.lang.String> strList82 = null;
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry61.excludeYears(intList71, strMap80, "hi!", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry86 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry86.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry86.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry86.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap90 = excludeCountry86.readJson();
        java.util.Vector<java.lang.String> strList91 = excludeCountry86.initilizeCountries();
        java.util.Vector<java.lang.String> strList92 = excludeCountry86.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList93 = excludeCountry0.excludeYears(intList71, strMap84, "", strList92);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap94 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList95 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap96 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(intList20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(intList59);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(intList79);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNull(intList93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 100, 0, 100 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry50.removeExcludedYears(intList54, strMap56, "", strList60);
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList67 = new java.util.Vector<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList67, intArray66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry63.removeExcludedYears(intList67, strMap69, "", strList73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry50.removeExcludedYears(intList67, strMap76, "hi!", strList80);
        java.util.Vector<java.lang.String> strList83 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.excludeYears(intList46, strMap48, "", strList83);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList87 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(strList87);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry4 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.Integer> intList16 = excludeCountry4.removeExcludedYears(intList8, strMap10, "", strList14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        statsVisualiser.facade.ExcludeCountry excludeCountry32 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.Integer> intList44 = excludeCountry32.removeExcludedYears(intList36, strMap38, "", strList42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry19.removeExcludedYears(intList36, strMap45, "hi!", strList49);
        java.util.Vector<java.lang.Integer> intList52 = excludeCountry0.excludeYears(intList16, strMap17, "", strList49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList54 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList58 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(intList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNull(intList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(strList58);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.lang.Class<?> wildcardClass8 = excludeCountry0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList42 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass46 = strList45.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList87 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass88 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.ArrayList<java.lang.String> strList79 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList81 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList84 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass87 = strList86.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry1 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.Integer> intList13 = excludeCountry1.removeExcludedYears(intList5, strMap7, "", strList11);
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.Integer> intList26 = excludeCountry14.removeExcludedYears(intList18, strMap20, "", strList24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry1.removeExcludedYears(intList18, strMap27, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList37 = excludeCountry36.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeCountry36.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList33, strMap34, "hi!", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        statsVisualiser.facade.ExcludeCountry excludeCountry43 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList47 = new java.util.Vector<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry43.removeExcludedYears(intList47, strMap49, "", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        statsVisualiser.facade.ExcludeCountry excludeCountry71 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList75 = new java.util.Vector<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList75, intArray74);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap77 = null;
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.Integer> intList83 = excludeCountry71.removeExcludedYears(intList75, strMap77, "", strList81);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = null;
        java.lang.String[] strArray87 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList88 = new java.util.Vector<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry58.removeExcludedYears(intList75, strMap84, "hi!", strList88);
        java.util.Vector<java.lang.String> strList91 = excludeCountry58.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList92 = excludeCountry0.removeExcludedYears(intList47, strMap56, "hi!", strList91);
        java.util.Vector<java.lang.String> strList93 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(intList83);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNull(intList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNotNull(strMap94);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList5 = new java.util.Vector<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList5, intArray4);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry9 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList13 = new java.util.Vector<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList13, intArray12);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.Integer> intList21 = excludeCountry9.removeExcludedYears(intList13, strMap15, "", strList19);
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.Integer> intList41 = excludeCountry9.removeExcludedYears(intList26, strMap35, "hi!", strList39);
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.excludeYears(intList5, strMap7, "hi!", strList39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList45 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList49 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap51 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(intList41);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList44 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry3 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList7 = new java.util.Vector<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList7, intArray6);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.Integer> intList15 = excludeCountry3.removeExcludedYears(intList7, strMap9, "", strList13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry18 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.Integer> intList30 = excludeCountry18.removeExcludedYears(intList22, strMap24, "", strList28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry0.excludeYears(intList15, strMap16, "hi!", strList28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry37 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.Integer> intList49 = excludeCountry37.removeExcludedYears(intList41, strMap43, "", strList47);
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry50.removeExcludedYears(intList54, strMap56, "", strList60);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap63 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.Integer> intList69 = excludeCountry37.removeExcludedYears(intList54, strMap63, "hi!", strList67);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap70 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry72 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList76 = new java.util.Vector<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList76, intArray75);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = null;
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry72.removeExcludedYears(intList76, strMap78, "", strList82);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap85 = excludeCountry72.readJson();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry72.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry72.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeCountry72.ISOconverter();
        java.util.Vector<java.lang.String> strList89 = excludeCountry72.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry0.excludeYears(intList54, strMap70, "hi!", strList89);
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList92 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(intList30);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(intList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(intList69);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(strList92);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList4 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList9 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.Vector<java.lang.String> strList1 = excludeCountry0.initilizeCountries();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        statsVisualiser.facade.ExcludeCountry excludeCountry39 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry39.removeExcludedYears(intList43, strMap45, "", strList49);
        statsVisualiser.facade.ExcludeCountry excludeCountry52 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList56 = new java.util.Vector<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList56, intArray55);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry52.removeExcludedYears(intList56, strMap58, "", strList62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry39.removeExcludedYears(intList56, strMap65, "hi!", strList69);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.Vector<java.lang.String> strList76 = excludeCountry74.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList77 = excludeCountry38.removeExcludedYears(intList71, strMap72, "hi!", strList76);
        java.util.Vector<java.lang.Integer> intList78 = excludeCountry0.excludeYears(intList35, strMap36, "hi!", strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap80 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap84 = excludeCountry0.readJson();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass85 = strMap84.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(intList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(intList77);
        org.junit.Assert.assertNull(intList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(strMap84);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = excludeCountry0.readJson();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList43 = excludeCountry0.initilizeCountries();
        java.lang.Class<?> wildcardClass44 = strList43.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap1 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry7 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList8 = excludeCountry7.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeCountry7.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeCountry7.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeCountry7.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeCountry7.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry7.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry14 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 0, 0, (-1) };
        java.util.Vector<java.lang.Integer> intList19 = new java.util.Vector<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry23 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry23.removeExcludedYears(intList27, strMap29, "", strList33);
        statsVisualiser.facade.ExcludeCountry excludeCountry36 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.Integer> intList48 = excludeCountry36.removeExcludedYears(intList40, strMap42, "", strList46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.Integer> intList55 = excludeCountry23.removeExcludedYears(intList40, strMap49, "hi!", strList53);
        java.util.Vector<java.lang.Integer> intList56 = excludeCountry14.excludeYears(intList19, strMap21, "hi!", strList53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        java.util.Vector<java.lang.String> strList59 = null;
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry7.removeExcludedYears(intList19, strMap57, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList67 = new java.util.Vector<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList67, intArray66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry63.removeExcludedYears(intList67, strMap69, "", strList73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = excludeCountry63.readJson();
        java.util.Vector<java.lang.String> strList77 = excludeCountry63.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap78 = excludeCountry63.readJson();
        java.util.Vector<java.lang.String> strList79 = excludeCountry63.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList80 = excludeCountry0.excludeYears(intList60, strMap61, "", strList79);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(intList55);
        org.junit.Assert.assertNull(intList56);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(intList80);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.Vector<java.lang.String> strList33 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList37 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList5 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap7 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry20 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry20.removeExcludedYears(intList24, strMap26, "", strList30);
        java.util.Vector<java.lang.Integer> intList33 = excludeCountry0.removeExcludedYears(intList16, strMap18, "", strList30);
        java.util.ArrayList<java.lang.String> strList34 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        statsVisualiser.facade.ExcludeCountry excludeCountry38 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.Integer> intList50 = excludeCountry38.removeExcludedYears(intList42, strMap44, "", strList48);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry58 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList62 = new java.util.Vector<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.Integer> intList70 = excludeCountry58.removeExcludedYears(intList62, strMap64, "", strList68);
        java.util.Vector<java.lang.Integer> intList71 = excludeCountry38.removeExcludedYears(intList54, strMap56, "", strList68);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap72 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry74 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList75 = excludeCountry74.analysisType();
        java.util.ArrayList<java.lang.String> strList76 = excludeCountry74.analysisType();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList81 = new java.util.Vector<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap83 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry85 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList86 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry85.analysisType();
        java.util.ArrayList<java.lang.String> strList88 = excludeCountry85.analysisType();
        java.util.Vector<java.lang.String> strList89 = excludeCountry85.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList90 = excludeCountry74.removeExcludedYears(intList81, strMap83, "hi!", strList89);
        java.util.Vector<java.lang.Integer> intList91 = excludeCountry0.excludeYears(intList71, strMap72, "", strList89);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap93 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList94 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap95 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap96 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList97 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap98 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap99 = excludeCountry0.readJson();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(intList50);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(intList70);
        org.junit.Assert.assertNull(intList71);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(intList90);
        org.junit.Assert.assertNull(intList91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strMap98);
        org.junit.Assert.assertNull(strMap99);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        statsVisualiser.facade.ExcludeCountry excludeCountry13 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.Integer> intList25 = excludeCountry13.removeExcludedYears(intList17, strMap19, "", strList23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry0.removeExcludedYears(intList17, strMap26, "hi!", strList30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList39 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList4 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap5 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry6 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.Integer> intList18 = excludeCountry6.removeExcludedYears(intList10, strMap12, "", strList16);
        statsVisualiser.facade.ExcludeCountry excludeCountry19 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.Integer> intList31 = excludeCountry19.removeExcludedYears(intList23, strMap25, "", strList29);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.Integer> intList38 = excludeCountry6.removeExcludedYears(intList23, strMap32, "hi!", strList36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.Integer> intList42 = excludeCountry0.removeExcludedYears(intList38, strMap39, "hi!", strList41);
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry49 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList53 = new java.util.Vector<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.Integer> intList61 = excludeCountry49.removeExcludedYears(intList53, strMap55, "", strList59);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap62 = excludeCountry49.readJson();
        java.util.Vector<java.lang.String> strList63 = excludeCountry49.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList64 = excludeCountry0.excludeYears(intList45, strMap47, "", strList63);
        java.util.ArrayList<java.lang.String> strList65 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList67 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList68 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList69 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(intList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(intList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(intList38);
        org.junit.Assert.assertNull(intList42);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(intList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(intList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList6 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList7 = excludeCountry0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeCountry0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.Integer> intList42 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry45 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList46 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeCountry45.analysisType();
        java.util.ArrayList<java.lang.String> strList48 = excludeCountry45.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = excludeCountry45.readJson();
        java.util.Vector<java.lang.String> strList50 = excludeCountry45.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList51 = excludeCountry0.excludeYears(intList42, strMap43, "hi!", strList50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass52 = intList51.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(intList51);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList4 = new java.util.Vector<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList4, intArray3);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.Integer> intList12 = excludeCountry0.removeExcludedYears(intList4, strMap6, "", strList10);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = excludeCountry0.readJson();
        java.util.Vector<java.lang.String> strList14 = excludeCountry0.initilizeCountries();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList16 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeCountry0.ISOconverter();
        java.lang.Class<?> wildcardClass18 = excludeCountry0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        statsVisualiser.facade.ExcludeCountry excludeCountry2 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList6 = new java.util.Vector<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.Integer> intList14 = excludeCountry2.removeExcludedYears(intList6, strMap8, "", strList12);
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 100, (-1) };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry22 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList26 = new java.util.Vector<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.Integer> intList34 = excludeCountry22.removeExcludedYears(intList26, strMap28, "", strList32);
        java.util.Vector<java.lang.Integer> intList35 = excludeCountry2.removeExcludedYears(intList18, strMap20, "", strList32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.Integer> intList39 = excludeCountry0.removeExcludedYears(intList35, strMap36, "", strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = excludeCountry0.readJson();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 100, 0, 100 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry50 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.Integer> intList62 = excludeCountry50.removeExcludedYears(intList54, strMap56, "", strList60);
        statsVisualiser.facade.ExcludeCountry excludeCountry63 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList67 = new java.util.Vector<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList67, intArray66);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap69 = null;
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.Integer> intList75 = excludeCountry63.removeExcludedYears(intList67, strMap69, "", strList73);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.Integer> intList82 = excludeCountry50.removeExcludedYears(intList67, strMap76, "hi!", strList80);
        java.util.Vector<java.lang.String> strList83 = excludeCountry50.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList84 = excludeCountry0.excludeYears(intList46, strMap48, "", strList83);
        java.util.ArrayList<java.lang.String> strList85 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap86 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList87 = excludeCountry0.analysisType();
        java.util.Vector<java.lang.String> strList88 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap89 = excludeCountry0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList90 = excludeCountry0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(intList35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(intList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(intList75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(intList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(intList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNull(strList90);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeCountry0.ISOconverter();
        java.util.Vector<java.lang.String> strList5 = excludeCountry0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = excludeCountry0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeCountry0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        statsVisualiser.facade.ExcludeCountry excludeCountry0 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList1 = excludeCountry0.analysisType();
        java.util.ArrayList<java.lang.String> strList2 = excludeCountry0.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap3 = excludeCountry0.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap4 = excludeCountry0.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap6 = excludeCountry0.readJson();
        java.util.ArrayList<java.lang.String> strList7 = excludeCountry0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeCountry0.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap9 = excludeCountry0.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry10 = new statsVisualiser.facade.ExcludeCountry();
        java.util.ArrayList<java.lang.String> strList11 = excludeCountry10.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeCountry10.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeCountry10.analysisType();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = excludeCountry10.readJson();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = excludeCountry10.readJson();
        statsVisualiser.facade.ExcludeCountry excludeCountry16 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList20 = new java.util.Vector<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.Integer> intList28 = excludeCountry16.removeExcludedYears(intList20, strMap22, "", strList26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        java.util.Vector<java.lang.String> strList31 = null;
        java.util.Vector<java.lang.Integer> intList32 = excludeCountry10.excludeYears(intList20, strMap29, "hi!", strList31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        statsVisualiser.facade.ExcludeCountry excludeCountry35 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList39 = new java.util.Vector<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList39, intArray38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.Integer> intList47 = excludeCountry35.removeExcludedYears(intList39, strMap41, "", strList45);
        statsVisualiser.facade.ExcludeCountry excludeCountry48 = new statsVisualiser.facade.ExcludeCountry();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList52 = new java.util.Vector<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList52, intArray51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap54 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.Integer> intList60 = excludeCountry48.removeExcludedYears(intList52, strMap54, "", strList58);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap61 = null;
        java.lang.String[] strArray64 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.Integer> intList67 = excludeCountry35.removeExcludedYears(intList52, strMap61, "hi!", strList65);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap68 = excludeCountry35.readJson();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeCountry35.ISOconverter();
        java.util.ArrayList<java.lang.String> strList70 = excludeCountry35.analysisType();
        java.util.ArrayList<java.lang.String> strList71 = excludeCountry35.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeCountry35.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap73 = excludeCountry35.readJson();
        java.util.Vector<java.lang.String> strList74 = excludeCountry35.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeCountry35.ISOconverter();
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap76 = excludeCountry35.readJson();
        java.util.Vector<java.lang.String> strList77 = excludeCountry35.initilizeCountries();
        java.util.Vector<java.lang.String> strList78 = excludeCountry35.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList79 = excludeCountry0.excludeYears(intList20, strMap33, "hi!", strList78);
        java.lang.Class<?> wildcardClass80 = intList20.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(intList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(intList60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(intList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNull(intList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }
}

