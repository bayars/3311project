package randoopoutput;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest59 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears39.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears0.findExcludedCountries(strList51);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears54.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeYears54.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList63 = excludeYears54.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeYears54.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList72 = excludeYears65.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears73 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList74 = excludeYears73.initilizeCountries();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears73.findExcludedCountries(strList77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears73.ISOconverter();
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.String> strList85 = excludeYears73.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList86 = excludeYears65.findExcludedCountries(strList85);
        java.util.ArrayList<java.lang.String> strList87 = excludeYears65.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeYears65.ISOconverter();
        java.lang.String[] strArray90 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList91 = new java.util.Vector<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        java.util.Vector<java.lang.String> strList93 = excludeYears65.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList94 = excludeYears54.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList95 = excludeYears0.findExcludedCountries(strList94);
        java.util.ArrayList<java.lang.String> strList96 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList97 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap98 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNotNull(strList96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strMap98);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList16 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears19.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears19.analysisType();
        java.util.Vector<java.lang.String> strList29 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList37 = excludeYears30.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears38.ISOconverter();
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears38.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears30.findExcludedCountries(strList50);
        java.util.ArrayList<java.lang.String> strList52 = excludeYears30.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears30.ISOconverter();
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears30.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears19.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList60 = excludeYears0.findExcludedCountries(strList56);
        java.util.ArrayList<java.lang.String> strList61 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(strMap62);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList28 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears8.ISOconverter();
        java.util.Vector<java.lang.String> strList17 = excludeYears8.initilizeCountries();
        java.util.Vector<java.lang.String> strList18 = excludeYears8.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears8.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears8.analysisType();
        java.util.ArrayList<java.lang.String> strList21 = excludeYears8.analysisType();
        java.util.ArrayList<java.lang.String> strList22 = excludeYears8.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears23.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears25.ISOconverter();
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears25.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears23.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList39 = excludeYears8.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass42 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.ArrayList<java.lang.String> strList20 = excludeYears13.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList22 = excludeYears13.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears23.initilizeCountries();
        java.util.Vector<java.lang.String> strList32 = excludeYears23.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears23.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears13.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList42 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList43 = null;
        java.util.Vector<java.lang.String> strList44 = excludeYears0.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass46 = strMap45.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.ArrayList<java.lang.String> strList39 = excludeYears32.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears32.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList48 = excludeYears0.findExcludedCountries(strList47);
        java.util.Vector<java.lang.String> strList49 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList51 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList52 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears28.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears30.ISOconverter();
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears30.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList43 = excludeYears28.findExcludedCountries(strList40);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears28.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeYears45.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeYears45.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeYears45.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears56.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears64 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList65 = excludeYears64.initilizeCountries();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears64.findExcludedCountries(strList68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears64.ISOconverter();
        java.lang.String[] strArray73 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears64.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears56.findExcludedCountries(strList76);
        java.util.ArrayList<java.lang.String> strList78 = excludeYears56.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears56.ISOconverter();
        java.lang.String[] strArray81 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.String> strList84 = excludeYears56.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList85 = excludeYears45.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList86 = excludeYears28.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList87 = excludeYears0.findExcludedCountries(strList82);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strMap88);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass27 = strList26.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.ArrayList<java.lang.String> strList18 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears11.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList27 = excludeYears0.findExcludedCountries(strList26);
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears28.ISOconverter();
        java.util.Vector<java.lang.String> strList37 = excludeYears28.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears28.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears28.ISOconverter();
        java.util.ArrayList<java.lang.String> strList40 = excludeYears28.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears28.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears28.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears43 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList44 = excludeYears43.initilizeCountries();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears43.findExcludedCountries(strList47);
        java.util.Vector<java.lang.String> strList50 = excludeYears43.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears51.ISOconverter();
        java.lang.String[] strArray60 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears51.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList64 = excludeYears43.findExcludedCountries(strList63);
        java.util.ArrayList<java.lang.String> strList65 = excludeYears43.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears43.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears43.findExcludedCountries(strList70);
        java.lang.String[] strArray75 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.String> strList78 = excludeYears43.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList79 = excludeYears28.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList80 = excludeYears0.findExcludedCountries(strList79);
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass82 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears31.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears31.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears34.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears36.ISOconverter();
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears36.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears34.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList50 = excludeYears34.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList58 = excludeYears51.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeYears51.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList60 = excludeYears51.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeYears51.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears62.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeYears70.ISOconverter();
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.String> strList82 = excludeYears70.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList83 = excludeYears62.findExcludedCountries(strList82);
        java.util.ArrayList<java.lang.String> strList84 = excludeYears62.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeYears62.ISOconverter();
        java.lang.String[] strArray87 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList88 = new java.util.Vector<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Vector<java.lang.String> strList90 = excludeYears62.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList91 = excludeYears51.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList92 = excludeYears34.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList93 = excludeYears31.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList94 = excludeYears18.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList95 = excludeYears0.findExcludedCountries(strList94);
        java.util.ArrayList<java.lang.String> strList96 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass97 = strList96.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNotNull(strList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList16 = excludeYears15.initilizeCountries();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears15.findExcludedCountries(strList19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeYears15.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears15.ISOconverter();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears15.analysisType();
        java.util.ArrayList<java.lang.String> strList25 = excludeYears15.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList27 = excludeYears26.initilizeCountries();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.String> strList32 = excludeYears26.findExcludedCountries(strList30);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears26.ISOconverter();
        java.util.Vector<java.lang.String> strList34 = excludeYears26.initilizeCountries();
        java.util.Vector<java.lang.String> strList35 = excludeYears26.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList43 = excludeYears26.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList44 = excludeYears15.findExcludedCountries(strList43);
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeYears45.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears55.ISOconverter();
        java.util.Vector<java.lang.String> strList63 = excludeYears55.initilizeCountries();
        java.util.Vector<java.lang.String> strList64 = excludeYears55.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList72 = excludeYears55.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList73 = excludeYears45.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList74 = excludeYears15.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList75 = excludeYears0.findExcludedCountries(strList69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass76 = strList75.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList23 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass26 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 1, (-1), 0 };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        java.util.Vector<java.lang.String> strList25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList26 = excludeYears0.excludeYears(intList21, strMap23, "", strList25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.util.Vector<java.lang.String> strList26 = excludeYears18.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears18.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears18.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears37.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeYears37.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears37.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears47.ISOconverter();
        java.util.Vector<java.lang.String> strList55 = excludeYears47.initilizeCountries();
        java.util.Vector<java.lang.String> strList56 = excludeYears47.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList64 = excludeYears47.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList65 = excludeYears37.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList66 = excludeYears0.findExcludedCountries(strList61);
        java.util.ArrayList<java.lang.String> strList67 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList70 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears39.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears39.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears39.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears39.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears50.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeYears50.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeYears50.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears50.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears39.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.findExcludedCountries(strList68);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList71 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.ArrayList<java.lang.String> strList41 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears42.initilizeCountries();
        java.util.Vector<java.lang.String> strList50 = excludeYears42.initilizeCountries();
        java.util.Vector<java.lang.String> strList51 = excludeYears42.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.util.Vector<java.lang.String> strList60 = excludeYears52.initilizeCountries();
        java.util.Vector<java.lang.String> strList61 = excludeYears52.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears52.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears42.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList71 = excludeYears0.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList72 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList73 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass75 = strMap74.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strMap74);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList30);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears10.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears0.findExcludedCountries(strList26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass28 = strList26.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList45 = excludeYears37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears37.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears37.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.util.Vector<java.lang.String> strList56 = excludeYears48.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeYears48.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears48.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList66 = excludeYears37.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList67 = excludeYears0.findExcludedCountries(strList66);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList69 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { 10 };
        java.util.Vector<java.lang.Integer> intList72 = new java.util.Vector<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList72, intArray71);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap74 = null;
        statsVisualiser.facade.ExcludeYears excludeYears76 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList77 = excludeYears76.initilizeCountries();
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.String> strList82 = excludeYears76.findExcludedCountries(strList80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeYears76.ISOconverter();
        java.lang.String[] strArray85 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList86 = new java.util.Vector<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        java.util.Vector<java.lang.String> strList88 = excludeYears76.findExcludedCountries(strList86);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList89 = excludeYears0.removeExcludedYears(intList72, strMap74, "hi!", strList88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(strList88);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass23 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.ArrayList<java.lang.String> strList18 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears11.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList27 = excludeYears0.findExcludedCountries(strList26);
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList37 = excludeYears29.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears29.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeYears29.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears40.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears48.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears40.findExcludedCountries(strList60);
        java.util.ArrayList<java.lang.String> strList62 = excludeYears40.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears40.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears40.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears29.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList73 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears9.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears9.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears9.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears26.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears26.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears9.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList42);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears46.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeYears46.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList55 = excludeYears46.analysisType();
        java.util.Vector<java.lang.String> strList56 = excludeYears46.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeYears46.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears46.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears46.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears60.initilizeCountries();
        java.util.Vector<java.lang.String> strList68 = excludeYears60.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeYears60.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears60.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears71 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList72 = excludeYears71.initilizeCountries();
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears71.findExcludedCountries(strList75);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears71.ISOconverter();
        java.lang.String[] strArray80 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.String> strList83 = excludeYears71.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList84 = excludeYears60.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList85 = excludeYears46.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList86 = excludeYears0.findExcludedCountries(strList81);
        java.util.ArrayList<java.lang.String> strList87 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(strList87);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass43 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList11 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList14 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears30.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears30.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears33.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears35.ISOconverter();
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears35.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears33.findExcludedCountries(strList45);
        java.util.ArrayList<java.lang.String> strList49 = excludeYears33.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList57 = excludeYears50.initilizeCountries();
        java.util.Vector<java.lang.String> strList58 = excludeYears50.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList59 = excludeYears50.analysisType();
        java.util.Vector<java.lang.String> strList60 = excludeYears50.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears61.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeYears69.ISOconverter();
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.String> strList81 = excludeYears69.findExcludedCountries(strList79);
        java.util.Vector<java.lang.String> strList82 = excludeYears61.findExcludedCountries(strList81);
        java.util.ArrayList<java.lang.String> strList83 = excludeYears61.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeYears61.ISOconverter();
        java.lang.String[] strArray86 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.String> strList89 = excludeYears61.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList90 = excludeYears50.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList91 = excludeYears33.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList92 = excludeYears30.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList93 = excludeYears17.findExcludedCountries(strList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList94 = excludeYears0.removeExcludedYears(intList14, strMap15, "", strList93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.ArrayList<java.lang.String> strList20 = excludeYears13.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears13.findExcludedCountries(strList25);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears13.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears30.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears32.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears30.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList46 = excludeYears13.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList47 = excludeYears0.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList48 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass52 = strMap51.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = strMap3.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList26 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList29 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass31 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.ArrayList<java.lang.String> strList21 = excludeYears14.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Vector<java.lang.String> strList29 = excludeYears14.findExcludedCountries(strList26);
        java.util.Vector<java.lang.String> strList30 = excludeYears14.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears14.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears14.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears33.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = excludeYears33.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears33.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeYears33.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears44.findExcludedCountries(strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears44.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears44.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears33.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList74 = excludeYears14.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList75 = excludeYears0.findExcludedCountries(strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strMap76);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList26);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.ArrayList<java.lang.String> strList18 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears11.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList27 = excludeYears0.findExcludedCountries(strList26);
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList37 = excludeYears29.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears29.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeYears29.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears40.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears48.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears40.findExcludedCountries(strList60);
        java.util.ArrayList<java.lang.String> strList62 = excludeYears40.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears40.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears40.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears29.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList73 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 0, 0, 10, 0 };
        java.util.Vector<java.lang.Integer> intList79 = new java.util.Vector<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList79, intArray78);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap81 = null;
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList86 = new java.util.Vector<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList88 = excludeYears0.removeExcludedYears(intList79, strMap81, "hi!", strList86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList26 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList29 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 0 };
        java.util.Vector<java.lang.Integer> intList34 = new java.util.Vector<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList34, intArray33);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap36 = null;
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.ArrayList<java.lang.String> strList45 = excludeYears38.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList53 = excludeYears38.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears38.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears55.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears57.ISOconverter();
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears57.findExcludedCountries(strList67);
        java.util.Vector<java.lang.String> strList70 = excludeYears55.findExcludedCountries(strList67);
        java.util.Vector<java.lang.String> strList71 = excludeYears38.findExcludedCountries(strList67);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList72 = excludeYears0.removeExcludedYears(intList34, strMap36, "hi!", strList71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = strMap13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears11.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears0.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = strMap14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears25.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears25.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10, 100, (-1) };
        java.util.Vector<java.lang.Integer> intList50 = new java.util.Vector<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap52 = null;
        java.util.Vector<java.lang.String> strList54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList55 = excludeYears0.removeExcludedYears(intList50, strMap52, "hi!", strList54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass10 = strList9.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears14.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears14.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears14.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears25.ISOconverter();
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears25.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears14.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList39 = excludeYears0.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.String> strList42 = excludeYears0.findExcludedCountries(strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass45 = strMap44.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears0.initilizeCountries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = strList19.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList11 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears31.ISOconverter();
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears31.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears0.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList45 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList47 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList48 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList26 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.util.Vector<java.lang.String> strList26 = excludeYears18.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears18.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears18.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears38.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeYears38.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears38.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.util.Vector<java.lang.String> strList56 = excludeYears48.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeYears48.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears48.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList66 = excludeYears38.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList67 = excludeYears0.findExcludedCountries(strList66);
        java.util.ArrayList<java.lang.String> strList68 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList69 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList70 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass14 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList29 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass32 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass27 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList26 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList28 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass29 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList28 = excludeYears27.initilizeCountries();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears27.findExcludedCountries(strList31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears27.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears27.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears19.findExcludedCountries(strList39);
        java.util.ArrayList<java.lang.String> strList41 = excludeYears19.analysisType();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears19.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears19.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears19.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears19.ISOconverter();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears19.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears47.ISOconverter();
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears47.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears19.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList61 = excludeYears0.findExcludedCountries(strList57);
        java.util.ArrayList<java.lang.String> strList62 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass10 = strList9.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { 1, 1, 100, 1 };
        java.util.Vector<java.lang.Integer> intList37 = new java.util.Vector<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap39 = null;
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears41.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears41.ISOconverter();
        java.util.Vector<java.lang.String> strList50 = excludeYears41.initilizeCountries();
        java.util.Vector<java.lang.String> strList51 = excludeYears41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList53 = excludeYears41.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeYears41.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears41.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears56.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears64 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList65 = excludeYears64.initilizeCountries();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears64.findExcludedCountries(strList68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears64.ISOconverter();
        java.lang.String[] strArray73 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears64.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears56.findExcludedCountries(strList76);
        java.util.ArrayList<java.lang.String> strList78 = excludeYears56.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears56.ISOconverter();
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.String> strList85 = excludeYears56.findExcludedCountries(strList83);
        java.lang.String[] strArray88 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList89 = new java.util.Vector<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        java.util.Vector<java.lang.String> strList91 = excludeYears56.findExcludedCountries(strList89);
        java.util.Vector<java.lang.String> strList92 = excludeYears41.findExcludedCountries(strList89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList93 = excludeYears0.removeExcludedYears(intList37, strMap39, "hi!", strList89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears2.ISOconverter();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears2.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears2.ISOconverter();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears2.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList28 = excludeYears27.initilizeCountries();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears27.findExcludedCountries(strList31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears27.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears27.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears19.findExcludedCountries(strList39);
        java.util.ArrayList<java.lang.String> strList41 = excludeYears19.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears42.ISOconverter();
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears42.findExcludedCountries(strList52);
        java.util.Vector<java.lang.String> strList55 = excludeYears19.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList56 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.ArrayList<java.lang.String> strList64 = excludeYears57.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList72 = excludeYears57.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList73 = excludeYears19.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList74 = excludeYears0.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList75 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList76 = excludeYears0.initilizeCountries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass77 = strList76.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList25);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears31.initilizeCountries();
        java.util.Vector<java.lang.String> strList39 = excludeYears31.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList40 = excludeYears31.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeYears31.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears42.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears42.ISOconverter();
        java.util.ArrayList<java.lang.String> strList51 = excludeYears42.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.ArrayList<java.lang.String> strList59 = excludeYears52.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears52.findExcludedCountries(strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeYears52.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears69.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears71 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList72 = excludeYears71.initilizeCountries();
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears71.findExcludedCountries(strList75);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears71.ISOconverter();
        java.lang.String[] strArray80 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.String> strList83 = excludeYears71.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList84 = excludeYears69.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList85 = excludeYears52.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList86 = excludeYears42.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList87 = excludeYears31.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList88 = excludeYears0.findExcludedCountries(strList87);
        java.util.ArrayList<java.lang.String> strList89 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList90 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList92 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(strList92);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList42 = excludeYears35.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeYears35.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears35.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.util.Vector<java.lang.String> strList53 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeYears45.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears45.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList63 = excludeYears35.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList64 = excludeYears0.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList65 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears34.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears36.ISOconverter();
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears36.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears34.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList50 = excludeYears34.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList58 = excludeYears51.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeYears51.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList60 = excludeYears51.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeYears51.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears62.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeYears70.ISOconverter();
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.String> strList82 = excludeYears70.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList83 = excludeYears62.findExcludedCountries(strList82);
        java.util.ArrayList<java.lang.String> strList84 = excludeYears62.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeYears62.ISOconverter();
        java.lang.String[] strArray87 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList88 = new java.util.Vector<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Vector<java.lang.String> strList90 = excludeYears62.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList91 = excludeYears51.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList92 = excludeYears34.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList93 = excludeYears0.findExcludedCountries(strList92);
        java.util.Map<java.lang.String, java.lang.String> strMap94 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList95 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNull(strList95);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList2 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears3 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList4 = excludeYears3.initilizeCountries();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList7 = new java.util.Vector<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.Vector<java.lang.String> strList9 = excludeYears3.findExcludedCountries(strList7);
        java.util.ArrayList<java.lang.String> strList10 = excludeYears3.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears3.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears3.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears20.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears22.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears20.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears3.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass39 = strList38.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears34.ISOconverter();
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears34.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears11.findExcludedCountries(strList46);
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.ArrayList<java.lang.String> strList55 = excludeYears48.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears48.findExcludedCountries(strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears48.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears65.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears67.ISOconverter();
        java.lang.String[] strArray76 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears67.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears65.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList81 = excludeYears48.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList82 = excludeYears11.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList83 = excludeYears0.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList84 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList85 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap86 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.ArrayList<java.lang.String> strList21 = excludeYears14.analysisType();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears14.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears24.ISOconverter();
        java.util.Vector<java.lang.String> strList32 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears24.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears24.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears14.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList42);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList45 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strList45);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 1, (-1), 0, 100 };
        java.util.Vector<java.lang.Integer> intList19 = new java.util.Vector<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears23.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears23.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears23.ISOconverter();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears23.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears34.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears34.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeYears34.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears34.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeYears34.analysisType();
        java.util.ArrayList<java.lang.String> strList48 = excludeYears34.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears49.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears51.ISOconverter();
        java.lang.String[] strArray60 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears51.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList64 = excludeYears49.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList65 = excludeYears34.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList66 = excludeYears23.findExcludedCountries(strList61);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList67 = excludeYears0.excludeYears(intList19, strMap21, "", strList66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears15.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears15.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 1, 100, 10, 100, 10 };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears42.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears50.ISOconverter();
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears50.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears42.findExcludedCountries(strList62);
        java.util.ArrayList<java.lang.String> strList64 = excludeYears42.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears42.ISOconverter();
        java.lang.String[] strArray67 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears42.findExcludedCountries(strList68);
        java.util.ArrayList<java.lang.String> strList71 = excludeYears42.analysisType();
        java.util.Vector<java.lang.String> strList72 = excludeYears42.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears73 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList74 = excludeYears73.initilizeCountries();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears73.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears73.initilizeCountries();
        java.util.Vector<java.lang.String> strList81 = excludeYears73.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeYears73.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears83 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList84 = excludeYears83.initilizeCountries();
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.String> strList89 = excludeYears83.findExcludedCountries(strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeYears83.ISOconverter();
        java.lang.String[] strArray92 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList93 = new java.util.Vector<java.lang.String>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList93, strArray92);
        java.util.Vector<java.lang.String> strList95 = excludeYears83.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList96 = excludeYears73.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList97 = excludeYears42.findExcludedCountries(strList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList98 = excludeYears0.removeExcludedYears(intList38, strMap40, "", strList93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass13 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass13 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears11.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.ArrayList<java.lang.String> strList28 = excludeYears21.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears21.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears21.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears38.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears40.ISOconverter();
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears40.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList53 = excludeYears38.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList54 = excludeYears21.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList55 = excludeYears11.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList56 = excludeYears0.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList57 = excludeYears0.initilizeCountries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass58 = strList57.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears15.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears15.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList33 = null;
        java.util.Vector<java.lang.String> strList34 = excludeYears0.findExcludedCountries(strList33);
        java.lang.Class<?> wildcardClass35 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 1 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears37.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears45.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList58 = excludeYears37.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList59 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears37.findExcludedCountries(strList63);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList66 = excludeYears0.removeExcludedYears(intList33, strMap35, "", strList63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.Vector<java.lang.String> strList16 = excludeYears9.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears9.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList31 = excludeYears9.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears32.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears9.findExcludedCountries(strList44);
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears46.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears46.findExcludedCountries(strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears46.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears63 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears63.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears65.ISOconverter();
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears65.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList78 = excludeYears63.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList79 = excludeYears46.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList80 = excludeYears9.findExcludedCountries(strList75);
        statsVisualiser.facade.ExcludeYears excludeYears81 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList82 = excludeYears81.initilizeCountries();
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears81.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList88 = excludeYears9.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList89 = excludeYears0.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList90 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList91 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList92 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList93 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList94 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList95 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNotNull(strList95);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears9.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears9.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.util.Vector<java.lang.String> strList26 = excludeYears18.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears18.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears18.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears9.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.findExcludedCountries(strList32);
        java.util.ArrayList<java.lang.String> strList38 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList30);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 10, (-1), 1 };
        java.util.Vector<java.lang.Integer> intList20 = new java.util.Vector<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears24.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears32.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears24.findExcludedCountries(strList44);
        java.util.ArrayList<java.lang.String> strList46 = excludeYears24.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears47.ISOconverter();
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears47.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears24.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList61 = excludeYears24.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.ArrayList<java.lang.String> strList69 = excludeYears62.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears62.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList78 = excludeYears24.findExcludedCountries(strList74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList79 = excludeYears0.excludeYears(intList20, strMap22, "", strList74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = strList11.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList2 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears3 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList4 = excludeYears3.initilizeCountries();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList7 = new java.util.Vector<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.Vector<java.lang.String> strList9 = excludeYears3.findExcludedCountries(strList7);
        java.util.ArrayList<java.lang.String> strList10 = excludeYears3.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears3.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears3.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears20.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears22.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears20.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears3.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.findExcludedCountries(strList32);
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { 1, 10, 0, 1 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears47.ISOconverter();
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears47.findExcludedCountries(strList57);
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears60.ISOconverter();
        java.util.Vector<java.lang.String> strList68 = excludeYears60.initilizeCountries();
        java.util.Vector<java.lang.String> strList69 = excludeYears60.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears60.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList78 = excludeYears47.findExcludedCountries(strList74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList79 = excludeYears0.removeExcludedYears(intList43, strMap45, "", strList78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList11 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass13 = strList12.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.Vector<java.lang.String> strList22 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList26);
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears29.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears29.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList39 = excludeYears29.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears29.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears29.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears29.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears44.findExcludedCountries(strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears44.ISOconverter();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears44.findExcludedCountries(strList71);
        java.lang.String[] strArray76 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears44.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears29.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList81 = excludeYears0.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList82 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList83 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass84 = strList83.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 1, 1, 10, (-1), 100 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList27 = excludeYears26.initilizeCountries();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.String> strList32 = excludeYears26.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList33 = excludeYears26.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears34.ISOconverter();
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears34.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears26.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList48 = excludeYears26.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears49.ISOconverter();
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears49.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears26.findExcludedCountries(strList61);
        statsVisualiser.facade.ExcludeYears excludeYears63 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList64 = excludeYears63.initilizeCountries();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears63.findExcludedCountries(strList67);
        java.util.ArrayList<java.lang.String> strList70 = excludeYears63.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears71 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList72 = excludeYears71.initilizeCountries();
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears71.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList78 = excludeYears63.findExcludedCountries(strList75);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears63.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears80 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeYears80.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears82 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList83 = excludeYears82.initilizeCountries();
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList86 = new java.util.Vector<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        java.util.Vector<java.lang.String> strList88 = excludeYears82.findExcludedCountries(strList86);
        java.util.Map<java.lang.String, java.lang.String> strMap89 = excludeYears82.ISOconverter();
        java.lang.String[] strArray91 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList92 = new java.util.Vector<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        java.util.Vector<java.lang.String> strList94 = excludeYears82.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList95 = excludeYears80.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList96 = excludeYears63.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList97 = excludeYears26.findExcludedCountries(strList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList98 = excludeYears0.removeExcludedYears(intList22, strMap24, "", strList92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = strList11.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears43 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList44 = excludeYears43.initilizeCountries();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears43.findExcludedCountries(strList47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears43.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears43.ISOconverter();
        java.util.Vector<java.lang.String> strList52 = excludeYears43.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeYears43.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears43.ISOconverter();
        java.util.ArrayList<java.lang.String> strList55 = excludeYears43.analysisType();
        java.util.ArrayList<java.lang.String> strList56 = excludeYears43.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears43.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears58.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears66 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList67 = excludeYears66.initilizeCountries();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears66.findExcludedCountries(strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeYears66.ISOconverter();
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.String> strList78 = excludeYears66.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList79 = excludeYears58.findExcludedCountries(strList78);
        java.util.ArrayList<java.lang.String> strList80 = excludeYears58.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeYears58.ISOconverter();
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears58.findExcludedCountries(strList85);
        java.lang.String[] strArray90 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList91 = new java.util.Vector<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        java.util.Vector<java.lang.String> strList93 = excludeYears58.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList94 = excludeYears43.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList95 = excludeYears0.findExcludedCountries(strList94);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears16 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList17 = excludeYears16.initilizeCountries();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList20 = new java.util.Vector<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.Vector<java.lang.String> strList22 = excludeYears16.findExcludedCountries(strList20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears16.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears16.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears16.initilizeCountries();
        java.util.Vector<java.lang.String> strList26 = excludeYears16.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears16.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears16.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears29.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears37.findExcludedCountries(strList47);
        java.util.Vector<java.lang.String> strList50 = excludeYears29.findExcludedCountries(strList49);
        java.util.ArrayList<java.lang.String> strList51 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList52 = excludeYears29.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears53 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList54 = excludeYears53.initilizeCountries();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears53.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears53.initilizeCountries();
        java.util.Vector<java.lang.String> strList61 = excludeYears53.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList62 = excludeYears53.analysisType();
        java.util.Vector<java.lang.String> strList63 = excludeYears53.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears64 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList65 = excludeYears64.initilizeCountries();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears64.findExcludedCountries(strList68);
        java.util.Vector<java.lang.String> strList71 = excludeYears64.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears72 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList73 = excludeYears72.initilizeCountries();
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.String> strList78 = excludeYears72.findExcludedCountries(strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears72.ISOconverter();
        java.lang.String[] strArray81 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.String> strList84 = excludeYears72.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList85 = excludeYears64.findExcludedCountries(strList84);
        java.util.ArrayList<java.lang.String> strList86 = excludeYears64.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeYears64.ISOconverter();
        java.lang.String[] strArray89 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList90 = new java.util.Vector<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        java.util.Vector<java.lang.String> strList92 = excludeYears64.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList93 = excludeYears53.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList94 = excludeYears29.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList95 = excludeYears16.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList96 = excludeYears0.findExcludedCountries(strList95);
        java.util.ArrayList<java.lang.String> strList97 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList98 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNotNull(strList97);
        org.junit.Assert.assertNotNull(strList98);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.ArrayList<java.lang.String> strList21 = excludeYears14.analysisType();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears14.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears24.ISOconverter();
        java.util.Vector<java.lang.String> strList32 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears24.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears24.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears14.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList42);
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears44.findExcludedCountries(strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears44.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears44.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears0.findExcludedCountries(strList70);
        java.util.ArrayList<java.lang.String> strList74 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList75 = excludeYears0.initilizeCountries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass76 = strList75.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(strList75);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.ArrayList<java.lang.String> strList21 = excludeYears14.analysisType();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears14.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears24.ISOconverter();
        java.util.Vector<java.lang.String> strList32 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears24.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears24.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears14.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList44 = null;
        java.util.Vector<java.lang.String> strList45 = excludeYears0.findExcludedCountries(strList44);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.ArrayList<java.lang.String> strList24 = excludeYears17.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears17.findExcludedCountries(strList29);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears17.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears34.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears36.ISOconverter();
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears36.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears34.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList50 = excludeYears17.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList51 = excludeYears0.findExcludedCountries(strList50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass52 = strList50.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.Vector<java.lang.String> strList22 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList26);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass30 = strList29.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears14.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeYears14.ISOconverter();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears14.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears14.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears25.ISOconverter();
        java.util.Vector<java.lang.String> strList33 = excludeYears25.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears25.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList42 = excludeYears25.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList43 = excludeYears14.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList44 = excludeYears14.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears45.ISOconverter();
        java.util.Vector<java.lang.String> strList54 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList55 = excludeYears45.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears45.ISOconverter();
        java.util.ArrayList<java.lang.String> strList57 = excludeYears45.analysisType();
        java.util.ArrayList<java.lang.String> strList58 = excludeYears45.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears45.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears60.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears68 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList69 = excludeYears68.initilizeCountries();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.String> strList74 = excludeYears68.findExcludedCountries(strList72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears68.ISOconverter();
        java.lang.String[] strArray77 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList78 = new java.util.Vector<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Vector<java.lang.String> strList80 = excludeYears68.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList81 = excludeYears60.findExcludedCountries(strList80);
        java.util.ArrayList<java.lang.String> strList82 = excludeYears60.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeYears60.ISOconverter();
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.String> strList89 = excludeYears60.findExcludedCountries(strList87);
        java.lang.String[] strArray92 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList93 = new java.util.Vector<java.lang.String>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList93, strArray92);
        java.util.Vector<java.lang.String> strList95 = excludeYears60.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList96 = excludeYears45.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList97 = excludeYears14.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList98 = excludeYears0.findExcludedCountries(strList97);
        java.util.Map<java.lang.String, java.lang.String> strMap99 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strList98);
        org.junit.Assert.assertNull(strMap99);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears11.findExcludedCountries(strList38);
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears11.findExcludedCountries(strList47);
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.ArrayList<java.lang.String> strList56 = excludeYears49.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList64 = excludeYears49.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList65 = excludeYears11.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList66 = excludeYears0.findExcludedCountries(strList65);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = null;
        java.util.Vector<java.lang.String> strList20 = excludeYears0.findExcludedCountries(strList19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList29 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass32 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears2.ISOconverter();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears2.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears17.initilizeCountries();
        java.util.Vector<java.lang.String> strList25 = excludeYears17.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList26 = excludeYears17.analysisType();
        java.util.Vector<java.lang.String> strList27 = excludeYears17.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears28.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears36.ISOconverter();
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears36.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears28.findExcludedCountries(strList48);
        java.util.ArrayList<java.lang.String> strList50 = excludeYears28.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears28.ISOconverter();
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears28.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList57 = excludeYears17.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList58 = excludeYears0.findExcludedCountries(strList54);
        java.util.ArrayList<java.lang.String> strList59 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass60 = strList59.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList33 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList33);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList39 = excludeYears32.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears40.ISOconverter();
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears40.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList53 = excludeYears32.findExcludedCountries(strList52);
        java.util.ArrayList<java.lang.String> strList54 = excludeYears32.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears32.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears32.ISOconverter();
        java.util.Vector<java.lang.String> strList57 = excludeYears32.initilizeCountries();
        java.util.Vector<java.lang.String> strList58 = excludeYears32.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears32.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeYears32.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears61.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeYears69.ISOconverter();
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.String> strList81 = excludeYears69.findExcludedCountries(strList79);
        java.util.Vector<java.lang.String> strList82 = excludeYears61.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList83 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray86 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.String> strList89 = excludeYears61.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList90 = excludeYears32.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList91 = excludeYears0.findExcludedCountries(strList90);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strMap92);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.ArrayList<java.lang.String> strList1 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList3 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList4 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList5 = excludeYears0.analysisType();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass14 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears18.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList27 = excludeYears26.initilizeCountries();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.String> strList32 = excludeYears26.findExcludedCountries(strList30);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears26.ISOconverter();
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears26.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList39 = excludeYears18.findExcludedCountries(strList38);
        java.util.ArrayList<java.lang.String> strList40 = excludeYears18.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears41.ISOconverter();
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears41.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears18.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList55 = excludeYears18.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.ArrayList<java.lang.String> strList63 = excludeYears56.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears64 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList65 = excludeYears64.initilizeCountries();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears64.findExcludedCountries(strList68);
        java.util.Vector<java.lang.String> strList71 = excludeYears56.findExcludedCountries(strList68);
        java.util.Vector<java.lang.String> strList72 = excludeYears18.findExcludedCountries(strList68);
        java.util.Vector<java.lang.String> strList73 = excludeYears0.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList74 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears25.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears25.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList40);
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList49 = excludeYears42.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears42.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears51.ISOconverter();
        java.util.Vector<java.lang.String> strList59 = excludeYears51.initilizeCountries();
        java.util.Vector<java.lang.String> strList60 = excludeYears51.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears51.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList69 = excludeYears42.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList71 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 0, 100, 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears22.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears24.ISOconverter();
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears24.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList37 = excludeYears22.findExcludedCountries(strList34);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears22.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears22.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears22.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.ArrayList<java.lang.String> strList48 = excludeYears41.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList56 = excludeYears41.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList57 = excludeYears41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears41.ISOconverter();
        java.util.Vector<java.lang.String> strList59 = excludeYears41.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList60 = excludeYears41.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears61.initilizeCountries();
        java.util.Vector<java.lang.String> strList69 = excludeYears61.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears61.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears61.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears72 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList73 = excludeYears72.initilizeCountries();
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.String> strList78 = excludeYears72.findExcludedCountries(strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears72.ISOconverter();
        java.lang.String[] strArray81 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.String> strList84 = excludeYears72.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList85 = excludeYears61.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList86 = excludeYears41.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList87 = excludeYears22.findExcludedCountries(strList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList88 = excludeYears0.excludeYears(intList18, strMap20, "hi!", strList87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeYears0.analysisType();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears25.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList28 = excludeYears27.initilizeCountries();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears27.findExcludedCountries(strList31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears27.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears27.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears25.findExcludedCountries(strList37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList41 = excludeYears0.excludeYears(intList21, strMap23, "hi!", strList40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass40 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears2.ISOconverter();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears2.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList28 = excludeYears27.initilizeCountries();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears27.findExcludedCountries(strList31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears27.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears27.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears19.findExcludedCountries(strList39);
        java.util.ArrayList<java.lang.String> strList41 = excludeYears19.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears42.ISOconverter();
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears42.findExcludedCountries(strList52);
        java.util.Vector<java.lang.String> strList55 = excludeYears19.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList56 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.ArrayList<java.lang.String> strList64 = excludeYears57.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList72 = excludeYears57.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList73 = excludeYears19.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList74 = excludeYears0.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList76 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strList76);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList15 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass16 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList28 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears14.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears14.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears14.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears25.ISOconverter();
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears25.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears14.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList39 = excludeYears0.findExcludedCountries(strList35);
        java.util.ArrayList<java.lang.String> strList40 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList40 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass42 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears25.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears25.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass45 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears17.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears17.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList33 = excludeYears0.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears23.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears23.ISOconverter();
        java.util.Vector<java.lang.String> strList26 = excludeYears23.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList28 = excludeYears27.initilizeCountries();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears27.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList34 = excludeYears27.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears35.ISOconverter();
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears35.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears27.findExcludedCountries(strList47);
        java.util.ArrayList<java.lang.String> strList49 = excludeYears27.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears27.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList58 = excludeYears51.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeYears51.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList60 = excludeYears51.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeYears51.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears62.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeYears70.ISOconverter();
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.String> strList82 = excludeYears70.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList83 = excludeYears62.findExcludedCountries(strList82);
        java.util.ArrayList<java.lang.String> strList84 = excludeYears62.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeYears62.ISOconverter();
        java.lang.String[] strArray87 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList88 = new java.util.Vector<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Vector<java.lang.String> strList90 = excludeYears62.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList91 = excludeYears51.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList92 = excludeYears27.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList93 = excludeYears23.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList94 = excludeYears0.findExcludedCountries(strList88);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass17 = strList16.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList32 = null;
        java.util.Vector<java.lang.String> strList33 = excludeYears0.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList35 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strList35);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass43 = strMap42.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { 1, 0 };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears40.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears48.ISOconverter();
        java.util.Vector<java.lang.String> strList57 = excludeYears48.initilizeCountries();
        java.util.Vector<java.lang.String> strList58 = excludeYears48.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears48.ISOconverter();
        java.util.ArrayList<java.lang.String> strList60 = excludeYears48.analysisType();
        java.util.ArrayList<java.lang.String> strList61 = excludeYears48.analysisType();
        java.util.ArrayList<java.lang.String> strList62 = excludeYears48.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears63 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears63.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears65.ISOconverter();
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears65.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList78 = excludeYears63.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList79 = excludeYears48.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList80 = excludeYears40.findExcludedCountries(strList75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList81 = excludeYears0.removeExcludedYears(intList36, strMap38, "", strList75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList29 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strList29);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList35 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList36 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList16 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears20.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears20.findExcludedCountries(strList40);
        java.util.ArrayList<java.lang.String> strList42 = excludeYears20.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears20.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        java.util.Vector<java.lang.String> strList52 = excludeYears44.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList53 = excludeYears44.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears55.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears63 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList64 = excludeYears63.initilizeCountries();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears63.findExcludedCountries(strList67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears63.ISOconverter();
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears63.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears55.findExcludedCountries(strList75);
        java.util.ArrayList<java.lang.String> strList77 = excludeYears55.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears55.ISOconverter();
        java.lang.String[] strArray80 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.String> strList83 = excludeYears55.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList84 = excludeYears44.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList85 = excludeYears20.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList86 = excludeYears0.findExcludedCountries(strList81);
        java.lang.Integer[] intArray88 = new java.lang.Integer[] { 100 };
        java.util.Vector<java.lang.Integer> intList89 = new java.util.Vector<java.lang.Integer>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList89, intArray88);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap91 = null;
        java.lang.String[] strArray95 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList96 = new java.util.Vector<java.lang.String>();
        boolean boolean97 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList96, strArray95);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList98 = excludeYears0.excludeYears(intList89, strMap91, "", strList96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList25 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { 100, 100, 10 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears35.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears35.ISOconverter();
        java.util.Vector<java.lang.String> strList44 = excludeYears35.initilizeCountries();
        java.util.Vector<java.lang.String> strList45 = excludeYears35.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears35.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.ArrayList<java.lang.String> strList54 = excludeYears47.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeYears47.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList56 = excludeYears47.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears57.ISOconverter();
        java.util.Vector<java.lang.String> strList65 = excludeYears57.initilizeCountries();
        java.util.Vector<java.lang.String> strList66 = excludeYears57.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList74 = excludeYears57.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList75 = excludeYears47.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList76 = excludeYears35.findExcludedCountries(strList71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList77 = excludeYears0.removeExcludedYears(intList31, strMap33, "hi!", strList76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = strMap13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears31.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears31.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears34.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears36.ISOconverter();
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears36.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears34.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList50 = excludeYears34.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList58 = excludeYears51.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeYears51.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList60 = excludeYears51.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeYears51.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears62.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeYears70.ISOconverter();
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.String> strList82 = excludeYears70.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList83 = excludeYears62.findExcludedCountries(strList82);
        java.util.ArrayList<java.lang.String> strList84 = excludeYears62.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeYears62.ISOconverter();
        java.lang.String[] strArray87 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList88 = new java.util.Vector<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Vector<java.lang.String> strList90 = excludeYears62.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList91 = excludeYears51.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList92 = excludeYears34.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList93 = excludeYears31.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList94 = excludeYears18.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList95 = excludeYears0.findExcludedCountries(strList94);
        java.util.Vector<java.lang.String> strList96 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap97 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList98 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strMap97);
        org.junit.Assert.assertNotNull(strList98);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList25 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 100, 10, 10, 10 };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        java.util.Vector<java.lang.String> strList42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList43 = excludeYears0.excludeYears(intList38, strMap40, "", strList42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.Vector<java.lang.String> strList16 = excludeYears9.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears9.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList31 = excludeYears9.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears32.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears9.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList46 = excludeYears9.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.ArrayList<java.lang.String> strList54 = excludeYears47.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears47.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList63 = excludeYears9.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList64 = excludeYears0.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList65 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList66 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass67 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList40 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Vector<java.lang.String> strList20 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears21.ISOconverter();
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears21.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList34 = excludeYears13.findExcludedCountries(strList33);
        java.util.ArrayList<java.lang.String> strList35 = excludeYears13.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears13.ISOconverter();
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears13.findExcludedCountries(strList39);
        java.util.ArrayList<java.lang.String> strList42 = excludeYears13.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        java.util.Vector<java.lang.String> strList52 = excludeYears44.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears54.ISOconverter();
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears54.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears44.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears13.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList71 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears2.ISOconverter();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears2.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList28 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears29.ISOconverter();
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears29.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList42 = excludeYears19.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList28 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears11.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears38.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeYears38.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears38.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.util.Vector<java.lang.String> strList56 = excludeYears48.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeYears48.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears48.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList66 = excludeYears38.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList67 = excludeYears0.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList68 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList3 = excludeYears0.analysisType();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { (-1), 1, 100 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Vector<java.lang.String> strList19 = excludeYears12.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears12.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList21 = excludeYears12.analysisType();
        java.util.Vector<java.lang.String> strList22 = excludeYears12.initilizeCountries();
        java.util.Vector<java.lang.String> strList23 = excludeYears12.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList31 = excludeYears24.analysisType();
        java.util.Vector<java.lang.String> strList32 = excludeYears24.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears24.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears34.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeYears34.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeYears34.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears34.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList52 = excludeYears24.findExcludedCountries(strList48);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears24.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeYears24.analysisType();
        java.util.ArrayList<java.lang.String> strList55 = excludeYears24.analysisType();
        java.util.Vector<java.lang.String> strList56 = null;
        java.util.Vector<java.lang.String> strList57 = excludeYears24.findExcludedCountries(strList56);
        java.util.ArrayList<java.lang.String> strList58 = excludeYears24.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeYears59.ISOconverter();
        java.util.Vector<java.lang.String> strList61 = excludeYears59.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.ArrayList<java.lang.String> strList69 = excludeYears62.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears62.findExcludedCountries(strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears62.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears79 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears79.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears81 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList82 = excludeYears81.initilizeCountries();
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears81.findExcludedCountries(strList85);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeYears81.ISOconverter();
        java.lang.String[] strArray90 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList91 = new java.util.Vector<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        java.util.Vector<java.lang.String> strList93 = excludeYears81.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList94 = excludeYears79.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList95 = excludeYears62.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList96 = excludeYears59.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList97 = excludeYears24.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList98 = excludeYears12.findExcludedCountries(strList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList99 = excludeYears0.excludeYears(intList8, strMap10, "", strList91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strList98);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass39 = strMap38.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 0, 100, 0, 100 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList27 = excludeYears26.initilizeCountries();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.String> strList32 = excludeYears26.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList33 = excludeYears26.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears26.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears26.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeYears26.initilizeCountries();
        java.util.Vector<java.lang.String> strList37 = excludeYears26.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears26.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears26.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeYears26.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears41.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears41.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.ArrayList<java.lang.String> strList58 = excludeYears51.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears51.findExcludedCountries(strList63);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears51.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears68 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeYears68.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeYears70.ISOconverter();
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.String> strList82 = excludeYears70.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList83 = excludeYears68.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList84 = excludeYears51.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList85 = excludeYears41.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList86 = excludeYears26.findExcludedCountries(strList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList87 = excludeYears0.removeExcludedYears(intList22, strMap24, "", strList86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears9.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears9.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears9.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears26.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears26.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears9.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList42);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { 100, 1 };
        java.util.Vector<java.lang.Integer> intList51 = new java.util.Vector<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap53 = null;
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears55.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears63 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList64 = excludeYears63.initilizeCountries();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears63.findExcludedCountries(strList67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears63.ISOconverter();
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears63.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears55.findExcludedCountries(strList75);
        java.util.ArrayList<java.lang.String> strList77 = excludeYears55.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears55.ISOconverter();
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.String> strList84 = excludeYears55.findExcludedCountries(strList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList85 = excludeYears0.excludeYears(intList51, strMap53, "", strList82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(strList84);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass36 = strList35.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears13.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears22.findExcludedCountries(strList32);
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears35.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeYears35.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears35.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears35.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList53 = excludeYears22.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList54 = excludeYears13.findExcludedCountries(strList53);
        java.util.ArrayList<java.lang.String> strList55 = excludeYears13.analysisType();
        java.util.Vector<java.lang.String> strList56 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears58.initilizeCountries();
        java.util.Vector<java.lang.String> strList66 = excludeYears58.initilizeCountries();
        java.util.Vector<java.lang.String> strList67 = excludeYears58.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears68 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList69 = excludeYears68.initilizeCountries();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.String> strList74 = excludeYears68.findExcludedCountries(strList72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears68.ISOconverter();
        java.lang.String[] strArray77 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList78 = new java.util.Vector<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Vector<java.lang.String> strList80 = excludeYears68.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList81 = excludeYears58.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList82 = excludeYears13.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList83 = excludeYears0.findExcludedCountries(strList78);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList15 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList16 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), (-1), 1 };
        java.util.Vector<java.lang.Integer> intList23 = new java.util.Vector<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap25 = null;
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList28 = excludeYears27.initilizeCountries();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears27.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList34 = excludeYears27.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears27.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears27.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears37.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears37.ISOconverter();
        java.util.ArrayList<java.lang.String> strList49 = excludeYears37.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears37.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears37.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears52.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears60.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears60.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears52.findExcludedCountries(strList72);
        java.util.ArrayList<java.lang.String> strList74 = excludeYears52.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears52.ISOconverter();
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.String> strList81 = excludeYears52.findExcludedCountries(strList79);
        java.lang.String[] strArray84 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears52.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList88 = excludeYears37.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList89 = excludeYears27.findExcludedCountries(strList85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList90 = excludeYears0.removeExcludedYears(intList23, strMap25, "hi!", strList85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.util.Vector<java.lang.String> strList26 = excludeYears18.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears18.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears18.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears37.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeYears37.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears37.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears47.ISOconverter();
        java.util.Vector<java.lang.String> strList55 = excludeYears47.initilizeCountries();
        java.util.Vector<java.lang.String> strList56 = excludeYears47.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList64 = excludeYears47.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList65 = excludeYears37.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList66 = excludeYears0.findExcludedCountries(strList61);
        java.util.ArrayList<java.lang.String> strList67 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList70 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList71 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList72 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass73 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass13 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = null;
        java.util.Vector<java.lang.String> strList20 = excludeYears0.findExcludedCountries(strList19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass22 = strMap21.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.ArrayList<java.lang.String> strList20 = excludeYears13.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears13.findExcludedCountries(strList25);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears13.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears30.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears32.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears30.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList46 = excludeYears13.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList47 = excludeYears0.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList48 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears51.ISOconverter();
        java.util.Vector<java.lang.String> strList53 = excludeYears51.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.ArrayList<java.lang.String> strList61 = excludeYears54.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears54.findExcludedCountries(strList66);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears54.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears71 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears71.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears73 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList74 = excludeYears73.initilizeCountries();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears73.findExcludedCountries(strList77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears73.ISOconverter();
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.String> strList85 = excludeYears73.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList86 = excludeYears71.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList87 = excludeYears54.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList88 = excludeYears51.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList89 = excludeYears0.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList90 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears15.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears15.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears36.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears38.ISOconverter();
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears38.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears36.findExcludedCountries(strList48);
        java.util.ArrayList<java.lang.String> strList52 = excludeYears36.analysisType();
        java.util.ArrayList<java.lang.String> strList53 = excludeYears36.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeYears36.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears55.initilizeCountries();
        java.util.Vector<java.lang.String> strList63 = excludeYears55.initilizeCountries();
        java.util.Vector<java.lang.String> strList64 = excludeYears55.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears65.ISOconverter();
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears65.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList78 = excludeYears55.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList79 = excludeYears36.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList80 = excludeYears0.findExcludedCountries(strList79);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears39.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears47.ISOconverter();
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears47.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears39.findExcludedCountries(strList59);
        java.util.ArrayList<java.lang.String> strList61 = excludeYears39.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears39.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears39.findExcludedCountries(strList66);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.String> strList74 = excludeYears39.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList75 = excludeYears0.findExcludedCountries(strList74);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears10.findExcludedCountries(strList30);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears10.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears10.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList35 = excludeYears10.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears10.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears37.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears37.ISOconverter();
        java.util.ArrayList<java.lang.String> strList49 = excludeYears37.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears37.analysisType();
        java.util.ArrayList<java.lang.String> strList51 = excludeYears37.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears52.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears54.ISOconverter();
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears54.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears52.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears37.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears10.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList18 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList19 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList11 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass12 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList42 = excludeYears35.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears43 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList44 = excludeYears43.initilizeCountries();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears43.findExcludedCountries(strList47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears43.ISOconverter();
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears43.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList56 = excludeYears35.findExcludedCountries(strList55);
        java.util.ArrayList<java.lang.String> strList57 = excludeYears35.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears35.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears35.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears0.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList66 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass67 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList16 = excludeYears15.initilizeCountries();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears15.findExcludedCountries(strList19);
        java.util.Vector<java.lang.String> strList22 = excludeYears15.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears15.findExcludedCountries(strList35);
        java.util.ArrayList<java.lang.String> strList37 = excludeYears15.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears15.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears15.findExcludedCountries(strList42);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears15.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears0.findExcludedCountries(strList48);
        java.util.ArrayList<java.lang.String> strList52 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList53 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList56 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass57 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears0.analysisType();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 100, 0, 10 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears52.initilizeCountries();
        java.util.Vector<java.lang.String> strList60 = excludeYears52.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears52.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears52.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears63 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList64 = excludeYears63.initilizeCountries();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears63.findExcludedCountries(strList67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears63.ISOconverter();
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears63.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears52.findExcludedCountries(strList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList77 = excludeYears0.excludeYears(intList48, strMap50, "", strList73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears11.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.ArrayList<java.lang.String> strList28 = excludeYears21.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears21.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears21.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears38.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears40.ISOconverter();
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears40.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList53 = excludeYears38.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList54 = excludeYears21.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList55 = excludeYears11.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList56 = excludeYears0.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList58 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList59 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strList59);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears33.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears41.ISOconverter();
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears41.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears33.findExcludedCountries(strList53);
        java.util.ArrayList<java.lang.String> strList55 = excludeYears33.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears33.ISOconverter();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears33.findExcludedCountries(strList60);
        java.lang.String[] strArray65 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears33.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.findExcludedCountries(strList68);
        java.util.ArrayList<java.lang.String> strList70 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList71 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(strList71);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList15 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass16 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList26 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strMap32);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList44 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.ArrayList<java.lang.String> strList52 = excludeYears45.analysisType();
        java.util.Vector<java.lang.String> strList53 = excludeYears45.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeYears45.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears55.ISOconverter();
        java.util.Vector<java.lang.String> strList63 = excludeYears55.initilizeCountries();
        java.util.Vector<java.lang.String> strList64 = excludeYears55.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList72 = excludeYears55.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList73 = excludeYears45.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList74 = excludeYears0.findExcludedCountries(strList73);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList78 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList25);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears31.initilizeCountries();
        java.util.Vector<java.lang.String> strList39 = excludeYears31.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList40 = excludeYears31.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeYears31.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears42.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears42.ISOconverter();
        java.util.ArrayList<java.lang.String> strList51 = excludeYears42.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.ArrayList<java.lang.String> strList59 = excludeYears52.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears52.findExcludedCountries(strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeYears52.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears69.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears71 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList72 = excludeYears71.initilizeCountries();
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears71.findExcludedCountries(strList75);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears71.ISOconverter();
        java.lang.String[] strArray80 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.String> strList83 = excludeYears71.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList84 = excludeYears69.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList85 = excludeYears52.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList86 = excludeYears42.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList87 = excludeYears31.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList88 = excludeYears0.findExcludedCountries(strList87);
        java.util.ArrayList<java.lang.String> strList89 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList90 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList93 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(strList93);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strMap45);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears45.findExcludedCountries(strList55);
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears58.ISOconverter();
        java.util.Vector<java.lang.String> strList66 = excludeYears58.initilizeCountries();
        java.util.Vector<java.lang.String> strList67 = excludeYears58.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears68 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList69 = excludeYears68.initilizeCountries();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.String> strList74 = excludeYears68.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList75 = excludeYears58.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList76 = excludeYears45.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList77 = excludeYears0.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList78 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strMap79);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList24 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList25 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass26 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList16 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears20.initilizeCountries();
        java.util.Vector<java.lang.String> strList28 = excludeYears20.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears20.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears20.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears31.ISOconverter();
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears31.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears20.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList45 = excludeYears0.findExcludedCountries(strList41);
        java.util.ArrayList<java.lang.String> strList46 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass47 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList15 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears17.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList25 = excludeYears17.analysisType();
        java.util.ArrayList<java.lang.String> strList26 = excludeYears17.analysisType();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears17.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears28.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears37.findExcludedCountries(strList47);
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears50.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeYears50.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeYears50.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears50.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears37.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears28.findExcludedCountries(strList68);
        java.util.ArrayList<java.lang.String> strList70 = excludeYears28.analysisType();
        java.util.Vector<java.lang.String> strList71 = excludeYears28.initilizeCountries();
        java.util.Vector<java.lang.String> strList72 = excludeYears28.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears73 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList74 = excludeYears73.initilizeCountries();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears73.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears73.initilizeCountries();
        java.util.Vector<java.lang.String> strList81 = excludeYears73.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeYears73.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears83 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList84 = excludeYears83.initilizeCountries();
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.String> strList89 = excludeYears83.findExcludedCountries(strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeYears83.ISOconverter();
        java.lang.String[] strArray92 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList93 = new java.util.Vector<java.lang.String>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList93, strArray92);
        java.util.Vector<java.lang.String> strList95 = excludeYears83.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList96 = excludeYears73.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList97 = excludeYears28.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList98 = excludeYears17.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList99 = excludeYears0.findExcludedCountries(strList93);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strList98);
        org.junit.Assert.assertNull(strList99);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears13.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears13.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears16 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears16.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears16.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears16.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears33.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = excludeYears33.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears33.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeYears33.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears44.findExcludedCountries(strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears44.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears44.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears33.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList74 = excludeYears16.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList75 = excludeYears13.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList76 = excludeYears0.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList77 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList78 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList79 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList80 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList81 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass82 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears2.ISOconverter();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears2.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears0.analysisType();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { 0, 1, 1 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList37 = excludeYears29.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears29.ISOconverter();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears29.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears29.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears29.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears42.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears50.ISOconverter();
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears50.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears42.findExcludedCountries(strList62);
        java.util.ArrayList<java.lang.String> strList64 = excludeYears42.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears42.ISOconverter();
        java.lang.String[] strArray67 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears42.findExcludedCountries(strList68);
        java.util.ArrayList<java.lang.String> strList71 = excludeYears42.analysisType();
        java.util.Vector<java.lang.String> strList72 = excludeYears42.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears73 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList74 = excludeYears73.initilizeCountries();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears73.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears73.initilizeCountries();
        java.util.Vector<java.lang.String> strList81 = excludeYears73.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeYears73.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears83 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList84 = excludeYears83.initilizeCountries();
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.String> strList89 = excludeYears83.findExcludedCountries(strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeYears83.ISOconverter();
        java.lang.String[] strArray92 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList93 = new java.util.Vector<java.lang.String>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList93, strArray92);
        java.util.Vector<java.lang.String> strList95 = excludeYears83.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList96 = excludeYears73.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList97 = excludeYears42.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList98 = excludeYears29.findExcludedCountries(strList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList99 = excludeYears0.removeExcludedYears(intList25, strMap27, "", strList93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strList98);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass24 = strList23.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = strMap15.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.ArrayList<java.lang.String> strList21 = excludeYears14.analysisType();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears14.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears24.ISOconverter();
        java.util.Vector<java.lang.String> strList32 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears24.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears24.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears14.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList42);
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears44.findExcludedCountries(strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears44.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears44.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears0.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList74 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList40 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList3 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { 0, (-1), 10, 1, 0 };
        java.util.Vector<java.lang.Integer> intList12 = new java.util.Vector<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList12, intArray11);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap14 = null;
        statsVisualiser.facade.ExcludeYears excludeYears16 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList17 = excludeYears16.initilizeCountries();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList20 = new java.util.Vector<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.Vector<java.lang.String> strList22 = excludeYears16.findExcludedCountries(strList20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears16.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears16.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears16.initilizeCountries();
        java.util.Vector<java.lang.String> strList26 = excludeYears16.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears16.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears16.analysisType();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears16.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears16.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears31.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears33.ISOconverter();
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears33.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears31.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList47 = excludeYears16.findExcludedCountries(strList43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList48 = excludeYears0.removeExcludedYears(intList12, strMap14, "hi!", strList47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList21 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass23 = strList22.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears11.findExcludedCountries(strList21);
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears24.ISOconverter();
        java.util.Vector<java.lang.String> strList32 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears24.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears24.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears11.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList45 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList53 = excludeYears46.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeYears46.initilizeCountries();
        java.util.Vector<java.lang.String> strList55 = excludeYears46.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears56.ISOconverter();
        java.util.Vector<java.lang.String> strList64 = excludeYears56.initilizeCountries();
        java.util.Vector<java.lang.String> strList65 = excludeYears56.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears66 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList67 = excludeYears66.initilizeCountries();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears66.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears56.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList74 = excludeYears46.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList75 = excludeYears11.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList76 = excludeYears0.findExcludedCountries(strList70);
        java.util.ArrayList<java.lang.String> strList77 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = null;
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList11);
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears19.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears19.analysisType();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears19.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears30.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeYears30.initilizeCountries();
        java.util.Vector<java.lang.String> strList39 = excludeYears30.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears30.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList48 = excludeYears19.findExcludedCountries(strList47);
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList56 = excludeYears49.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeYears49.initilizeCountries();
        java.util.Vector<java.lang.String> strList58 = excludeYears49.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears59.ISOconverter();
        java.util.Vector<java.lang.String> strList67 = excludeYears59.initilizeCountries();
        java.util.Vector<java.lang.String> strList68 = excludeYears59.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears59.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList77 = excludeYears49.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList78 = excludeYears19.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList79 = excludeYears0.findExcludedCountries(strList73);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass80 = strList79.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears31.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears31.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears31.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears41.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears41.ISOconverter();
        java.util.Vector<java.lang.String> strList50 = excludeYears41.initilizeCountries();
        java.util.Vector<java.lang.String> strList51 = excludeYears41.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears41.ISOconverter();
        java.util.ArrayList<java.lang.String> strList53 = excludeYears41.analysisType();
        java.util.ArrayList<java.lang.String> strList54 = excludeYears41.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears41.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears56.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears64 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList65 = excludeYears64.initilizeCountries();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears64.findExcludedCountries(strList68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears64.ISOconverter();
        java.lang.String[] strArray73 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears64.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears56.findExcludedCountries(strList76);
        java.util.ArrayList<java.lang.String> strList78 = excludeYears56.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears56.ISOconverter();
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.String> strList85 = excludeYears56.findExcludedCountries(strList83);
        java.lang.String[] strArray88 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList89 = new java.util.Vector<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        java.util.Vector<java.lang.String> strList91 = excludeYears56.findExcludedCountries(strList89);
        java.util.Vector<java.lang.String> strList92 = excludeYears41.findExcludedCountries(strList89);
        java.util.Vector<java.lang.String> strList93 = excludeYears31.findExcludedCountries(strList89);
        java.util.Vector<java.lang.String> strList94 = excludeYears0.findExcludedCountries(strList89);
        java.util.ArrayList<java.lang.String> strList95 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList96 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap97 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strMap97);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears11.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList40);
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass11 = strList10.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears10.findExcludedCountries(strList30);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears10.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears10.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList35 = excludeYears10.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears10.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears37.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears37.ISOconverter();
        java.util.ArrayList<java.lang.String> strList49 = excludeYears37.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears37.analysisType();
        java.util.ArrayList<java.lang.String> strList51 = excludeYears37.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears52.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears54.ISOconverter();
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears54.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears52.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears37.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears10.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.findExcludedCountries(strList69);
        java.util.ArrayList<java.lang.String> strList71 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList72 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList73 = null;
        java.util.Vector<java.lang.String> strList74 = excludeYears0.findExcludedCountries(strList73);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(strList74);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass41 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList3 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears6 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList7 = excludeYears6.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears6.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.Vector<java.lang.String> strList16 = excludeYears9.initilizeCountries();
        java.util.Vector<java.lang.String> strList17 = excludeYears9.initilizeCountries();
        java.util.Vector<java.lang.String> strList18 = excludeYears9.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears9.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears20.initilizeCountries();
        java.util.Vector<java.lang.String> strList28 = excludeYears20.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears20.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears20.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears20.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears32.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears20.findExcludedCountries(strList44);
        java.util.ArrayList<java.lang.String> strList46 = excludeYears20.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears20.ISOconverter();
        java.util.ArrayList<java.lang.String> strList48 = excludeYears20.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears20.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList57 = excludeYears50.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears58.ISOconverter();
        java.lang.String[] strArray67 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears58.findExcludedCountries(strList68);
        java.util.Vector<java.lang.String> strList71 = excludeYears50.findExcludedCountries(strList70);
        java.util.ArrayList<java.lang.String> strList72 = excludeYears50.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeYears50.ISOconverter();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears50.findExcludedCountries(strList77);
        java.lang.String[] strArray82 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.String> strList85 = excludeYears50.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList86 = excludeYears20.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList87 = excludeYears9.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList88 = excludeYears6.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList89 = excludeYears0.findExcludedCountries(strList83);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList39 = excludeYears32.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears40.ISOconverter();
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears40.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList53 = excludeYears32.findExcludedCountries(strList52);
        java.util.ArrayList<java.lang.String> strList54 = excludeYears32.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears32.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears32.ISOconverter();
        java.util.Vector<java.lang.String> strList57 = excludeYears32.initilizeCountries();
        java.util.Vector<java.lang.String> strList58 = excludeYears32.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears32.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeYears32.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears61.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeYears69.ISOconverter();
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.String> strList81 = excludeYears69.findExcludedCountries(strList79);
        java.util.Vector<java.lang.String> strList82 = excludeYears61.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList83 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray86 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.String> strList89 = excludeYears61.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList90 = excludeYears32.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList91 = excludeYears0.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList92 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass94 = strMap93.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strMap93);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Vector<java.lang.String> strList9 = excludeYears2.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList20 = new java.util.Vector<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.Vector<java.lang.String> strList22 = excludeYears10.findExcludedCountries(strList20);
        java.util.Vector<java.lang.String> strList23 = excludeYears2.findExcludedCountries(strList22);
        java.util.ArrayList<java.lang.String> strList24 = excludeYears2.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears2.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears2.ISOconverter();
        java.util.Vector<java.lang.String> strList27 = excludeYears2.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears2.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears29.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears29.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList39 = excludeYears29.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears29.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears29.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears44.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears46.ISOconverter();
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears46.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears44.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList60 = excludeYears29.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList61 = excludeYears2.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList62 = excludeYears0.findExcludedCountries(strList56);
        java.util.ArrayList<java.lang.String> strList63 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass64 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList42 = excludeYears35.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeYears35.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears35.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.util.Vector<java.lang.String> strList53 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeYears45.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears45.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList63 = excludeYears35.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList64 = excludeYears0.findExcludedCountries(strList59);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList66 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strList66);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 0, 0, 0, 0 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList27 = excludeYears20.analysisType();
        java.util.Vector<java.lang.String> strList28 = excludeYears20.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears20.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeYears20.initilizeCountries();
        java.util.Vector<java.lang.String> strList31 = excludeYears20.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears20.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears20.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears34.initilizeCountries();
        java.util.Vector<java.lang.String> strList42 = excludeYears34.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears34.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears34.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears45.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList58 = excludeYears34.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList59 = excludeYears20.findExcludedCountries(strList55);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList60 = excludeYears0.excludeYears(intList16, strMap18, "hi!", strList59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears14.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears22.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears14.findExcludedCountries(strList34);
        java.util.ArrayList<java.lang.String> strList36 = excludeYears14.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears14.ISOconverter();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears14.findExcludedCountries(strList41);
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears14.findExcludedCountries(strList50);
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.ArrayList<java.lang.String> strList59 = excludeYears52.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears52.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears14.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.findExcludedCountries(strList68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass70 = strList69.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears24.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears24.ISOconverter();
        java.util.Vector<java.lang.String> strList33 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears24.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears24.ISOconverter();
        java.util.ArrayList<java.lang.String> strList36 = excludeYears24.analysisType();
        java.util.Vector<java.lang.String> strList37 = excludeYears24.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.ArrayList<java.lang.String> strList45 = excludeYears38.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeYears38.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList47 = excludeYears38.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.util.Vector<java.lang.String> strList56 = excludeYears48.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeYears48.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears48.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList66 = excludeYears38.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList67 = excludeYears24.findExcludedCountries(strList66);
        statsVisualiser.facade.ExcludeYears excludeYears68 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList69 = excludeYears68.initilizeCountries();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.String> strList74 = excludeYears68.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList75 = excludeYears68.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears76 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList77 = excludeYears76.initilizeCountries();
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.String> strList82 = excludeYears76.findExcludedCountries(strList80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeYears76.ISOconverter();
        java.lang.String[] strArray85 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList86 = new java.util.Vector<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        java.util.Vector<java.lang.String> strList88 = excludeYears76.findExcludedCountries(strList86);
        java.util.Vector<java.lang.String> strList89 = excludeYears68.findExcludedCountries(strList88);
        java.util.ArrayList<java.lang.String> strList90 = excludeYears68.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeYears68.ISOconverter();
        java.lang.String[] strArray93 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList94 = new java.util.Vector<java.lang.String>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList94, strArray93);
        java.util.Vector<java.lang.String> strList96 = excludeYears68.findExcludedCountries(strList94);
        java.util.Vector<java.lang.String> strList97 = excludeYears24.findExcludedCountries(strList94);
        java.util.Vector<java.lang.String> strList98 = excludeYears0.findExcludedCountries(strList94);
        java.util.ArrayList<java.lang.String> strList99 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strList98);
        org.junit.Assert.assertNotNull(strList99);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList30);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.ArrayList<java.lang.String> strList40 = excludeYears33.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears33.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList49 = excludeYears33.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears33.ISOconverter();
        java.util.Vector<java.lang.String> strList51 = excludeYears33.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList52 = excludeYears33.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears53 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList54 = excludeYears53.initilizeCountries();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears53.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears53.initilizeCountries();
        java.util.Vector<java.lang.String> strList61 = excludeYears53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears53.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears53.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears64 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList65 = excludeYears64.initilizeCountries();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears64.findExcludedCountries(strList68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears64.ISOconverter();
        java.lang.String[] strArray73 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears64.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears53.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList78 = excludeYears33.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList79 = excludeYears0.findExcludedCountries(strList78);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.util.Vector<java.lang.String> strList26 = excludeYears18.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears18.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears18.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.ArrayList<java.lang.String> strList37 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears3 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeYears3.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears5 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList6 = excludeYears5.initilizeCountries();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList9 = new java.util.Vector<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.Vector<java.lang.String> strList11 = excludeYears5.findExcludedCountries(strList9);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears5.ISOconverter();
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears5.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears3.findExcludedCountries(strList15);
        java.util.ArrayList<java.lang.String> strList19 = excludeYears3.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears20.initilizeCountries();
        java.util.Vector<java.lang.String> strList28 = excludeYears20.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears20.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeYears20.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears31.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears39.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears31.findExcludedCountries(strList51);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears31.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears31.ISOconverter();
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears31.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears20.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList61 = excludeYears3.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList62 = excludeYears0.findExcludedCountries(strList57);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass64 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears9.ISOconverter();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears9.findExcludedCountries(strList19);
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.util.Vector<java.lang.String> strList30 = excludeYears22.initilizeCountries();
        java.util.Vector<java.lang.String> strList31 = excludeYears22.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList39 = excludeYears22.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList40 = excludeYears9.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.ArrayList<java.lang.String> strList41 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears42.initilizeCountries();
        java.util.Vector<java.lang.String> strList50 = excludeYears42.initilizeCountries();
        java.util.Vector<java.lang.String> strList51 = excludeYears42.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.util.Vector<java.lang.String> strList60 = excludeYears52.initilizeCountries();
        java.util.Vector<java.lang.String> strList61 = excludeYears52.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears52.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears42.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList71 = excludeYears0.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList72 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList73 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList76 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList33);
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList43 = excludeYears36.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears44.ISOconverter();
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears44.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList57 = excludeYears36.findExcludedCountries(strList56);
        java.util.ArrayList<java.lang.String> strList58 = excludeYears36.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears36.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears36.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears0.findExcludedCountries(strList62);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList67 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears42.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears44.ISOconverter();
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears44.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList57 = excludeYears42.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList58 = excludeYears0.findExcludedCountries(strList57);
        java.util.ArrayList<java.lang.String> strList59 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList60 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strList61);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList21 = excludeYears11.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeYears11.ISOconverter();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears11.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears11.analysisType();
        java.util.ArrayList<java.lang.String> strList25 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears26.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears26.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears11.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList38);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.ArrayList<java.lang.String> strList45 = excludeYears38.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList53 = excludeYears38.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList54 = excludeYears0.findExcludedCountries(strList50);
        java.util.ArrayList<java.lang.String> strList55 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList19 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { 1, 10, 0 };
        java.util.Vector<java.lang.Integer> intList25 = new java.util.Vector<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList25, intArray24);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap27 = null;
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears29.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears29.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList39 = excludeYears29.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears29.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears29.ISOconverter();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears29.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears44.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears44.ISOconverter();
        java.util.Vector<java.lang.String> strList53 = excludeYears44.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeYears44.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears44.ISOconverter();
        java.util.ArrayList<java.lang.String> strList56 = excludeYears44.analysisType();
        java.util.ArrayList<java.lang.String> strList57 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears44.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears59.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears67.ISOconverter();
        java.lang.String[] strArray76 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears67.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears59.findExcludedCountries(strList79);
        java.util.ArrayList<java.lang.String> strList81 = excludeYears59.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeYears59.ISOconverter();
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList86 = new java.util.Vector<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        java.util.Vector<java.lang.String> strList88 = excludeYears59.findExcludedCountries(strList86);
        java.lang.String[] strArray91 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList92 = new java.util.Vector<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        java.util.Vector<java.lang.String> strList94 = excludeYears59.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList95 = excludeYears44.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList96 = excludeYears29.findExcludedCountries(strList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList97 = excludeYears0.removeExcludedYears(intList25, strMap27, "", strList96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.ArrayList<java.lang.String> strList45 = excludeYears38.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList53 = excludeYears38.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList54 = excludeYears0.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.Integer> intList56 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap57 = null;
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears59.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList67 = excludeYears59.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeYears59.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.ArrayList<java.lang.String> strList76 = excludeYears69.analysisType();
        java.util.ArrayList<java.lang.String> strList77 = excludeYears69.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears78 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList79 = excludeYears78.initilizeCountries();
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.String> strList84 = excludeYears78.findExcludedCountries(strList82);
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeYears78.ISOconverter();
        java.util.Vector<java.lang.String> strList86 = excludeYears78.initilizeCountries();
        java.util.Vector<java.lang.String> strList87 = excludeYears78.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears88 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList89 = excludeYears88.initilizeCountries();
        java.lang.String[] strArray91 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList92 = new java.util.Vector<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        java.util.Vector<java.lang.String> strList94 = excludeYears88.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList95 = excludeYears78.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList96 = excludeYears69.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList97 = excludeYears59.findExcludedCountries(strList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList98 = excludeYears0.excludeYears(intList56, strMap57, "", strList97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 10, 100, 0 };
        java.util.Vector<java.lang.Integer> intList20 = new java.util.Vector<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList32 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList35 = excludeYears24.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.ArrayList<java.lang.String> strList43 = excludeYears36.analysisType();
        java.util.ArrayList<java.lang.String> strList44 = excludeYears36.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.util.Vector<java.lang.String> strList53 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeYears45.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears45.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList63 = excludeYears36.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList64 = excludeYears24.findExcludedCountries(strList59);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList65 = excludeYears0.excludeYears(intList20, strMap22, "", strList59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList11 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass12 = strList11.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears28.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears30.ISOconverter();
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears30.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList43 = excludeYears28.findExcludedCountries(strList40);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears28.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeYears45.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeYears45.analysisType();
        java.util.Vector<java.lang.String> strList55 = excludeYears45.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears56.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears64 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList65 = excludeYears64.initilizeCountries();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears64.findExcludedCountries(strList68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears64.ISOconverter();
        java.lang.String[] strArray73 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears64.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears56.findExcludedCountries(strList76);
        java.util.ArrayList<java.lang.String> strList78 = excludeYears56.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears56.ISOconverter();
        java.lang.String[] strArray81 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.String> strList84 = excludeYears56.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList85 = excludeYears45.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList86 = excludeYears28.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList87 = excludeYears0.findExcludedCountries(strList86);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strMap88);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears14.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears14.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears14.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears25.ISOconverter();
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears25.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears14.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList39 = excludeYears0.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.String> strList42 = excludeYears0.findExcludedCountries(strList41);
        java.util.ArrayList<java.lang.String> strList43 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 100, 10, 1 };
        java.util.Vector<java.lang.Integer> intList19 = new java.util.Vector<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears23.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears31.ISOconverter();
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears31.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears23.findExcludedCountries(strList43);
        java.util.ArrayList<java.lang.String> strList45 = excludeYears23.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears23.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears23.ISOconverter();
        java.util.Vector<java.lang.String> strList48 = excludeYears23.initilizeCountries();
        java.util.Vector<java.lang.String> strList49 = excludeYears23.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears23.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears23.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears52.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears60.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears60.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears52.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList74 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray77 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList78 = new java.util.Vector<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Vector<java.lang.String> strList80 = excludeYears52.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList81 = excludeYears23.findExcludedCountries(strList78);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList82 = excludeYears0.removeExcludedYears(intList19, strMap21, "hi!", strList78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears2.ISOconverter();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears2.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList28 = excludeYears27.initilizeCountries();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears27.findExcludedCountries(strList31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears27.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears27.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears19.findExcludedCountries(strList39);
        java.util.ArrayList<java.lang.String> strList41 = excludeYears19.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears42.ISOconverter();
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears42.findExcludedCountries(strList52);
        java.util.Vector<java.lang.String> strList55 = excludeYears19.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList56 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.ArrayList<java.lang.String> strList64 = excludeYears57.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList72 = excludeYears57.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList73 = excludeYears19.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList74 = excludeYears0.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList75 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList76 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList77 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass78 = strList77.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList25);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears39.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears39.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears39.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears39.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears50.ISOconverter();
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears50.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears39.findExcludedCountries(strList60);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList64 = excludeYears0.removeExcludedYears(intList35, strMap37, "hi!", strList60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList26);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strList32);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears17.initilizeCountries();
        java.util.Vector<java.lang.String> strList26 = excludeYears17.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList28 = excludeYears27.initilizeCountries();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears27.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList34 = excludeYears17.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears9.ISOconverter();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears9.findExcludedCountries(strList19);
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.util.Vector<java.lang.String> strList30 = excludeYears22.initilizeCountries();
        java.util.Vector<java.lang.String> strList31 = excludeYears22.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList39 = excludeYears22.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList40 = excludeYears9.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList40);
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeYears45.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears55.ISOconverter();
        java.lang.String[] strArray64 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears55.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears45.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.findExcludedCountries(strList65);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList71 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strList71);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears39.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears0.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList53 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass56 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears9.ISOconverter();
        java.util.Vector<java.lang.String> strList17 = excludeYears9.initilizeCountries();
        java.util.Vector<java.lang.String> strList18 = excludeYears9.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears9.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList27 = excludeYears0.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList16 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = strMap20.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 100 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears26.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears26.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears26.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears26.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears26.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.ArrayList<java.lang.String> strList52 = excludeYears45.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears53 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList54 = excludeYears53.initilizeCountries();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears53.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears45.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList61 = excludeYears45.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears45.ISOconverter();
        java.util.Vector<java.lang.String> strList63 = excludeYears45.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList64 = excludeYears45.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList72 = excludeYears65.initilizeCountries();
        java.util.Vector<java.lang.String> strList73 = excludeYears65.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears65.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears65.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears76 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList77 = excludeYears76.initilizeCountries();
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.String> strList82 = excludeYears76.findExcludedCountries(strList80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeYears76.ISOconverter();
        java.lang.String[] strArray85 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList86 = new java.util.Vector<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        java.util.Vector<java.lang.String> strList88 = excludeYears76.findExcludedCountries(strList86);
        java.util.Vector<java.lang.String> strList89 = excludeYears65.findExcludedCountries(strList86);
        java.util.Vector<java.lang.String> strList90 = excludeYears45.findExcludedCountries(strList86);
        java.util.Vector<java.lang.String> strList91 = excludeYears26.findExcludedCountries(strList86);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList92 = excludeYears0.excludeYears(intList22, strMap24, "", strList86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList15 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList16 = excludeYears15.initilizeCountries();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears15.findExcludedCountries(strList19);
        java.util.Vector<java.lang.String> strList22 = excludeYears15.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears15.findExcludedCountries(strList35);
        java.util.ArrayList<java.lang.String> strList37 = excludeYears15.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears15.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears15.findExcludedCountries(strList42);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears15.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears0.findExcludedCountries(strList48);
        java.util.ArrayList<java.lang.String> strList52 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList53 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList56 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList64 = excludeYears57.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears65.ISOconverter();
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears65.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList78 = excludeYears57.findExcludedCountries(strList77);
        java.util.ArrayList<java.lang.String> strList79 = excludeYears57.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears57.ISOconverter();
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.String> strList85 = excludeYears57.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList86 = excludeYears0.findExcludedCountries(strList83);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList25 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList28 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList28);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears2.ISOconverter();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears2.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList21 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList16 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears0.analysisType();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { 100, 100 };
        java.util.Vector<java.lang.Integer> intList24 = new java.util.Vector<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList24, intArray23);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap26 = null;
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears28.ISOconverter();
        java.util.Vector<java.lang.String> strList37 = excludeYears28.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears28.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears28.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.ArrayList<java.lang.String> strList47 = excludeYears40.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeYears40.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList49 = excludeYears40.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears50.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeYears50.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeYears50.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears50.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears40.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears28.findExcludedCountries(strList64);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList70 = excludeYears0.excludeYears(intList24, strMap26, "", strList69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears9.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears9.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears9.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears26.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears26.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears9.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList42);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Vector<java.lang.String> strList55 = excludeYears48.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears56.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears56.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears48.findExcludedCountries(strList68);
        java.util.ArrayList<java.lang.String> strList70 = excludeYears48.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears48.ISOconverter();
        java.lang.String[] strArray73 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears48.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears0.findExcludedCountries(strList74);
        java.util.ArrayList<java.lang.String> strList78 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass20 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.Integer> intList14 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap15 = null;
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.ArrayList<java.lang.String> strList24 = excludeYears17.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears17.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList33 = excludeYears17.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears17.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears17.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList43 = excludeYears36.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears36.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList45 = excludeYears36.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeYears36.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears47.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears55.ISOconverter();
        java.lang.String[] strArray64 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears55.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears47.findExcludedCountries(strList67);
        java.util.ArrayList<java.lang.String> strList69 = excludeYears47.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears47.ISOconverter();
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears47.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears36.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList77 = excludeYears17.findExcludedCountries(strList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList78 = excludeYears0.excludeYears(intList14, strMap15, "hi!", strList77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { 100 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears19.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList28 = excludeYears27.initilizeCountries();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears27.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList34 = excludeYears19.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList35 = excludeYears19.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears19.ISOconverter();
        java.util.Vector<java.lang.String> strList37 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears38.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears46.ISOconverter();
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears46.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears38.findExcludedCountries(strList58);
        java.util.ArrayList<java.lang.String> strList60 = excludeYears38.analysisType();
        java.util.ArrayList<java.lang.String> strList61 = excludeYears38.analysisType();
        java.util.ArrayList<java.lang.String> strList62 = excludeYears38.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears38.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears38.ISOconverter();
        java.util.ArrayList<java.lang.String> strList65 = excludeYears38.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears66 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList67 = excludeYears66.initilizeCountries();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears66.findExcludedCountries(strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeYears66.ISOconverter();
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.String> strList78 = excludeYears66.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList79 = excludeYears38.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList80 = excludeYears19.findExcludedCountries(strList76);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList81 = excludeYears0.excludeYears(intList15, strMap17, "hi!", strList80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.Vector<java.lang.String> strList22 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears33.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears33.ISOconverter();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears33.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears43 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList44 = excludeYears43.initilizeCountries();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears43.findExcludedCountries(strList47);
        java.util.ArrayList<java.lang.String> strList50 = excludeYears43.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList58 = excludeYears43.findExcludedCountries(strList55);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears43.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears60.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeYears62.ISOconverter();
        java.lang.String[] strArray71 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.String> strList74 = excludeYears62.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList75 = excludeYears60.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList76 = excludeYears43.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList77 = excludeYears33.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList78 = excludeYears0.findExcludedCountries(strList72);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strMap79);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears9.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears9.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears9.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears26.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears26.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears9.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList42);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeYears0.analysisType();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 0, 10, (-1), 10, 100 };
        java.util.Vector<java.lang.Integer> intList54 = new java.util.Vector<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap56 = null;
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears58.initilizeCountries();
        java.util.Vector<java.lang.String> strList66 = excludeYears58.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList67 = excludeYears58.analysisType();
        java.util.Vector<java.lang.String> strList68 = excludeYears58.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears69.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears77 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList78 = excludeYears77.initilizeCountries();
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.String> strList83 = excludeYears77.findExcludedCountries(strList81);
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeYears77.ISOconverter();
        java.lang.String[] strArray86 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.String> strList89 = excludeYears77.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList90 = excludeYears69.findExcludedCountries(strList89);
        java.util.ArrayList<java.lang.String> strList91 = excludeYears69.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeYears69.ISOconverter();
        java.lang.String[] strArray94 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList95 = new java.util.Vector<java.lang.String>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList95, strArray94);
        java.util.Vector<java.lang.String> strList97 = excludeYears69.findExcludedCountries(strList95);
        java.util.Vector<java.lang.String> strList98 = excludeYears58.findExcludedCountries(strList95);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList99 = excludeYears0.removeExcludedYears(intList54, strMap56, "hi!", strList98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strList98);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.ArrayList<java.lang.String> strList20 = excludeYears13.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears13.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass31 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 1 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears39.ISOconverter();
        java.util.ArrayList<java.lang.String> strList48 = excludeYears39.analysisType();
        java.util.ArrayList<java.lang.String> strList49 = excludeYears39.analysisType();
        java.util.Vector<java.lang.String> strList50 = excludeYears39.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList51 = excludeYears39.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears39.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears53 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList54 = excludeYears53.initilizeCountries();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears53.findExcludedCountries(strList57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeYears53.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears53.ISOconverter();
        java.util.Vector<java.lang.String> strList62 = excludeYears53.initilizeCountries();
        java.util.Vector<java.lang.String> strList63 = excludeYears53.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears53.ISOconverter();
        java.util.ArrayList<java.lang.String> strList65 = excludeYears53.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeYears53.analysisType();
        java.util.ArrayList<java.lang.String> strList67 = excludeYears53.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears68 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeYears68.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeYears70.ISOconverter();
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.String> strList82 = excludeYears70.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList83 = excludeYears68.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList84 = excludeYears53.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList85 = excludeYears39.findExcludedCountries(strList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList86 = excludeYears0.removeExcludedYears(intList35, strMap37, "hi!", strList80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass17 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears10.findExcludedCountries(strList30);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears10.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears10.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears10.findExcludedCountries(strList37);
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears10.findExcludedCountries(strList46);
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.ArrayList<java.lang.String> strList55 = excludeYears48.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears48.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList64 = excludeYears10.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList65 = excludeYears0.findExcludedCountries(strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList74 = excludeYears0.findExcludedCountries(strList73);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList2 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList3 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears4 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList5 = excludeYears4.initilizeCountries();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList8 = new java.util.Vector<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        java.util.Vector<java.lang.String> strList10 = excludeYears4.findExcludedCountries(strList8);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears4.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeYears4.initilizeCountries();
        java.util.Vector<java.lang.String> strList13 = excludeYears4.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears4.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList22 = excludeYears0.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList23 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList23);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList15 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList20 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList22 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList11 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 100, 100, 100, 100 };
        java.util.Vector<java.lang.Integer> intList19 = new java.util.Vector<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears23.ISOconverter();
        java.util.Vector<java.lang.String> strList32 = excludeYears23.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears23.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears23.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears23.ISOconverter();
        java.util.ArrayList<java.lang.String> strList36 = excludeYears23.analysisType();
        java.util.Vector<java.lang.String> strList37 = excludeYears23.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears38.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears46.ISOconverter();
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears46.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears38.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList60 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears38.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears23.findExcludedCountries(strList64);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList68 = excludeYears0.removeExcludedYears(intList19, strMap21, "hi!", strList64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { (-1), 10 };
        java.util.Vector<java.lang.Integer> intList20 = new java.util.Vector<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList32 = excludeYears24.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears24.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears24.ISOconverter();
        java.util.Vector<java.lang.String> strList35 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList36 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList37 = excludeYears24.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears24.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears24.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeYears24.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears41.initilizeCountries();
        java.util.Vector<java.lang.String> strList49 = excludeYears41.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.ArrayList<java.lang.String> strList57 = excludeYears50.analysisType();
        java.util.ArrayList<java.lang.String> strList58 = excludeYears50.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears59.ISOconverter();
        java.util.Vector<java.lang.String> strList67 = excludeYears59.initilizeCountries();
        java.util.Vector<java.lang.String> strList68 = excludeYears59.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears59.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList77 = excludeYears50.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList78 = excludeYears41.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList79 = excludeYears24.findExcludedCountries(strList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList80 = excludeYears0.excludeYears(intList20, strMap22, "", strList79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears19.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears19.analysisType();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears19.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears30.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeYears30.initilizeCountries();
        java.util.Vector<java.lang.String> strList39 = excludeYears30.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears30.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList48 = excludeYears19.findExcludedCountries(strList47);
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList56 = excludeYears49.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeYears49.initilizeCountries();
        java.util.Vector<java.lang.String> strList58 = excludeYears49.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears59.ISOconverter();
        java.util.Vector<java.lang.String> strList67 = excludeYears59.initilizeCountries();
        java.util.Vector<java.lang.String> strList68 = excludeYears59.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears59.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList77 = excludeYears49.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList78 = excludeYears19.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList79 = excludeYears0.findExcludedCountries(strList73);
        java.lang.Class<?> wildcardClass80 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList25 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass28 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList16 = excludeYears15.initilizeCountries();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears15.findExcludedCountries(strList19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeYears15.ISOconverter();
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears15.findExcludedCountries(strList25);
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears28.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears28.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears31.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears33.ISOconverter();
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears33.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears31.findExcludedCountries(strList43);
        java.util.ArrayList<java.lang.String> strList47 = excludeYears31.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Vector<java.lang.String> strList55 = excludeYears48.initilizeCountries();
        java.util.Vector<java.lang.String> strList56 = excludeYears48.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList57 = excludeYears48.analysisType();
        java.util.Vector<java.lang.String> strList58 = excludeYears48.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears59.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears67.ISOconverter();
        java.lang.String[] strArray76 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears67.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears59.findExcludedCountries(strList79);
        java.util.ArrayList<java.lang.String> strList81 = excludeYears59.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeYears59.ISOconverter();
        java.lang.String[] strArray84 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears59.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList88 = excludeYears48.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList89 = excludeYears31.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList90 = excludeYears28.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList91 = excludeYears15.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList92 = excludeYears0.findExcludedCountries(strList91);
        java.util.ArrayList<java.lang.String> strList93 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass94 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears34.ISOconverter();
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears34.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears11.findExcludedCountries(strList46);
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.ArrayList<java.lang.String> strList55 = excludeYears48.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears48.findExcludedCountries(strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears48.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears65.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears67.ISOconverter();
        java.lang.String[] strArray76 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears67.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears65.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList81 = excludeYears48.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList82 = excludeYears11.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList83 = excludeYears0.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList84 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList85 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList86 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList87 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList88 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.lang.Integer[] intArray19 = new java.lang.Integer[] { 100, 100, 10, 10, 100 };
        java.util.Vector<java.lang.Integer> intList20 = new java.util.Vector<java.lang.Integer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap22 = null;
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears24.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears24.ISOconverter();
        java.util.Vector<java.lang.String> strList33 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears24.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears24.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears24.ISOconverter();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears24.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeYears24.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears39.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears47.ISOconverter();
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears47.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears39.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList61 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears39.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears24.findExcludedCountries(strList65);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList69 = excludeYears0.excludeYears(intList20, strMap22, "", strList65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { 10, 0, 100 };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears37.findExcludedCountries(strList47);
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears50.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeYears50.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeYears50.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears50.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears37.findExcludedCountries(strList64);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList69 = excludeYears0.removeExcludedYears(intList33, strMap35, "hi!", strList68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList11 = excludeYears0.analysisType();
        java.util.Vector<java.lang.Integer> intList12 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap13 = null;
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList16 = excludeYears15.initilizeCountries();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears15.findExcludedCountries(strList19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeYears15.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears15.ISOconverter();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears15.analysisType();
        java.util.ArrayList<java.lang.String> strList25 = excludeYears15.analysisType();
        java.util.Vector<java.lang.String> strList26 = excludeYears15.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears15.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears15.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears29.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears29.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList39 = excludeYears29.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears29.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears29.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears44.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears46.ISOconverter();
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears46.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears44.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList60 = excludeYears29.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList61 = excludeYears15.findExcludedCountries(strList56);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList62 = excludeYears0.excludeYears(intList12, strMap13, "", strList56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears16 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList17 = excludeYears16.initilizeCountries();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList20 = new java.util.Vector<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        java.util.Vector<java.lang.String> strList22 = excludeYears16.findExcludedCountries(strList20);
        java.util.Vector<java.lang.String> strList23 = excludeYears16.initilizeCountries();
        java.util.Vector<java.lang.String> strList24 = excludeYears16.initilizeCountries();
        java.util.Vector<java.lang.String> strList25 = excludeYears16.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList26 = excludeYears16.analysisType();
        java.util.Vector<java.lang.String> strList27 = excludeYears16.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeYears28.initilizeCountries();
        java.util.Vector<java.lang.String> strList37 = excludeYears28.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears28.findExcludedCountries(strList42);
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears46.ISOconverter();
        java.util.Vector<java.lang.String> strList54 = excludeYears46.initilizeCountries();
        java.util.Vector<java.lang.String> strList55 = excludeYears46.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears46.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList64 = excludeYears28.findExcludedCountries(strList63);
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.ArrayList<java.lang.String> strList72 = excludeYears65.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeYears65.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList74 = excludeYears65.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears75 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList76 = excludeYears75.initilizeCountries();
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.String> strList81 = excludeYears75.findExcludedCountries(strList79);
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeYears75.ISOconverter();
        java.util.Vector<java.lang.String> strList83 = excludeYears75.initilizeCountries();
        java.util.Vector<java.lang.String> strList84 = excludeYears75.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears85 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList86 = excludeYears85.initilizeCountries();
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList89 = new java.util.Vector<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        java.util.Vector<java.lang.String> strList91 = excludeYears85.findExcludedCountries(strList89);
        java.util.Vector<java.lang.String> strList92 = excludeYears75.findExcludedCountries(strList89);
        java.util.Vector<java.lang.String> strList93 = excludeYears65.findExcludedCountries(strList89);
        java.util.Vector<java.lang.String> strList94 = excludeYears28.findExcludedCountries(strList89);
        java.util.Vector<java.lang.String> strList95 = excludeYears16.findExcludedCountries(strList89);
        java.util.Vector<java.lang.String> strList96 = excludeYears0.findExcludedCountries(strList95);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Vector<java.lang.String> strList20 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears21.ISOconverter();
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears21.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList34 = excludeYears13.findExcludedCountries(strList33);
        java.util.ArrayList<java.lang.String> strList35 = excludeYears13.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeYears13.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList45 = excludeYears37.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears37.analysisType();
        java.util.Vector<java.lang.String> strList47 = excludeYears37.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Vector<java.lang.String> strList55 = excludeYears48.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears56.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears56.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears48.findExcludedCountries(strList68);
        java.util.ArrayList<java.lang.String> strList70 = excludeYears48.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears48.ISOconverter();
        java.lang.String[] strArray73 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears48.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears37.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList78 = excludeYears13.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList79 = excludeYears0.findExcludedCountries(strList74);
        java.lang.Class<?> wildcardClass80 = strList74.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.lang.Class<?> wildcardClass37 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList25);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList16 = excludeYears15.initilizeCountries();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears15.findExcludedCountries(strList19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeYears15.ISOconverter();
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears15.findExcludedCountries(strList25);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears15.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears29.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears37.findExcludedCountries(strList47);
        java.util.Vector<java.lang.String> strList50 = excludeYears29.findExcludedCountries(strList49);
        java.util.ArrayList<java.lang.String> strList51 = excludeYears29.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears29.ISOconverter();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears29.findExcludedCountries(strList56);
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears29.findExcludedCountries(strList65);
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.ArrayList<java.lang.String> strList74 = excludeYears67.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears75 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList76 = excludeYears75.initilizeCountries();
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.String> strList81 = excludeYears75.findExcludedCountries(strList79);
        java.util.Vector<java.lang.String> strList82 = excludeYears67.findExcludedCountries(strList79);
        java.util.Vector<java.lang.String> strList83 = excludeYears29.findExcludedCountries(strList79);
        java.util.Vector<java.lang.String> strList84 = excludeYears15.findExcludedCountries(strList79);
        java.util.Vector<java.lang.String> strList85 = excludeYears0.findExcludedCountries(strList84);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears19.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList28 = excludeYears27.initilizeCountries();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears27.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList34 = excludeYears19.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList35 = excludeYears19.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears19.ISOconverter();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears19.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears38.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeYears38.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList47 = excludeYears38.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeYears38.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList56 = excludeYears49.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears57.ISOconverter();
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears57.findExcludedCountries(strList67);
        java.util.Vector<java.lang.String> strList70 = excludeYears49.findExcludedCountries(strList69);
        java.util.ArrayList<java.lang.String> strList71 = excludeYears49.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears49.ISOconverter();
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears49.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList78 = excludeYears38.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList79 = excludeYears19.findExcludedCountries(strList75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList80 = excludeYears0.excludeYears(intList15, strMap17, "", strList75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears31.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears39.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears31.findExcludedCountries(strList51);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears31.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears31.ISOconverter();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears31.findExcludedCountries(strList58);
        java.lang.String[] strArray63 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears31.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears0.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList68 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList69 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList72 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(strMap73);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears13.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears13.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears16 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears16.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears16.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears16.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears33.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = excludeYears33.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears33.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeYears33.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears44.findExcludedCountries(strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears44.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears44.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears33.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList74 = excludeYears16.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList75 = excludeYears13.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList76 = excludeYears0.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList77 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList78 = excludeYears0.initilizeCountries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass79 = strList78.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass32 = strList31.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass45 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass10 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strMap33);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList15 = excludeYears0.analysisType();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 10, 100, 0, 1 };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears25.analysisType();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears25.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears34.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeYears34.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeYears34.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears34.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList52 = excludeYears25.findExcludedCountries(strList48);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList53 = excludeYears0.excludeYears(intList21, strMap23, "hi!", strList48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears17.initilizeCountries();
        java.util.Vector<java.lang.String> strList26 = excludeYears17.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList28 = excludeYears27.initilizeCountries();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears27.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList34 = excludeYears17.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList34);
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList43 = excludeYears36.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears36.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList45 = excludeYears36.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeYears36.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears47.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears55.ISOconverter();
        java.lang.String[] strArray64 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears55.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears47.findExcludedCountries(strList67);
        java.util.ArrayList<java.lang.String> strList69 = excludeYears47.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears47.ISOconverter();
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears47.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears36.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList77 = excludeYears0.findExcludedCountries(strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass79 = strMap78.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strMap78);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears30.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears32.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears30.findExcludedCountries(strList42);
        java.util.ArrayList<java.lang.String> strList46 = excludeYears30.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears47.initilizeCountries();
        java.util.Vector<java.lang.String> strList55 = excludeYears47.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList56 = excludeYears47.analysisType();
        java.util.Vector<java.lang.String> strList57 = excludeYears47.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears58.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears66 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList67 = excludeYears66.initilizeCountries();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears66.findExcludedCountries(strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeYears66.ISOconverter();
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.String> strList78 = excludeYears66.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList79 = excludeYears58.findExcludedCountries(strList78);
        java.util.ArrayList<java.lang.String> strList80 = excludeYears58.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeYears58.ISOconverter();
        java.lang.String[] strArray83 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList84 = new java.util.Vector<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.Vector<java.lang.String> strList86 = excludeYears58.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList87 = excludeYears47.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList88 = excludeYears30.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList89 = excludeYears0.findExcludedCountries(strList88);
        java.util.ArrayList<java.lang.String> strList90 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap91 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(strMap92);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList45 = excludeYears37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears37.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears37.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.util.Vector<java.lang.String> strList56 = excludeYears48.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeYears48.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears48.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList66 = excludeYears37.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList67 = excludeYears0.findExcludedCountries(strList66);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap69);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        java.lang.Integer[] intArray37 = new java.lang.Integer[] { 100, (-1), 10, 100 };
        java.util.Vector<java.lang.Integer> intList38 = new java.util.Vector<java.lang.Integer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap40 = null;
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears42.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears50.ISOconverter();
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears50.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears42.findExcludedCountries(strList62);
        java.util.ArrayList<java.lang.String> strList64 = excludeYears42.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears42.ISOconverter();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears42.findExcludedCountries(strList69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList72 = excludeYears0.removeExcludedYears(intList38, strMap40, "", strList71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.ArrayList<java.lang.String> strList41 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears42.initilizeCountries();
        java.util.Vector<java.lang.String> strList50 = excludeYears42.initilizeCountries();
        java.util.Vector<java.lang.String> strList51 = excludeYears42.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.util.Vector<java.lang.String> strList60 = excludeYears52.initilizeCountries();
        java.util.Vector<java.lang.String> strList61 = excludeYears52.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears52.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears42.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList71 = excludeYears0.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList72 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList73 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass74 = strList73.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.ArrayList<java.lang.String> strList18 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears11.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList27 = excludeYears0.findExcludedCountries(strList26);
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList37 = excludeYears29.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears29.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeYears29.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears40.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears48.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears40.findExcludedCountries(strList60);
        java.util.ArrayList<java.lang.String> strList62 = excludeYears40.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears40.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears40.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears29.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList72 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList73 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList74 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strMap45);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears9.ISOconverter();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears9.findExcludedCountries(strList19);
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.util.Vector<java.lang.String> strList30 = excludeYears22.initilizeCountries();
        java.util.Vector<java.lang.String> strList31 = excludeYears22.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList39 = excludeYears22.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList40 = excludeYears9.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 0, 10 };
        java.util.Vector<java.lang.Integer> intList18 = new java.util.Vector<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap20 = null;
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Vector<java.lang.String> strList29 = excludeYears22.initilizeCountries();
        java.util.Vector<java.lang.String> strList30 = excludeYears22.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears22.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears22.ISOconverter();
        java.util.Vector<java.lang.String> strList33 = excludeYears22.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears34.ISOconverter();
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears34.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears22.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList48 = excludeYears22.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears22.ISOconverter();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears22.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears22.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears52.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears60.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears60.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears52.findExcludedCountries(strList72);
        java.util.ArrayList<java.lang.String> strList74 = excludeYears52.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears52.ISOconverter();
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.String> strList81 = excludeYears52.findExcludedCountries(strList79);
        java.lang.String[] strArray84 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears52.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList88 = excludeYears22.findExcludedCountries(strList85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList89 = excludeYears0.excludeYears(intList18, strMap20, "hi!", strList85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Vector<java.lang.Integer> intList17 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears20.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears20.findExcludedCountries(strList40);
        java.util.ArrayList<java.lang.String> strList42 = excludeYears20.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears20.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        java.util.Vector<java.lang.String> strList52 = excludeYears44.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList53 = excludeYears44.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears55.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears63 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList64 = excludeYears63.initilizeCountries();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears63.findExcludedCountries(strList67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears63.ISOconverter();
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears63.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears55.findExcludedCountries(strList75);
        java.util.ArrayList<java.lang.String> strList77 = excludeYears55.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears55.ISOconverter();
        java.lang.String[] strArray80 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.String> strList83 = excludeYears55.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList84 = excludeYears44.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList85 = excludeYears20.findExcludedCountries(strList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList86 = excludeYears0.removeExcludedYears(intList17, strMap18, "", strList81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList45 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears37.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears37.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears37.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears54.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears56.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears56.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears54.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears37.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList71 = excludeYears0.findExcludedCountries(strList66);
        java.util.ArrayList<java.lang.String> strList72 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList73 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList74 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears3 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeYears3.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears5 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList6 = excludeYears5.initilizeCountries();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList9 = new java.util.Vector<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.Vector<java.lang.String> strList11 = excludeYears5.findExcludedCountries(strList9);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears5.ISOconverter();
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears5.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears3.findExcludedCountries(strList15);
        java.util.ArrayList<java.lang.String> strList19 = excludeYears3.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears20.initilizeCountries();
        java.util.Vector<java.lang.String> strList28 = excludeYears20.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears20.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeYears20.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears31.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears39.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears31.findExcludedCountries(strList51);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears31.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears31.ISOconverter();
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears31.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears20.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList61 = excludeYears3.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList62 = excludeYears0.findExcludedCountries(strList57);
        java.util.ArrayList<java.lang.String> strList63 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList65 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.util.Vector<java.lang.String> strList26 = excludeYears18.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears18.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears18.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears37.analysisType();
        java.util.Vector<java.lang.String> strList45 = excludeYears37.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears37.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears47.ISOconverter();
        java.util.Vector<java.lang.String> strList55 = excludeYears47.initilizeCountries();
        java.util.Vector<java.lang.String> strList56 = excludeYears47.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList64 = excludeYears47.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList65 = excludeYears37.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList66 = excludeYears0.findExcludedCountries(strList61);
        java.lang.Class<?> wildcardClass67 = strList61.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears15.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears15.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList33 = null;
        java.util.Vector<java.lang.String> strList34 = excludeYears0.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList40 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass41 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears11.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList22 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears11.findExcludedCountries(strList35);
        java.util.ArrayList<java.lang.String> strList37 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears11.ISOconverter();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears11.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears41.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears49.ISOconverter();
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears49.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears41.findExcludedCountries(strList61);
        java.util.ArrayList<java.lang.String> strList63 = excludeYears41.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears41.ISOconverter();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears41.findExcludedCountries(strList68);
        java.lang.String[] strArray73 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears41.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears11.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList78 = excludeYears0.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList79 = null;
        java.util.Vector<java.lang.String> strList80 = excludeYears0.findExcludedCountries(strList79);
        java.util.ArrayList<java.lang.String> strList81 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(strMap82);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears11.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears11.analysisType();
        java.util.ArrayList<java.lang.String> strList21 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.util.Vector<java.lang.String> strList30 = excludeYears22.initilizeCountries();
        java.util.Vector<java.lang.String> strList31 = excludeYears22.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList39 = excludeYears22.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList40 = excludeYears11.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList41 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears42.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears42.ISOconverter();
        java.util.Vector<java.lang.String> strList51 = excludeYears42.initilizeCountries();
        java.util.Vector<java.lang.String> strList52 = excludeYears42.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears42.ISOconverter();
        java.util.ArrayList<java.lang.String> strList54 = excludeYears42.analysisType();
        java.util.ArrayList<java.lang.String> strList55 = excludeYears42.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears42.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList64 = excludeYears57.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears65.ISOconverter();
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears65.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList78 = excludeYears57.findExcludedCountries(strList77);
        java.util.ArrayList<java.lang.String> strList79 = excludeYears57.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears57.ISOconverter();
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList84 = new java.util.Vector<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.Vector<java.lang.String> strList86 = excludeYears57.findExcludedCountries(strList84);
        java.lang.String[] strArray89 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList90 = new java.util.Vector<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        java.util.Vector<java.lang.String> strList92 = excludeYears57.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList93 = excludeYears42.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList94 = excludeYears11.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList95 = excludeYears0.findExcludedCountries(strList90);
        java.util.ArrayList<java.lang.String> strList96 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList97 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList98 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNotNull(strList96);
        org.junit.Assert.assertNotNull(strList97);
        org.junit.Assert.assertNull(strList98);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass45 = strList44.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears14.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears22.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears14.findExcludedCountries(strList34);
        java.util.ArrayList<java.lang.String> strList36 = excludeYears14.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears14.ISOconverter();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears14.findExcludedCountries(strList41);
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears14.findExcludedCountries(strList50);
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.ArrayList<java.lang.String> strList59 = excludeYears52.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears52.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears14.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.findExcludedCountries(strList68);
        java.lang.Class<?> wildcardClass70 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.Vector<java.lang.String> strList16 = excludeYears9.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears9.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList31 = excludeYears9.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears32.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears9.findExcludedCountries(strList44);
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears46.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears46.findExcludedCountries(strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears46.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears63 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears63.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears65.ISOconverter();
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears65.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList78 = excludeYears63.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList79 = excludeYears46.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList80 = excludeYears9.findExcludedCountries(strList75);
        statsVisualiser.facade.ExcludeYears excludeYears81 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList82 = excludeYears81.initilizeCountries();
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears81.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList88 = excludeYears9.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList89 = excludeYears0.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList90 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList91 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList92 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass93 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears9.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears9.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears9.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears26.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears26.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears9.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList42);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList40 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears0.analysisType();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 1, 100, (-1) };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.ArrayList<java.lang.String> strList57 = excludeYears50.analysisType();
        java.util.ArrayList<java.lang.String> strList58 = excludeYears50.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears59.ISOconverter();
        java.util.Vector<java.lang.String> strList67 = excludeYears59.initilizeCountries();
        java.util.Vector<java.lang.String> strList68 = excludeYears59.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears59.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList77 = excludeYears50.findExcludedCountries(strList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList78 = excludeYears0.removeExcludedYears(intList46, strMap48, "hi!", strList73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1) };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        java.util.Vector<java.lang.String> strList25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList26 = excludeYears0.removeExcludedYears(intList21, strMap23, "", strList25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList33);
        java.util.ArrayList<java.lang.String> strList36 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears40.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears42.ISOconverter();
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears42.findExcludedCountries(strList52);
        java.util.Vector<java.lang.String> strList55 = excludeYears40.findExcludedCountries(strList52);
        java.util.Vector<java.lang.String> strList56 = excludeYears0.findExcludedCountries(strList55);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass57 = strList55.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList40 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strList40);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears35.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears35.ISOconverter();
        java.util.Vector<java.lang.String> strList44 = excludeYears35.initilizeCountries();
        java.util.Vector<java.lang.String> strList45 = excludeYears35.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears35.ISOconverter();
        java.util.ArrayList<java.lang.String> strList47 = excludeYears35.analysisType();
        java.util.ArrayList<java.lang.String> strList48 = excludeYears35.analysisType();
        java.util.ArrayList<java.lang.String> strList49 = excludeYears35.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears50.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears50.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList66 = excludeYears35.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList67 = excludeYears0.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList68 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList16 = excludeYears15.initilizeCountries();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears15.findExcludedCountries(strList19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeYears15.ISOconverter();
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears15.findExcludedCountries(strList25);
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears28.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears28.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears31.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears33.ISOconverter();
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears33.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears31.findExcludedCountries(strList43);
        java.util.ArrayList<java.lang.String> strList47 = excludeYears31.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Vector<java.lang.String> strList55 = excludeYears48.initilizeCountries();
        java.util.Vector<java.lang.String> strList56 = excludeYears48.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList57 = excludeYears48.analysisType();
        java.util.Vector<java.lang.String> strList58 = excludeYears48.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears59.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears67.ISOconverter();
        java.lang.String[] strArray76 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears67.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears59.findExcludedCountries(strList79);
        java.util.ArrayList<java.lang.String> strList81 = excludeYears59.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeYears59.ISOconverter();
        java.lang.String[] strArray84 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears59.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList88 = excludeYears48.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList89 = excludeYears31.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList90 = excludeYears28.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList91 = excludeYears15.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList92 = excludeYears0.findExcludedCountries(strList91);
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList94 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList95 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList96 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNotNull(strList96);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = null;
        java.util.Vector<java.lang.String> strList20 = excludeYears0.findExcludedCountries(strList19);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass23 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Vector<java.lang.String> strList20 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears21.ISOconverter();
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears21.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList34 = excludeYears13.findExcludedCountries(strList33);
        java.util.ArrayList<java.lang.String> strList35 = excludeYears13.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears13.ISOconverter();
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears13.findExcludedCountries(strList39);
        java.util.ArrayList<java.lang.String> strList42 = excludeYears13.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        java.util.Vector<java.lang.String> strList52 = excludeYears44.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears54.ISOconverter();
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears54.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears44.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears13.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.findExcludedCountries(strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList71 = excludeYears0.initilizeCountries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass72 = strList71.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strList71);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList28 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strMap31);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList21 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass22 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass14 = strList13.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears33.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = excludeYears33.initilizeCountries();
        java.util.Vector<java.lang.String> strList42 = excludeYears33.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears43 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList44 = excludeYears43.initilizeCountries();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears43.findExcludedCountries(strList47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears43.ISOconverter();
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears43.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList56 = excludeYears33.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList57 = excludeYears0.findExcludedCountries(strList56);
        java.util.ArrayList<java.lang.String> strList58 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears17.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears25.ISOconverter();
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears25.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears17.findExcludedCountries(strList37);
        java.util.ArrayList<java.lang.String> strList39 = excludeYears17.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears17.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears17.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeYears17.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears17.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears44.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears44.ISOconverter();
        java.util.Vector<java.lang.String> strList53 = excludeYears44.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeYears44.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears44.ISOconverter();
        java.util.ArrayList<java.lang.String> strList56 = excludeYears44.analysisType();
        java.util.ArrayList<java.lang.String> strList57 = excludeYears44.analysisType();
        java.util.ArrayList<java.lang.String> strList58 = excludeYears44.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeYears59.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeYears61.ISOconverter();
        java.lang.String[] strArray70 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears61.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList74 = excludeYears59.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList75 = excludeYears44.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList76 = excludeYears17.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList77 = excludeYears0.findExcludedCountries(strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList79 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 0, 10, 100, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList87 = new java.util.Vector<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList87, intArray86);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap89 = null;
        java.util.Vector<java.lang.String> strList91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList92 = excludeYears0.excludeYears(intList87, strMap89, "", strList91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray28 = new java.lang.Integer[] { 1, (-1), 10, (-1) };
        java.util.Vector<java.lang.Integer> intList29 = new java.util.Vector<java.lang.Integer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap31 = null;
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears33.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears33.ISOconverter();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears33.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears33.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears44.ISOconverter();
        java.util.Vector<java.lang.String> strList52 = excludeYears44.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears44.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList62 = excludeYears33.findExcludedCountries(strList61);
        statsVisualiser.facade.ExcludeYears excludeYears63 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList64 = excludeYears63.initilizeCountries();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears63.findExcludedCountries(strList67);
        java.util.Vector<java.lang.String> strList70 = excludeYears63.initilizeCountries();
        java.util.Vector<java.lang.String> strList71 = excludeYears63.initilizeCountries();
        java.util.Vector<java.lang.String> strList72 = excludeYears63.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears73 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList74 = excludeYears73.initilizeCountries();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears73.findExcludedCountries(strList77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears73.ISOconverter();
        java.util.Vector<java.lang.String> strList81 = excludeYears73.initilizeCountries();
        java.util.Vector<java.lang.String> strList82 = excludeYears73.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears83 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList84 = excludeYears83.initilizeCountries();
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.String> strList89 = excludeYears83.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList90 = excludeYears73.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList91 = excludeYears63.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList92 = excludeYears33.findExcludedCountries(strList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList93 = excludeYears0.excludeYears(intList29, strMap31, "", strList87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.ArrayList<java.lang.String> strList17 = excludeYears10.analysisType();
        java.util.ArrayList<java.lang.String> strList18 = excludeYears10.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.util.Vector<java.lang.String> strList27 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList28 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears19.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList37 = excludeYears10.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList38 = excludeYears0.findExcludedCountries(strList33);
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { 100, 10, 1 };
        java.util.Vector<java.lang.Integer> intList43 = new java.util.Vector<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList43, intArray42);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap45 = null;
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears47.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears55.ISOconverter();
        java.lang.String[] strArray64 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears55.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears47.findExcludedCountries(strList67);
        java.util.ArrayList<java.lang.String> strList69 = excludeYears47.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears47.ISOconverter();
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears47.findExcludedCountries(strList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList76 = excludeYears0.removeExcludedYears(intList43, strMap45, "", strList73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList3 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass6 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears43 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList44 = excludeYears43.initilizeCountries();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears43.findExcludedCountries(strList47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears43.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears43.ISOconverter();
        java.util.Vector<java.lang.String> strList52 = excludeYears43.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeYears43.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears43.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears43.ISOconverter();
        java.util.ArrayList<java.lang.String> strList56 = excludeYears43.analysisType();
        java.util.Vector<java.lang.String> strList57 = excludeYears43.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears58.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears66 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList67 = excludeYears66.initilizeCountries();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears66.findExcludedCountries(strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeYears66.ISOconverter();
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.String> strList78 = excludeYears66.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList79 = excludeYears58.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList80 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray83 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList84 = new java.util.Vector<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.Vector<java.lang.String> strList86 = excludeYears58.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList87 = excludeYears43.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList88 = excludeYears0.findExcludedCountries(strList84);
        java.util.Map<java.lang.String, java.lang.String> strMap89 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strMap89);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.util.Vector<java.lang.String> strList26 = excludeYears18.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears18.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears18.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass39 = strList38.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears11.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears0.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears11.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears11.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.util.Vector<java.lang.String> strList30 = excludeYears22.initilizeCountries();
        java.util.Vector<java.lang.String> strList31 = excludeYears22.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList39 = excludeYears22.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList40 = excludeYears11.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList40);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass43 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList27 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList37 = excludeYears30.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears38.ISOconverter();
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears38.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears30.findExcludedCountries(strList50);
        java.util.ArrayList<java.lang.String> strList52 = excludeYears30.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears30.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears30.ISOconverter();
        java.util.Vector<java.lang.String> strList55 = excludeYears30.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears30.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears57.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears57.ISOconverter();
        java.util.Vector<java.lang.String> strList66 = excludeYears57.initilizeCountries();
        java.util.Vector<java.lang.String> strList67 = excludeYears57.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeYears57.ISOconverter();
        java.util.ArrayList<java.lang.String> strList69 = excludeYears57.analysisType();
        java.util.ArrayList<java.lang.String> strList70 = excludeYears57.analysisType();
        java.util.ArrayList<java.lang.String> strList71 = excludeYears57.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears72 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeYears72.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears74 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList75 = excludeYears74.initilizeCountries();
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList78 = new java.util.Vector<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Vector<java.lang.String> strList80 = excludeYears74.findExcludedCountries(strList78);
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeYears74.ISOconverter();
        java.lang.String[] strArray83 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList84 = new java.util.Vector<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.Vector<java.lang.String> strList86 = excludeYears74.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList87 = excludeYears72.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList88 = excludeYears57.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList89 = excludeYears30.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList90 = excludeYears28.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList91 = excludeYears0.findExcludedCountries(strList90);
        java.util.ArrayList<java.lang.String> strList92 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass93 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears31.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears39.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears31.findExcludedCountries(strList51);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears31.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears31.ISOconverter();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears31.findExcludedCountries(strList58);
        java.lang.String[] strArray63 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears31.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears0.findExcludedCountries(strList66);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList69 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strList69);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears17.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears17.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList33 = excludeYears0.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList34 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList28 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears29.ISOconverter();
        java.util.Vector<java.lang.String> strList37 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears29.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears29.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList47 = excludeYears19.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList48 = excludeYears0.findExcludedCountries(strList47);
        java.util.ArrayList<java.lang.String> strList49 = excludeYears0.analysisType();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { 100 };
        java.util.Vector<java.lang.Integer> intList52 = new java.util.Vector<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList52, intArray51);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap54 = null;
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears56.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears64 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList65 = excludeYears64.initilizeCountries();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears64.findExcludedCountries(strList68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears64.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears64.ISOconverter();
        java.util.Vector<java.lang.String> strList73 = excludeYears64.initilizeCountries();
        java.util.Vector<java.lang.String> strList74 = excludeYears64.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears64.ISOconverter();
        java.util.ArrayList<java.lang.String> strList76 = excludeYears64.analysisType();
        java.util.ArrayList<java.lang.String> strList77 = excludeYears64.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeYears64.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears79 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears79.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears81 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList82 = excludeYears81.initilizeCountries();
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears81.findExcludedCountries(strList85);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeYears81.ISOconverter();
        java.lang.String[] strArray90 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList91 = new java.util.Vector<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        java.util.Vector<java.lang.String> strList93 = excludeYears81.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList94 = excludeYears79.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList95 = excludeYears64.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList96 = excludeYears56.findExcludedCountries(strList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList97 = excludeYears0.excludeYears(intList52, strMap54, "hi!", strList91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList34 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass35 = strList34.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass14 = strList13.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        java.util.Vector<java.lang.Integer> intList33 = null;
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        java.util.Vector<java.lang.String> strList36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList37 = excludeYears0.removeExcludedYears(intList33, strMap34, "hi!", strList36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.ArrayList<java.lang.String> strList18 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears11.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList27 = excludeYears0.findExcludedCountries(strList26);
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList37 = excludeYears29.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears29.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeYears29.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears40.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears48.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears40.findExcludedCountries(strList60);
        java.util.ArrayList<java.lang.String> strList62 = excludeYears40.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears40.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears40.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears29.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList72 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList73 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList74 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList75 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass12 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears17.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears17.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList33 = excludeYears0.findExcludedCountries(strList29);
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears34.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears34.ISOconverter();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears34.analysisType();
        java.util.ArrayList<java.lang.String> strList44 = excludeYears34.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.util.Vector<java.lang.String> strList53 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeYears45.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears45.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList63 = excludeYears34.findExcludedCountries(strList62);
        statsVisualiser.facade.ExcludeYears excludeYears64 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList65 = excludeYears64.initilizeCountries();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears64.findExcludedCountries(strList68);
        java.util.Vector<java.lang.String> strList71 = excludeYears64.initilizeCountries();
        java.util.Vector<java.lang.String> strList72 = excludeYears64.initilizeCountries();
        java.util.Vector<java.lang.String> strList73 = excludeYears64.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears74 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList75 = excludeYears74.initilizeCountries();
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList78 = new java.util.Vector<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Vector<java.lang.String> strList80 = excludeYears74.findExcludedCountries(strList78);
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeYears74.ISOconverter();
        java.util.Vector<java.lang.String> strList82 = excludeYears74.initilizeCountries();
        java.util.Vector<java.lang.String> strList83 = excludeYears74.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears84 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList85 = excludeYears84.initilizeCountries();
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList88 = new java.util.Vector<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Vector<java.lang.String> strList90 = excludeYears84.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList91 = excludeYears74.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList92 = excludeYears64.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList93 = excludeYears34.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList94 = excludeYears0.findExcludedCountries(strList93);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears30.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears32.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears30.findExcludedCountries(strList42);
        java.util.ArrayList<java.lang.String> strList46 = excludeYears30.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears47.initilizeCountries();
        java.util.Vector<java.lang.String> strList55 = excludeYears47.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList56 = excludeYears47.analysisType();
        java.util.Vector<java.lang.String> strList57 = excludeYears47.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears58.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears66 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList67 = excludeYears66.initilizeCountries();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears66.findExcludedCountries(strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeYears66.ISOconverter();
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.String> strList78 = excludeYears66.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList79 = excludeYears58.findExcludedCountries(strList78);
        java.util.ArrayList<java.lang.String> strList80 = excludeYears58.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeYears58.ISOconverter();
        java.lang.String[] strArray83 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList84 = new java.util.Vector<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.Vector<java.lang.String> strList86 = excludeYears58.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList87 = excludeYears47.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList88 = excludeYears30.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList89 = excludeYears0.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList90 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList28 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears29.ISOconverter();
        java.util.Vector<java.lang.String> strList37 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears29.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears29.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList47 = excludeYears19.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList48 = excludeYears0.findExcludedCountries(strList47);
        java.util.ArrayList<java.lang.String> strList49 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList50 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(strList50);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears33.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears41.ISOconverter();
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears41.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears33.findExcludedCountries(strList53);
        java.util.ArrayList<java.lang.String> strList55 = excludeYears33.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears33.ISOconverter();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears33.findExcludedCountries(strList60);
        java.lang.String[] strArray65 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears33.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.findExcludedCountries(strList68);
        java.util.ArrayList<java.lang.String> strList70 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList71 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.ArrayList<java.lang.String> strList1 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList3 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList5 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList6 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears7 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList8 = excludeYears7.initilizeCountries();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList11 = new java.util.Vector<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.util.Vector<java.lang.String> strList13 = excludeYears7.findExcludedCountries(strList11);
        java.util.ArrayList<java.lang.String> strList14 = excludeYears7.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList16 = excludeYears15.initilizeCountries();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears15.findExcludedCountries(strList19);
        java.util.Vector<java.lang.String> strList22 = excludeYears7.findExcludedCountries(strList19);
        java.util.ArrayList<java.lang.String> strList23 = excludeYears7.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears7.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears7.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList27 = excludeYears26.initilizeCountries();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.String> strList32 = excludeYears26.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList33 = excludeYears26.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears34.ISOconverter();
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears34.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears26.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList48 = excludeYears26.analysisType();
        java.util.ArrayList<java.lang.String> strList49 = excludeYears26.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears26.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears26.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears26.ISOconverter();
        java.util.ArrayList<java.lang.String> strList53 = excludeYears26.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears54.ISOconverter();
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears54.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears26.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears7.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.findExcludedCountries(strList64);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears15.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears15.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList33 = null;
        java.util.Vector<java.lang.String> strList34 = excludeYears0.findExcludedCountries(strList33);
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears35.ISOconverter();
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears35.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears0.findExcludedCountries(strList47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass49 = strList48.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Vector<java.lang.String> strList19 = excludeYears12.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears20.ISOconverter();
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.String> strList32 = excludeYears20.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList33 = excludeYears12.findExcludedCountries(strList32);
        java.util.ArrayList<java.lang.String> strList34 = excludeYears12.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears35.ISOconverter();
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears35.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears12.findExcludedCountries(strList47);
        java.util.Vector<java.lang.String> strList49 = excludeYears12.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.ArrayList<java.lang.String> strList57 = excludeYears50.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears50.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList66 = excludeYears12.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList67 = excludeYears0.findExcludedCountries(strList62);
        java.lang.Class<?> wildcardClass68 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears15.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears15.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), (-1), 100 };
        java.util.Vector<java.lang.Integer> intList39 = new java.util.Vector<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList39, intArray38);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap41 = null;
        statsVisualiser.facade.ExcludeYears excludeYears43 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList44 = excludeYears43.initilizeCountries();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears43.findExcludedCountries(strList47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears43.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears43.ISOconverter();
        java.util.Vector<java.lang.String> strList52 = excludeYears43.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeYears43.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears43.ISOconverter();
        java.util.ArrayList<java.lang.String> strList55 = excludeYears43.analysisType();
        java.util.Vector<java.lang.String> strList56 = excludeYears43.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeYears43.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.ArrayList<java.lang.String> strList65 = excludeYears58.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears66 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList67 = excludeYears66.initilizeCountries();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears66.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears58.findExcludedCountries(strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears58.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears75 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeYears75.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears77 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList78 = excludeYears77.initilizeCountries();
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.String> strList83 = excludeYears77.findExcludedCountries(strList81);
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeYears77.ISOconverter();
        java.lang.String[] strArray86 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.String> strList89 = excludeYears77.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList90 = excludeYears75.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList91 = excludeYears58.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList92 = excludeYears43.findExcludedCountries(strList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList93 = excludeYears0.removeExcludedYears(intList39, strMap41, "hi!", strList87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList24 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList25 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { 0, 1 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        java.util.Vector<java.lang.String> strList35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList36 = excludeYears0.excludeYears(intList31, strMap33, "", strList35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears31.ISOconverter();
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears31.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears0.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList45 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears46.ISOconverter();
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears46.findExcludedCountries(strList56);
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears59.ISOconverter();
        java.util.Vector<java.lang.String> strList67 = excludeYears59.initilizeCountries();
        java.util.Vector<java.lang.String> strList68 = excludeYears59.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears59.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList77 = excludeYears46.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList78 = excludeYears0.findExcludedCountries(strList73);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList3 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass5 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears2.ISOconverter();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears2.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears17.initilizeCountries();
        java.util.Vector<java.lang.String> strList25 = excludeYears17.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList26 = excludeYears17.analysisType();
        java.util.Vector<java.lang.String> strList27 = excludeYears17.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears28.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears36.ISOconverter();
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears36.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears28.findExcludedCountries(strList48);
        java.util.ArrayList<java.lang.String> strList50 = excludeYears28.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears28.ISOconverter();
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears28.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList57 = excludeYears17.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList58 = excludeYears0.findExcludedCountries(strList54);
        java.lang.Class<?> wildcardClass59 = strList54.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears14.ISOconverter();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        java.util.Vector<java.lang.String> strList23 = excludeYears14.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears14.findExcludedCountries(strList28);
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeYears32.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = excludeYears32.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears32.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList50 = excludeYears14.findExcludedCountries(strList49);
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.ArrayList<java.lang.String> strList58 = excludeYears51.analysisType();
        java.util.Vector<java.lang.String> strList59 = excludeYears51.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList60 = excludeYears51.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeYears61.ISOconverter();
        java.util.Vector<java.lang.String> strList69 = excludeYears61.initilizeCountries();
        java.util.Vector<java.lang.String> strList70 = excludeYears61.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears71 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList72 = excludeYears71.initilizeCountries();
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears71.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList78 = excludeYears61.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList79 = excludeYears51.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList80 = excludeYears14.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList81 = excludeYears0.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList82 = null;
        java.util.Vector<java.lang.String> strList83 = excludeYears0.findExcludedCountries(strList82);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList83);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1) };
        java.util.Vector<java.lang.Integer> intList47 = new java.util.Vector<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears51.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears51.ISOconverter();
        java.util.ArrayList<java.lang.String> strList60 = excludeYears51.analysisType();
        java.util.ArrayList<java.lang.String> strList61 = excludeYears51.analysisType();
        java.util.Vector<java.lang.String> strList62 = excludeYears51.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList63 = excludeYears51.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears51.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears65.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeYears65.ISOconverter();
        java.util.Vector<java.lang.String> strList74 = excludeYears65.initilizeCountries();
        java.util.Vector<java.lang.String> strList75 = excludeYears65.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeYears65.ISOconverter();
        java.util.ArrayList<java.lang.String> strList77 = excludeYears65.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeYears65.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeYears65.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears80 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeYears80.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears82 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList83 = excludeYears82.initilizeCountries();
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList86 = new java.util.Vector<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        java.util.Vector<java.lang.String> strList88 = excludeYears82.findExcludedCountries(strList86);
        java.util.Map<java.lang.String, java.lang.String> strMap89 = excludeYears82.ISOconverter();
        java.lang.String[] strArray91 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList92 = new java.util.Vector<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        java.util.Vector<java.lang.String> strList94 = excludeYears82.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList95 = excludeYears80.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList96 = excludeYears65.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList97 = excludeYears51.findExcludedCountries(strList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList98 = excludeYears0.excludeYears(intList47, strMap49, "", strList97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears14.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears14.analysisType();
        java.util.Vector<java.lang.String> strList24 = excludeYears14.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears25.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears33.ISOconverter();
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears33.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears25.findExcludedCountries(strList45);
        java.util.ArrayList<java.lang.String> strList47 = excludeYears25.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears25.ISOconverter();
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears25.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears14.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList55 = excludeYears14.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList56 = excludeYears14.analysisType();
        java.util.Vector<java.lang.String> strList57 = excludeYears14.initilizeCountries();
        java.util.Vector<java.lang.String> strList58 = excludeYears14.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears59.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears67.ISOconverter();
        java.lang.String[] strArray76 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears67.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears59.findExcludedCountries(strList79);
        java.util.ArrayList<java.lang.String> strList81 = excludeYears59.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeYears59.ISOconverter();
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList86 = new java.util.Vector<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        java.util.Vector<java.lang.String> strList88 = excludeYears59.findExcludedCountries(strList86);
        java.util.Vector<java.lang.String> strList89 = excludeYears14.findExcludedCountries(strList86);
        java.util.Vector<java.lang.String> strList90 = excludeYears0.findExcludedCountries(strList86);
        java.util.ArrayList<java.lang.String> strList91 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNotNull(strList91);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList42 = null;
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList42);
        java.lang.Class<?> wildcardClass44 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.findExcludedCountries(strList36);
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears38.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears46.ISOconverter();
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears46.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears38.findExcludedCountries(strList58);
        java.util.ArrayList<java.lang.String> strList60 = excludeYears38.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears38.ISOconverter();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears38.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears0.findExcludedCountries(strList67);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList71 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList72 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList74 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strList74);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList28 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray30 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList31 = new java.util.Vector<java.lang.Integer>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap33 = null;
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList42 = excludeYears35.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeYears35.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears35.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears35.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeYears35.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears35.initilizeCountries();
        java.util.Vector<java.lang.String> strList48 = excludeYears35.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList49 = excludeYears35.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears35.ISOconverter();
        java.util.Vector<java.lang.String> strList51 = excludeYears35.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears52.initilizeCountries();
        java.util.Vector<java.lang.String> strList60 = excludeYears52.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.ArrayList<java.lang.String> strList68 = excludeYears61.analysisType();
        java.util.ArrayList<java.lang.String> strList69 = excludeYears61.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeYears70.ISOconverter();
        java.util.Vector<java.lang.String> strList78 = excludeYears70.initilizeCountries();
        java.util.Vector<java.lang.String> strList79 = excludeYears70.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears80 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList81 = excludeYears80.initilizeCountries();
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList84 = new java.util.Vector<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.Vector<java.lang.String> strList86 = excludeYears80.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList87 = excludeYears70.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList88 = excludeYears61.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList89 = excludeYears52.findExcludedCountries(strList84);
        java.util.Vector<java.lang.String> strList90 = excludeYears35.findExcludedCountries(strList84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList91 = excludeYears0.removeExcludedYears(intList31, strMap33, "", strList84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { 1, 1, (-1), (-1) };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.ArrayList<java.lang.String> strList28 = excludeYears21.analysisType();
        java.util.Vector<java.lang.String> strList29 = excludeYears21.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears21.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears31.ISOconverter();
        java.util.Vector<java.lang.String> strList39 = excludeYears31.initilizeCountries();
        java.util.Vector<java.lang.String> strList40 = excludeYears31.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears31.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList49 = excludeYears21.findExcludedCountries(strList45);
        java.util.ArrayList<java.lang.String> strList50 = excludeYears21.analysisType();
        java.util.ArrayList<java.lang.String> strList51 = excludeYears21.analysisType();
        java.util.ArrayList<java.lang.String> strList52 = excludeYears21.analysisType();
        java.util.Vector<java.lang.String> strList53 = null;
        java.util.Vector<java.lang.String> strList54 = excludeYears21.findExcludedCountries(strList53);
        java.util.ArrayList<java.lang.String> strList55 = excludeYears21.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears56.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeYears56.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears59.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList74 = excludeYears59.findExcludedCountries(strList71);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears59.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears76 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeYears76.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears78 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList79 = excludeYears78.initilizeCountries();
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.String> strList84 = excludeYears78.findExcludedCountries(strList82);
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeYears78.ISOconverter();
        java.lang.String[] strArray87 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList88 = new java.util.Vector<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Vector<java.lang.String> strList90 = excludeYears78.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList91 = excludeYears76.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList92 = excludeYears59.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList93 = excludeYears56.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList94 = excludeYears21.findExcludedCountries(strList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList95 = excludeYears0.excludeYears(intList17, strMap19, "hi!", strList94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { 10, 1, 100 };
        java.util.Vector<java.lang.Integer> intList19 = new java.util.Vector<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears23.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears23.analysisType();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears23.analysisType();
        java.util.Vector<java.lang.String> strList34 = excludeYears23.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears23.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears23.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears37.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears37.ISOconverter();
        java.util.ArrayList<java.lang.String> strList49 = excludeYears37.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears37.analysisType();
        java.util.ArrayList<java.lang.String> strList51 = excludeYears37.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears52.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears54.ISOconverter();
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears54.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears52.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears37.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears23.findExcludedCountries(strList64);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList70 = excludeYears0.excludeYears(intList19, strMap21, "hi!", strList69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { 1, 1 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        java.util.Vector<java.lang.String> strList44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList45 = excludeYears0.removeExcludedYears(intList40, strMap42, "hi!", strList44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears15.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears15.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList34 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass35 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.util.Vector<java.lang.String> strList26 = excludeYears18.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears18.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears18.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strMap32);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList15 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.findExcludedCountries(strList36);
        java.util.ArrayList<java.lang.String> strList38 = excludeYears0.analysisType();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { 0, 1 };
        java.util.Vector<java.lang.Integer> intList42 = new java.util.Vector<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap44 = null;
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList53 = excludeYears0.excludeYears(intList42, strMap44, "", strList52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass17 = strList16.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = null;
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList11);
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass14 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList2 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears3 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList4 = excludeYears3.initilizeCountries();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList7 = new java.util.Vector<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        java.util.Vector<java.lang.String> strList9 = excludeYears3.findExcludedCountries(strList7);
        java.util.ArrayList<java.lang.String> strList10 = excludeYears3.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears3.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears3.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears20.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears22.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears20.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears3.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList38 = null;
        java.util.Vector<java.lang.String> strList39 = excludeYears0.findExcludedCountries(strList38);
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears40.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears48.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears40.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList62 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears40.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.findExcludedCountries(strList68);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList25 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass26 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray39 = new java.lang.Integer[] { (-1), 100 };
        java.util.Vector<java.lang.Integer> intList40 = new java.util.Vector<java.lang.Integer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap42 = null;
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        java.util.Vector<java.lang.String> strList52 = excludeYears44.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears44.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears44.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears55.ISOconverter();
        java.util.Vector<java.lang.String> strList63 = excludeYears55.initilizeCountries();
        java.util.Vector<java.lang.String> strList64 = excludeYears55.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList72 = excludeYears55.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList73 = excludeYears44.findExcludedCountries(strList69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList74 = excludeYears0.removeExcludedYears(intList40, strMap42, "hi!", strList73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Vector<java.lang.String> strList19 = excludeYears12.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears20.ISOconverter();
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.String> strList32 = excludeYears20.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList33 = excludeYears12.findExcludedCountries(strList32);
        java.util.ArrayList<java.lang.String> strList34 = excludeYears12.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears35.ISOconverter();
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears35.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears12.findExcludedCountries(strList47);
        java.util.Vector<java.lang.String> strList49 = excludeYears12.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.ArrayList<java.lang.String> strList57 = excludeYears50.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears50.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList66 = excludeYears12.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList67 = excludeYears0.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList68 = null;
        java.util.Vector<java.lang.String> strList69 = excludeYears0.findExcludedCountries(strList68);
        java.util.ArrayList<java.lang.String> strList70 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList71 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass72 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.findExcludedCountries(strList36);
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears38.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears46.ISOconverter();
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears46.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears38.findExcludedCountries(strList58);
        java.util.ArrayList<java.lang.String> strList60 = excludeYears38.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears38.ISOconverter();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears38.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears0.findExcludedCountries(strList67);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears9.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears9.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears9.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears26.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears26.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears9.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList42);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList45 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass46 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList16 = excludeYears15.initilizeCountries();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears15.findExcludedCountries(strList19);
        java.util.Vector<java.lang.String> strList22 = excludeYears15.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears15.findExcludedCountries(strList35);
        java.util.ArrayList<java.lang.String> strList37 = excludeYears15.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears15.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears15.findExcludedCountries(strList42);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears15.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears0.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList52 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList53 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList54 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList55 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass56 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears45.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears53 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList54 = excludeYears53.initilizeCountries();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears53.findExcludedCountries(strList57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeYears53.ISOconverter();
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears53.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears45.findExcludedCountries(strList65);
        java.util.ArrayList<java.lang.String> strList67 = excludeYears45.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeYears45.ISOconverter();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.String> strList74 = excludeYears45.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList75 = excludeYears0.findExcludedCountries(strList72);
        java.util.ArrayList<java.lang.String> strList76 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList77 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList78 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears45.findExcludedCountries(strList55);
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears58.ISOconverter();
        java.util.Vector<java.lang.String> strList66 = excludeYears58.initilizeCountries();
        java.util.Vector<java.lang.String> strList67 = excludeYears58.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears68 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList69 = excludeYears68.initilizeCountries();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.String> strList74 = excludeYears68.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList75 = excludeYears58.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList76 = excludeYears45.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList77 = excludeYears0.findExcludedCountries(strList76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass78 = strList76.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.ArrayList<java.lang.String> strList21 = excludeYears14.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Vector<java.lang.String> strList29 = excludeYears14.findExcludedCountries(strList26);
        java.util.Vector<java.lang.String> strList30 = excludeYears14.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears14.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears14.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears33.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = excludeYears33.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears33.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeYears33.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears44.findExcludedCountries(strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears44.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears44.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears33.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList74 = excludeYears14.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList75 = excludeYears0.findExcludedCountries(strList70);
        java.lang.Class<?> wildcardClass76 = strList70.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = strList17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList26 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strMap29);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList15 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strList29);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears30.ISOconverter();
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears30.findExcludedCountries(strList40);
        statsVisualiser.facade.ExcludeYears excludeYears43 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList44 = excludeYears43.initilizeCountries();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears43.findExcludedCountries(strList47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears43.ISOconverter();
        java.util.Vector<java.lang.String> strList51 = excludeYears43.initilizeCountries();
        java.util.Vector<java.lang.String> strList52 = excludeYears43.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears53 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList54 = excludeYears53.initilizeCountries();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears53.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears43.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList61 = excludeYears30.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList62 = excludeYears0.findExcludedCountries(strList57);
        java.util.ArrayList<java.lang.String> strList63 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass65 = strMap64.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strMap64);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears14.ISOconverter();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears23.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears31.ISOconverter();
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears31.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears23.findExcludedCountries(strList43);
        java.util.ArrayList<java.lang.String> strList45 = excludeYears23.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears46.ISOconverter();
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears46.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears23.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList60 = excludeYears23.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.ArrayList<java.lang.String> strList68 = excludeYears61.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears61.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList77 = excludeYears23.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList78 = excludeYears14.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList79 = excludeYears0.findExcludedCountries(strList78);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.Vector<java.lang.String> strList22 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList32 = null;
        java.util.Vector<java.lang.String> strList33 = excludeYears0.findExcludedCountries(strList32);
        java.util.ArrayList<java.lang.String> strList34 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.ArrayList<java.lang.String> strList17 = excludeYears10.analysisType();
        java.util.ArrayList<java.lang.String> strList18 = excludeYears10.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.util.Vector<java.lang.String> strList27 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList28 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears19.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList37 = excludeYears10.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList38 = excludeYears0.findExcludedCountries(strList33);
        java.util.ArrayList<java.lang.String> strList39 = excludeYears0.analysisType();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { 0, 0, 1, 10, 100 };
        java.util.Vector<java.lang.Integer> intList46 = new java.util.Vector<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap48 = null;
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.ArrayList<java.lang.String> strList57 = excludeYears50.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears50.findExcludedCountries(strList62);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears50.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeYears67.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeYears69.ISOconverter();
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.String> strList81 = excludeYears69.findExcludedCountries(strList79);
        java.util.Vector<java.lang.String> strList82 = excludeYears67.findExcludedCountries(strList79);
        java.util.Vector<java.lang.String> strList83 = excludeYears50.findExcludedCountries(strList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList84 = excludeYears0.excludeYears(intList46, strMap48, "hi!", strList79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears10.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears10.ISOconverter();
        java.util.ArrayList<java.lang.String> strList22 = excludeYears10.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears10.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears10.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears25.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears33.ISOconverter();
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears33.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears25.findExcludedCountries(strList45);
        java.util.ArrayList<java.lang.String> strList47 = excludeYears25.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears25.ISOconverter();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears25.findExcludedCountries(strList52);
        java.lang.String[] strArray57 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears25.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears10.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList62 = excludeYears0.findExcludedCountries(strList58);
        java.util.ArrayList<java.lang.String> strList63 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList65 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strList65);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList44 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList47 = new java.util.Vector<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears51.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears53 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList54 = excludeYears53.initilizeCountries();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears53.findExcludedCountries(strList57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeYears53.ISOconverter();
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears53.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears51.findExcludedCountries(strList63);
        java.util.ArrayList<java.lang.String> strList67 = excludeYears51.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeYears51.analysisType();
        java.util.Vector<java.lang.String> strList69 = excludeYears51.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears70.initilizeCountries();
        java.util.Vector<java.lang.String> strList78 = excludeYears70.initilizeCountries();
        java.util.Vector<java.lang.String> strList79 = excludeYears70.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears80 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList81 = excludeYears80.initilizeCountries();
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList84 = new java.util.Vector<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.Vector<java.lang.String> strList86 = excludeYears80.findExcludedCountries(strList84);
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeYears80.ISOconverter();
        java.lang.String[] strArray89 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList90 = new java.util.Vector<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        java.util.Vector<java.lang.String> strList92 = excludeYears80.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList93 = excludeYears70.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList94 = excludeYears51.findExcludedCountries(strList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList95 = excludeYears0.removeExcludedYears(intList47, strMap49, "hi!", strList90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList40 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList42 = null;
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList44 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList36 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { 0, (-1) };
        java.util.Vector<java.lang.Integer> intList41 = new java.util.Vector<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap43 = null;
        java.util.Vector<java.lang.String> strList45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList46 = excludeYears0.removeExcludedYears(intList41, strMap43, "", strList45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Vector<java.lang.String> strList20 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears21.ISOconverter();
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears21.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList34 = excludeYears13.findExcludedCountries(strList33);
        java.util.ArrayList<java.lang.String> strList35 = excludeYears13.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears13.ISOconverter();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears13.findExcludedCountries(strList40);
        statsVisualiser.facade.ExcludeYears excludeYears43 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList44 = excludeYears43.initilizeCountries();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears43.findExcludedCountries(strList47);
        java.util.Vector<java.lang.String> strList50 = excludeYears13.findExcludedCountries(strList49);
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.ArrayList<java.lang.String> strList58 = excludeYears51.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears51.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList67 = excludeYears13.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList68 = excludeYears0.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList71 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList72 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNull(strList72);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears33.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears41.ISOconverter();
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears41.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears33.findExcludedCountries(strList53);
        java.util.ArrayList<java.lang.String> strList55 = excludeYears33.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears56.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears56.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears33.findExcludedCountries(strList68);
        java.util.Vector<java.lang.String> strList70 = excludeYears33.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears71 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList72 = excludeYears71.initilizeCountries();
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears71.findExcludedCountries(strList75);
        java.util.ArrayList<java.lang.String> strList78 = excludeYears71.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears79 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList80 = excludeYears79.initilizeCountries();
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.String> strList85 = excludeYears79.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList86 = excludeYears71.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList87 = excludeYears33.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList88 = excludeYears0.findExcludedCountries(strList83);
        java.util.ArrayList<java.lang.String> strList89 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList90 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(strList90);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList16 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = null;
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList11);
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 100, 0, 10, 0, 100 };
        java.util.Vector<java.lang.Integer> intList21 = new java.util.Vector<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList21, intArray20);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap23 = null;
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears25.ISOconverter();
        java.util.Vector<java.lang.String> strList27 = excludeYears25.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.ArrayList<java.lang.String> strList35 = excludeYears28.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList43 = excludeYears28.findExcludedCountries(strList40);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears28.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears45.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears47.ISOconverter();
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears47.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears45.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList61 = excludeYears28.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList62 = excludeYears25.findExcludedCountries(strList57);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList63 = excludeYears0.removeExcludedYears(intList21, strMap23, "hi!", strList62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList21 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears0.analysisType();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 100, 100, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList56 = excludeYears49.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears57.ISOconverter();
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears57.findExcludedCountries(strList67);
        java.util.Vector<java.lang.String> strList70 = excludeYears49.findExcludedCountries(strList69);
        java.util.ArrayList<java.lang.String> strList71 = excludeYears49.analysisType();
        java.util.ArrayList<java.lang.String> strList72 = excludeYears49.analysisType();
        java.util.ArrayList<java.lang.String> strList73 = excludeYears49.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears49.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears49.ISOconverter();
        java.util.ArrayList<java.lang.String> strList76 = excludeYears49.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears77 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList78 = excludeYears77.initilizeCountries();
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.String> strList83 = excludeYears77.findExcludedCountries(strList81);
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeYears77.ISOconverter();
        java.lang.String[] strArray86 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.String> strList89 = excludeYears77.findExcludedCountries(strList87);
        java.util.Vector<java.lang.String> strList90 = excludeYears49.findExcludedCountries(strList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList91 = excludeYears0.removeExcludedYears(intList45, strMap47, "", strList87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList3 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray7 = new java.lang.Integer[] { 100, 1 };
        java.util.Vector<java.lang.Integer> intList8 = new java.util.Vector<java.lang.Integer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap10 = null;
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears12.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears21.initilizeCountries();
        java.util.Vector<java.lang.String> strList29 = excludeYears21.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears21.ISOconverter();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears21.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears21.ISOconverter();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears21.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears34.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears42.ISOconverter();
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears42.findExcludedCountries(strList52);
        java.util.Vector<java.lang.String> strList55 = excludeYears34.findExcludedCountries(strList54);
        java.util.ArrayList<java.lang.String> strList56 = excludeYears34.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears34.ISOconverter();
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears34.findExcludedCountries(strList60);
        java.util.ArrayList<java.lang.String> strList63 = excludeYears34.analysisType();
        java.util.Vector<java.lang.String> strList64 = excludeYears34.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList72 = excludeYears65.initilizeCountries();
        java.util.Vector<java.lang.String> strList73 = excludeYears65.initilizeCountries();
        java.util.Vector<java.lang.String> strList74 = excludeYears65.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears75 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList76 = excludeYears75.initilizeCountries();
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList79 = new java.util.Vector<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Vector<java.lang.String> strList81 = excludeYears75.findExcludedCountries(strList79);
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeYears75.ISOconverter();
        java.lang.String[] strArray84 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears75.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList88 = excludeYears65.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList89 = excludeYears34.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList90 = excludeYears21.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList91 = excludeYears12.findExcludedCountries(strList85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList92 = excludeYears0.removeExcludedYears(intList8, strMap10, "hi!", strList91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList18 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.ArrayList<java.lang.String> strList35 = excludeYears28.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeYears28.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.util.Vector<java.lang.String> strList45 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeYears37.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears37.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList55 = excludeYears28.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList56 = excludeYears19.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList57 = excludeYears0.findExcludedCountries(strList56);
        java.util.ArrayList<java.lang.String> strList58 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass59 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears3 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeYears3.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears5 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList6 = excludeYears5.initilizeCountries();
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList9 = new java.util.Vector<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.Vector<java.lang.String> strList11 = excludeYears5.findExcludedCountries(strList9);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears5.ISOconverter();
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears5.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears3.findExcludedCountries(strList15);
        java.util.ArrayList<java.lang.String> strList19 = excludeYears3.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears20.initilizeCountries();
        java.util.Vector<java.lang.String> strList28 = excludeYears20.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears20.analysisType();
        java.util.Vector<java.lang.String> strList30 = excludeYears20.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears31.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears39.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears31.findExcludedCountries(strList51);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears31.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears31.ISOconverter();
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears31.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears20.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList61 = excludeYears3.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList62 = excludeYears0.findExcludedCountries(strList57);
        java.lang.Class<?> wildcardClass63 = strList57.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList45 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass47 = strList46.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.Vector<java.lang.String> strList16 = excludeYears9.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears9.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList31 = excludeYears9.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears32.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears9.findExcludedCountries(strList44);
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears46.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears46.findExcludedCountries(strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears46.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears63 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears63.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears65.ISOconverter();
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears65.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList78 = excludeYears63.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList79 = excludeYears46.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList80 = excludeYears9.findExcludedCountries(strList75);
        statsVisualiser.facade.ExcludeYears excludeYears81 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList82 = excludeYears81.initilizeCountries();
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears81.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList88 = excludeYears9.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList89 = excludeYears0.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList90 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList91 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList92 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears29.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears37.findExcludedCountries(strList47);
        java.util.Vector<java.lang.String> strList50 = excludeYears29.findExcludedCountries(strList49);
        java.util.ArrayList<java.lang.String> strList51 = excludeYears29.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears29.ISOconverter();
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears29.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList58 = excludeYears0.findExcludedCountries(strList57);
        java.util.ArrayList<java.lang.String> strList59 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList60 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList61 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList26 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears31.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears31.analysisType();
        java.util.ArrayList<java.lang.String> strList40 = excludeYears31.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.ArrayList<java.lang.String> strList48 = excludeYears41.analysisType();
        java.util.ArrayList<java.lang.String> strList49 = excludeYears41.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears50.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeYears50.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeYears50.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears50.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears41.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears31.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.findExcludedCountries(strList64);
        java.lang.Class<?> wildcardClass71 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = null;
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList11);
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass15 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears15.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears15.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList33 = null;
        java.util.Vector<java.lang.String> strList34 = excludeYears0.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears37.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears45.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList58 = excludeYears37.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList59 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears37.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears0.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList67 = null;
        java.util.Vector<java.lang.String> strList68 = excludeYears0.findExcludedCountries(strList67);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList70 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList71 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList72 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList73 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.util.Vector<java.lang.String> strList26 = excludeYears18.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears18.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears18.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears38.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeYears38.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears38.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.util.Vector<java.lang.String> strList56 = excludeYears48.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeYears48.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears48.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList66 = excludeYears38.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList67 = excludeYears0.findExcludedCountries(strList66);
        java.util.ArrayList<java.lang.String> strList68 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList69 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList70 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass72 = strMap71.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 100, 10 };
        java.util.Vector<java.lang.Integer> intList15 = new java.util.Vector<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap17 = null;
        java.util.Vector<java.lang.String> strList19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList20 = excludeYears0.excludeYears(intList15, strMap17, "hi!", strList19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears13.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList16 = excludeYears15.initilizeCountries();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears15.findExcludedCountries(strList19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeYears15.ISOconverter();
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears15.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears13.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strMap31);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears22.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears22.initilizeCountries();
        java.util.Vector<java.lang.String> strList32 = excludeYears22.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears22.ISOconverter();
        java.util.ArrayList<java.lang.String> strList34 = excludeYears22.analysisType();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears22.analysisType();
        java.util.ArrayList<java.lang.String> strList36 = excludeYears22.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears37.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears39.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears37.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList53 = excludeYears22.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList54 = excludeYears0.findExcludedCountries(strList53);
        java.util.ArrayList<java.lang.String> strList55 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strMap56);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList11 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList40 = excludeYears0.analysisType();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 1, 0, 10, 1 };
        java.util.Vector<java.lang.Integer> intList47 = new java.util.Vector<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears51.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears53 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList54 = excludeYears53.initilizeCountries();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears53.findExcludedCountries(strList57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeYears53.ISOconverter();
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears53.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears51.findExcludedCountries(strList63);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList67 = excludeYears0.excludeYears(intList47, strMap49, "", strList63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList28 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList28);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears14.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        java.util.Vector<java.lang.String> strList23 = excludeYears14.initilizeCountries();
        java.util.Vector<java.lang.String> strList24 = excludeYears14.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears25.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears25.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears25.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears25.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = excludeYears25.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList47 = new java.util.Vector<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        java.util.Vector<java.lang.String> strList49 = excludeYears37.findExcludedCountries(strList47);
        java.util.Vector<java.lang.String> strList50 = excludeYears25.findExcludedCountries(strList49);
        java.util.ArrayList<java.lang.String> strList51 = excludeYears25.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears25.ISOconverter();
        java.util.ArrayList<java.lang.String> strList53 = excludeYears25.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears25.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears55.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears63 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList64 = excludeYears63.initilizeCountries();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears63.findExcludedCountries(strList67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears63.ISOconverter();
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears63.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears55.findExcludedCountries(strList75);
        java.util.ArrayList<java.lang.String> strList77 = excludeYears55.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears55.ISOconverter();
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.String> strList84 = excludeYears55.findExcludedCountries(strList82);
        java.lang.String[] strArray87 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList88 = new java.util.Vector<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Vector<java.lang.String> strList90 = excludeYears55.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList91 = excludeYears25.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList92 = excludeYears14.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList93 = excludeYears0.findExcludedCountries(strList92);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass94 = strList92.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass45 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.Vector<java.lang.String> strList22 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList26);
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears29.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears29.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList39 = excludeYears29.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears29.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears29.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears29.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears44.findExcludedCountries(strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears44.ISOconverter();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears44.findExcludedCountries(strList71);
        java.lang.String[] strArray76 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears44.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears29.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList81 = excludeYears0.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList82 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList83 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList84 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList85 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList86 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList35 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList11 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears10.findExcludedCountries(strList30);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears10.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears10.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList35 = excludeYears10.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears10.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears37.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears37.ISOconverter();
        java.util.ArrayList<java.lang.String> strList49 = excludeYears37.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears37.analysisType();
        java.util.ArrayList<java.lang.String> strList51 = excludeYears37.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears52.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears54.ISOconverter();
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears54.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears52.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears37.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears10.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList71 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList72 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears14.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList22 = excludeYears14.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears14.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears24.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears24.ISOconverter();
        java.util.Vector<java.lang.String> strList33 = excludeYears24.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears24.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears24.ISOconverter();
        java.util.ArrayList<java.lang.String> strList36 = excludeYears24.analysisType();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears24.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears24.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears39.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears47.ISOconverter();
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears47.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears39.findExcludedCountries(strList59);
        java.util.ArrayList<java.lang.String> strList61 = excludeYears39.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears39.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears39.findExcludedCountries(strList66);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.String> strList74 = excludeYears39.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList75 = excludeYears24.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList76 = excludeYears14.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList77 = excludeYears0.findExcludedCountries(strList76);
        java.util.ArrayList<java.lang.String> strList78 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNull(strMap79);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.Vector<java.lang.String> strList22 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList26);
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears29.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears29.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList39 = excludeYears29.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears29.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears29.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears29.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears44.findExcludedCountries(strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears44.ISOconverter();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears44.findExcludedCountries(strList71);
        java.lang.String[] strArray76 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears44.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears29.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList81 = excludeYears0.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList82 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList83 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList84 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass85 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray18 = new java.lang.Integer[] { (-1), 100, 10, 1 };
        java.util.Vector<java.lang.Integer> intList19 = new java.util.Vector<java.lang.Integer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList19, intArray18);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap21 = null;
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears23.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears31.ISOconverter();
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears31.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears23.findExcludedCountries(strList43);
        java.util.ArrayList<java.lang.String> strList45 = excludeYears23.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears23.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears47.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears55.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears55.ISOconverter();
        java.util.Vector<java.lang.String> strList64 = excludeYears55.initilizeCountries();
        java.util.Vector<java.lang.String> strList65 = excludeYears55.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears55.ISOconverter();
        java.util.ArrayList<java.lang.String> strList67 = excludeYears55.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeYears55.analysisType();
        java.util.ArrayList<java.lang.String> strList69 = excludeYears55.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears70.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears72 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList73 = excludeYears72.initilizeCountries();
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.String> strList78 = excludeYears72.findExcludedCountries(strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears72.ISOconverter();
        java.lang.String[] strArray81 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.String> strList84 = excludeYears72.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList85 = excludeYears70.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList86 = excludeYears55.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList87 = excludeYears47.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList88 = excludeYears23.findExcludedCountries(strList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList89 = excludeYears0.excludeYears(intList19, strMap21, "hi!", strList88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears31.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears39.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears31.findExcludedCountries(strList51);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears31.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears31.ISOconverter();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears31.findExcludedCountries(strList58);
        java.lang.String[] strArray63 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears31.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears0.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList68 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList69 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList71 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList72 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.ArrayList<java.lang.String> strList24 = excludeYears17.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears17.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList33 = excludeYears0.findExcludedCountries(strList32);
        java.lang.Class<?> wildcardClass34 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass31 = strList30.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList20 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList22 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray27 = new java.lang.Integer[] { 1, 100, (-1), 10 };
        java.util.Vector<java.lang.Integer> intList28 = new java.util.Vector<java.lang.Integer>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList28, intArray27);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap30 = null;
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList39 = excludeYears32.initilizeCountries();
        java.util.Vector<java.lang.String> strList40 = excludeYears32.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears32.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears32.ISOconverter();
        java.util.Vector<java.lang.String> strList43 = excludeYears32.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears32.initilizeCountries();
        java.util.Vector<java.lang.String> strList45 = excludeYears32.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears32.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears32.ISOconverter();
        java.util.Vector<java.lang.String> strList48 = excludeYears32.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList56 = excludeYears49.initilizeCountries();
        java.util.Vector<java.lang.String> strList57 = excludeYears49.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.ArrayList<java.lang.String> strList65 = excludeYears58.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeYears58.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears67.ISOconverter();
        java.util.Vector<java.lang.String> strList75 = excludeYears67.initilizeCountries();
        java.util.Vector<java.lang.String> strList76 = excludeYears67.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears77 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList78 = excludeYears77.initilizeCountries();
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.String> strList83 = excludeYears77.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList84 = excludeYears67.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList85 = excludeYears58.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList86 = excludeYears49.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList87 = excludeYears32.findExcludedCountries(strList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList88 = excludeYears0.excludeYears(intList28, strMap30, "", strList81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList16 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = strMap17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList34 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList44 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList47 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList48 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList49 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.String> strList42 = excludeYears0.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.Vector<java.lang.String> strList16 = excludeYears9.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears9.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList31 = excludeYears9.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears9.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears9.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.ArrayList<java.lang.String> strList41 = excludeYears34.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears34.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList50 = excludeYears9.findExcludedCountries(strList49);
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.ArrayList<java.lang.String> strList58 = excludeYears51.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeYears51.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears60.ISOconverter();
        java.util.Vector<java.lang.String> strList68 = excludeYears60.initilizeCountries();
        java.util.Vector<java.lang.String> strList69 = excludeYears60.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears60.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList78 = excludeYears51.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList79 = excludeYears9.findExcludedCountries(strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears9.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeYears9.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears82 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList83 = excludeYears82.initilizeCountries();
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList86 = new java.util.Vector<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        java.util.Vector<java.lang.String> strList88 = excludeYears82.findExcludedCountries(strList86);
        java.util.ArrayList<java.lang.String> strList89 = excludeYears82.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears90 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList91 = excludeYears90.initilizeCountries();
        java.lang.String[] strArray93 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList94 = new java.util.Vector<java.lang.String>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList94, strArray93);
        java.util.Vector<java.lang.String> strList96 = excludeYears90.findExcludedCountries(strList94);
        java.util.Vector<java.lang.String> strList97 = excludeYears82.findExcludedCountries(strList94);
        java.util.Vector<java.lang.String> strList98 = excludeYears9.findExcludedCountries(strList94);
        java.util.Vector<java.lang.String> strList99 = excludeYears0.findExcludedCountries(strList94);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strList98);
        org.junit.Assert.assertNull(strList99);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Vector<java.lang.String> strList19 = excludeYears12.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears20.ISOconverter();
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.String> strList32 = excludeYears20.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList33 = excludeYears12.findExcludedCountries(strList32);
        java.util.ArrayList<java.lang.String> strList34 = excludeYears12.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears35.ISOconverter();
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears35.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears12.findExcludedCountries(strList47);
        java.util.Vector<java.lang.String> strList49 = excludeYears12.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.ArrayList<java.lang.String> strList57 = excludeYears50.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears50.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList66 = excludeYears12.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList67 = excludeYears0.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList68 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 100, 10 };
        java.util.Vector<java.lang.Integer> intList73 = new java.util.Vector<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList73, intArray72);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap75 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList82 = excludeYears0.removeExcludedYears(intList73, strMap75, "hi!", strList80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList21 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strList21);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList29 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears31.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears31.ISOconverter();
        java.util.ArrayList<java.lang.String> strList40 = excludeYears31.analysisType();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears31.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears42.ISOconverter();
        java.util.Vector<java.lang.String> strList50 = excludeYears42.initilizeCountries();
        java.util.Vector<java.lang.String> strList51 = excludeYears42.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears42.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList60 = excludeYears31.findExcludedCountries(strList59);
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears61.initilizeCountries();
        java.util.Vector<java.lang.String> strList69 = excludeYears61.initilizeCountries();
        java.util.Vector<java.lang.String> strList70 = excludeYears61.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears71 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList72 = excludeYears71.initilizeCountries();
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears71.findExcludedCountries(strList75);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears71.ISOconverter();
        java.util.Vector<java.lang.String> strList79 = excludeYears71.initilizeCountries();
        java.util.Vector<java.lang.String> strList80 = excludeYears71.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears81 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList82 = excludeYears81.initilizeCountries();
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears81.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList88 = excludeYears71.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList89 = excludeYears61.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList90 = excludeYears31.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList91 = excludeYears0.findExcludedCountries(strList85);
        java.lang.Class<?> wildcardClass92 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList25);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, (-1) };
        java.util.Vector<java.lang.Integer> intList36 = new java.util.Vector<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap38 = null;
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears40.initilizeCountries();
        java.util.Vector<java.lang.String> strList48 = excludeYears40.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears40.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears40.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears51.ISOconverter();
        java.util.Vector<java.lang.String> strList59 = excludeYears51.initilizeCountries();
        java.util.Vector<java.lang.String> strList60 = excludeYears51.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears51.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList69 = excludeYears40.findExcludedCountries(strList65);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList70 = excludeYears0.excludeYears(intList36, strMap38, "", strList65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList11 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears14.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears22.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears14.findExcludedCountries(strList34);
        java.util.ArrayList<java.lang.String> strList36 = excludeYears14.analysisType();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears14.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears38.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeYears38.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList47 = excludeYears38.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeYears38.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList56 = excludeYears49.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears57.ISOconverter();
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears57.findExcludedCountries(strList67);
        java.util.Vector<java.lang.String> strList70 = excludeYears49.findExcludedCountries(strList69);
        java.util.ArrayList<java.lang.String> strList71 = excludeYears49.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears49.ISOconverter();
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears49.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList78 = excludeYears38.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList79 = excludeYears14.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList80 = excludeYears0.findExcludedCountries(strList75);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList16 = excludeYears15.initilizeCountries();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears15.findExcludedCountries(strList19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeYears15.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears15.ISOconverter();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears15.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears25.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears25.findExcludedCountries(strList37);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears25.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears42.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears44.ISOconverter();
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears44.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList57 = excludeYears42.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList58 = excludeYears25.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList59 = excludeYears15.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList60 = excludeYears0.findExcludedCountries(strList54);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { 0, (-1) };
        java.util.Vector<java.lang.Integer> intList33 = new java.util.Vector<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap35 = null;
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList45 = excludeYears37.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears37.analysisType();
        java.util.Vector<java.lang.String> strList47 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList48 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList49 = excludeYears37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = excludeYears37.ISOconverter();
        java.util.Vector<java.lang.String> strList51 = excludeYears37.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeYears52.ISOconverter();
        java.util.ArrayList<java.lang.String> strList61 = excludeYears52.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.ArrayList<java.lang.String> strList69 = excludeYears62.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList77 = excludeYears62.findExcludedCountries(strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears62.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears79 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears79.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears81 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList82 = excludeYears81.initilizeCountries();
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears81.findExcludedCountries(strList85);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeYears81.ISOconverter();
        java.lang.String[] strArray90 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList91 = new java.util.Vector<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        java.util.Vector<java.lang.String> strList93 = excludeYears81.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList94 = excludeYears79.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList95 = excludeYears62.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList96 = excludeYears52.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList97 = excludeYears37.findExcludedCountries(strList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList98 = excludeYears0.excludeYears(intList33, strMap35, "", strList97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList38 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList40 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass41 = strList40.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears15.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears15.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList33 = null;
        java.util.Vector<java.lang.String> strList34 = excludeYears0.findExcludedCountries(strList33);
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears35.ISOconverter();
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears35.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears0.findExcludedCountries(strList47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass49 = strList47.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList33);
        java.util.ArrayList<java.lang.String> strList36 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears0.analysisType();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100, 0, 100, 1, (-1) };
        java.util.Vector<java.lang.Integer> intList45 = new java.util.Vector<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap47 = null;
        java.util.Vector<java.lang.String> strList49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList50 = excludeYears0.removeExcludedYears(intList45, strMap47, "", strList49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears38.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeYears38.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.ArrayList<java.lang.String> strList48 = excludeYears41.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList56 = excludeYears41.findExcludedCountries(strList53);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears41.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears58.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears60.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears60.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears58.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList74 = excludeYears41.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList75 = excludeYears38.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList76 = excludeYears0.findExcludedCountries(strList70);
        java.lang.Class<?> wildcardClass77 = strList70.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = strList13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.ArrayList<java.lang.String> strList18 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears11.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList27 = excludeYears0.findExcludedCountries(strList26);
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList37 = excludeYears29.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears29.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeYears29.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears40.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears48.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears40.findExcludedCountries(strList60);
        java.util.ArrayList<java.lang.String> strList62 = excludeYears40.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears40.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears40.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears29.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.findExcludedCountries(strList69);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList72 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList73 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList74 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass75 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList44 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.ArrayList<java.lang.String> strList52 = excludeYears45.analysisType();
        java.util.Vector<java.lang.String> strList53 = excludeYears45.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeYears45.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears55.ISOconverter();
        java.util.Vector<java.lang.String> strList63 = excludeYears55.initilizeCountries();
        java.util.Vector<java.lang.String> strList64 = excludeYears55.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList66 = excludeYears65.initilizeCountries();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList69 = new java.util.Vector<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Vector<java.lang.String> strList71 = excludeYears65.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList72 = excludeYears55.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList73 = excludeYears45.findExcludedCountries(strList69);
        java.util.Vector<java.lang.String> strList74 = excludeYears0.findExcludedCountries(strList73);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList77 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList78 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears9.ISOconverter();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears9.findExcludedCountries(strList19);
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.util.Vector<java.lang.String> strList30 = excludeYears22.initilizeCountries();
        java.util.Vector<java.lang.String> strList31 = excludeYears22.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList39 = excludeYears22.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList40 = excludeYears9.findExcludedCountries(strList36);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList44 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { 100 };
        java.util.Vector<java.lang.Integer> intList47 = new java.util.Vector<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap49 = null;
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.ArrayList<java.lang.String> strList58 = excludeYears51.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears51.findExcludedCountries(strList63);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList67 = excludeYears0.removeExcludedYears(intList47, strMap49, "", strList66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.ArrayList<java.lang.String> strList41 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears42.initilizeCountries();
        java.util.Vector<java.lang.String> strList50 = excludeYears42.initilizeCountries();
        java.util.Vector<java.lang.String> strList51 = excludeYears42.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.util.Vector<java.lang.String> strList60 = excludeYears52.initilizeCountries();
        java.util.Vector<java.lang.String> strList61 = excludeYears52.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears52.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears42.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList71 = excludeYears0.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList72 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList73 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList74 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList75 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList76 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears34.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears34.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears34.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears44.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears44.ISOconverter();
        java.util.Vector<java.lang.String> strList53 = excludeYears44.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeYears44.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears44.ISOconverter();
        java.util.ArrayList<java.lang.String> strList56 = excludeYears44.analysisType();
        java.util.ArrayList<java.lang.String> strList57 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears44.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears59.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears67.ISOconverter();
        java.lang.String[] strArray76 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears67.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears59.findExcludedCountries(strList79);
        java.util.ArrayList<java.lang.String> strList81 = excludeYears59.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeYears59.ISOconverter();
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList86 = new java.util.Vector<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        java.util.Vector<java.lang.String> strList88 = excludeYears59.findExcludedCountries(strList86);
        java.lang.String[] strArray91 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList92 = new java.util.Vector<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        java.util.Vector<java.lang.String> strList94 = excludeYears59.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList95 = excludeYears44.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList96 = excludeYears34.findExcludedCountries(strList92);
        java.util.Vector<java.lang.String> strList97 = excludeYears0.findExcludedCountries(strList96);
        java.util.Vector<java.lang.String> strList98 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap99 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strList98);
        org.junit.Assert.assertNull(strMap99);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList28 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass31 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList27 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.ArrayList<java.lang.String> strList36 = excludeYears29.analysisType();
        java.util.Vector<java.lang.String> strList37 = excludeYears29.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears29.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.util.Vector<java.lang.String> strList47 = excludeYears39.initilizeCountries();
        java.util.Vector<java.lang.String> strList48 = excludeYears39.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList56 = excludeYears39.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList57 = excludeYears29.findExcludedCountries(strList53);
        java.util.ArrayList<java.lang.String> strList58 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList60 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList61 = excludeYears29.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = excludeYears29.ISOconverter();
        java.util.Vector<java.lang.String> strList63 = excludeYears29.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears64 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList65 = excludeYears64.initilizeCountries();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears64.findExcludedCountries(strList68);
        java.util.Vector<java.lang.String> strList71 = excludeYears64.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears72 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList73 = excludeYears72.initilizeCountries();
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.String> strList78 = excludeYears72.findExcludedCountries(strList76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears72.ISOconverter();
        java.lang.String[] strArray81 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList82 = new java.util.Vector<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        java.util.Vector<java.lang.String> strList84 = excludeYears72.findExcludedCountries(strList82);
        java.util.Vector<java.lang.String> strList85 = excludeYears64.findExcludedCountries(strList84);
        java.util.ArrayList<java.lang.String> strList86 = excludeYears64.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeYears64.ISOconverter();
        java.lang.String[] strArray90 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList91 = new java.util.Vector<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        java.util.Vector<java.lang.String> strList93 = excludeYears64.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList94 = excludeYears29.findExcludedCountries(strList91);
        java.util.Vector<java.lang.String> strList95 = excludeYears0.findExcludedCountries(strList91);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears13.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears13.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears16 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears16.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears16.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears16.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears33.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = excludeYears33.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears33.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeYears33.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears44.findExcludedCountries(strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears44.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears44.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears33.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList74 = excludeYears16.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList75 = excludeYears13.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList76 = excludeYears0.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList77 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList78 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList79 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList80 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList81 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList83 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList85 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNull(strList85);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList35 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList43 = excludeYears36.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears36.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList45 = excludeYears36.analysisType();
        java.util.Vector<java.lang.String> strList46 = excludeYears36.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears36.initilizeCountries();
        java.util.Vector<java.lang.String> strList48 = excludeYears36.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears36.ISOconverter();
        java.util.Vector<java.lang.String> strList50 = excludeYears36.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears51.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears51.ISOconverter();
        java.util.ArrayList<java.lang.String> strList60 = excludeYears51.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.ArrayList<java.lang.String> strList68 = excludeYears61.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears61.findExcludedCountries(strList73);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeYears61.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears78 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears78.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears80 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList81 = excludeYears80.initilizeCountries();
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList84 = new java.util.Vector<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.Vector<java.lang.String> strList86 = excludeYears80.findExcludedCountries(strList84);
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeYears80.ISOconverter();
        java.lang.String[] strArray89 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList90 = new java.util.Vector<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        java.util.Vector<java.lang.String> strList92 = excludeYears80.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList93 = excludeYears78.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList94 = excludeYears61.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList95 = excludeYears51.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList96 = excludeYears36.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList97 = excludeYears0.findExcludedCountries(strList90);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray16 = new java.lang.Integer[] { 100, 1, 1, 10, (-1) };
        java.util.Vector<java.lang.Integer> intList17 = new java.util.Vector<java.lang.Integer>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap19 = null;
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.ArrayList<java.lang.String> strList28 = excludeYears21.analysisType();
        java.util.Vector<java.lang.String> strList29 = excludeYears21.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears21.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears31.ISOconverter();
        java.util.Vector<java.lang.String> strList39 = excludeYears31.initilizeCountries();
        java.util.Vector<java.lang.String> strList40 = excludeYears31.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears31.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList49 = excludeYears21.findExcludedCountries(strList45);
        java.util.ArrayList<java.lang.String> strList50 = excludeYears21.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears51.ISOconverter();
        java.lang.String[] strArray60 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears51.findExcludedCountries(strList61);
        statsVisualiser.facade.ExcludeYears excludeYears64 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList65 = excludeYears64.initilizeCountries();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears64.findExcludedCountries(strList68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears64.ISOconverter();
        java.util.Vector<java.lang.String> strList72 = excludeYears64.initilizeCountries();
        java.util.Vector<java.lang.String> strList73 = excludeYears64.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears74 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList75 = excludeYears74.initilizeCountries();
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList78 = new java.util.Vector<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Vector<java.lang.String> strList80 = excludeYears74.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList81 = excludeYears64.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList82 = excludeYears51.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList83 = excludeYears21.findExcludedCountries(strList78);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList84 = excludeYears0.excludeYears(intList17, strMap19, "", strList78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass14 = strList13.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 1, (-1), (-1) };
        java.util.Vector<java.lang.Integer> intList14 = new java.util.Vector<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList14, intArray13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        java.util.Vector<java.lang.String> strList18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList19 = excludeYears0.removeExcludedYears(intList14, strMap16, "hi!", strList18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears31.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears39.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears31.findExcludedCountries(strList51);
        java.util.ArrayList<java.lang.String> strList53 = excludeYears31.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears54.ISOconverter();
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears54.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears31.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList68 = excludeYears31.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.ArrayList<java.lang.String> strList76 = excludeYears69.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears77 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList78 = excludeYears77.initilizeCountries();
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.String> strList83 = excludeYears77.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList84 = excludeYears69.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList85 = excludeYears31.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList86 = excludeYears0.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList87 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList88 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList39 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears10.findExcludedCountries(strList30);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears10.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears10.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList35 = excludeYears10.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears10.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears37.ISOconverter();
        java.util.Vector<java.lang.String> strList46 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears37.ISOconverter();
        java.util.ArrayList<java.lang.String> strList49 = excludeYears37.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears37.analysisType();
        java.util.ArrayList<java.lang.String> strList51 = excludeYears37.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears52.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears54.ISOconverter();
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears54.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList67 = excludeYears52.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList68 = excludeYears37.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList69 = excludeYears10.findExcludedCountries(strList64);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.findExcludedCountries(strList69);
        java.util.ArrayList<java.lang.String> strList71 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList72 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList73 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList21 = excludeYears13.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears13.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList33 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears35 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList36 = excludeYears35.initilizeCountries();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears35.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList42 = excludeYears35.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeYears35.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears35.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.util.Vector<java.lang.String> strList53 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList54 = excludeYears45.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears45.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList63 = excludeYears35.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList64 = excludeYears0.findExcludedCountries(strList59);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList66 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList67 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList68 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList14 = excludeYears13.initilizeCountries();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList17 = new java.util.Vector<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.util.Vector<java.lang.String> strList19 = excludeYears13.findExcludedCountries(strList17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears13.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = excludeYears13.ISOconverter();
        java.util.Vector<java.lang.String> strList22 = excludeYears13.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears13.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears24.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears32.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears24.findExcludedCountries(strList44);
        java.util.ArrayList<java.lang.String> strList46 = excludeYears24.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears47.ISOconverter();
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears47.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList60 = excludeYears24.findExcludedCountries(strList59);
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.ArrayList<java.lang.String> strList68 = excludeYears61.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears69 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList70 = excludeYears69.initilizeCountries();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears69.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears61.findExcludedCountries(strList73);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeYears61.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears78 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap79 = excludeYears78.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears80 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList81 = excludeYears80.initilizeCountries();
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList84 = new java.util.Vector<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.Vector<java.lang.String> strList86 = excludeYears80.findExcludedCountries(strList84);
        java.util.Map<java.lang.String, java.lang.String> strMap87 = excludeYears80.ISOconverter();
        java.lang.String[] strArray89 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList90 = new java.util.Vector<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        java.util.Vector<java.lang.String> strList92 = excludeYears80.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList93 = excludeYears78.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList94 = excludeYears61.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList95 = excludeYears24.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList96 = excludeYears13.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList97 = excludeYears0.findExcludedCountries(strList96);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.ArrayList<java.lang.String> strList1 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList2 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList3 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.util.Vector<java.lang.String> strList26 = excludeYears18.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears18.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears18.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = strList35.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears2.ISOconverter();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears2.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Vector<java.lang.String> strList24 = excludeYears0.findExcludedCountries(strList21);
        java.lang.Integer[] intArray26 = new java.lang.Integer[] { 1 };
        java.util.Vector<java.lang.Integer> intList27 = new java.util.Vector<java.lang.Integer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap29 = null;
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.ArrayList<java.lang.String> strList38 = excludeYears31.analysisType();
        java.util.Vector<java.lang.String> strList39 = excludeYears31.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList40 = excludeYears31.analysisType();
        java.util.Vector<java.lang.String> strList41 = excludeYears31.initilizeCountries();
        java.util.Vector<java.lang.String> strList42 = excludeYears31.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears31.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears31.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears45.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeYears45.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = excludeYears45.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears45.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears56.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears56.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears45.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears31.findExcludedCountries(strList66);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList71 = excludeYears0.excludeYears(intList27, strMap29, "", strList66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears34.ISOconverter();
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears34.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears11.findExcludedCountries(strList46);
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.ArrayList<java.lang.String> strList55 = excludeYears48.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears48.findExcludedCountries(strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears48.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears65 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears65.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears67.ISOconverter();
        java.lang.String[] strArray76 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears67.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears65.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList81 = excludeYears48.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList82 = excludeYears11.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList83 = excludeYears0.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList84 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList86 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strList86);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList39);
        statsVisualiser.facade.ExcludeYears excludeYears41 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList42 = excludeYears41.initilizeCountries();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList45 = new java.util.Vector<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        java.util.Vector<java.lang.String> strList47 = excludeYears41.findExcludedCountries(strList45);
        java.util.Vector<java.lang.String> strList48 = excludeYears41.initilizeCountries();
        java.util.Vector<java.lang.String> strList49 = excludeYears41.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears41.analysisType();
        java.util.Vector<java.lang.String> strList51 = excludeYears41.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears52.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears60 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList61 = excludeYears60.initilizeCountries();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList64 = new java.util.Vector<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Vector<java.lang.String> strList66 = excludeYears60.findExcludedCountries(strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears60.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears60.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears52.findExcludedCountries(strList72);
        java.util.ArrayList<java.lang.String> strList74 = excludeYears52.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears52.ISOconverter();
        java.lang.String[] strArray77 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList78 = new java.util.Vector<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Vector<java.lang.String> strList80 = excludeYears52.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList81 = excludeYears41.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList82 = excludeYears0.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList83 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = strMap15.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears31.ISOconverter();
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears31.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears0.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList45 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList49 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList50 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList50);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { 0, 1 };
        java.util.Vector<java.lang.Integer> intList32 = new java.util.Vector<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList32, intArray31);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap34 = null;
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Vector<java.lang.String> strList43 = excludeYears36.initilizeCountries();
        java.util.Vector<java.lang.String> strList44 = excludeYears36.initilizeCountries();
        java.util.Vector<java.lang.String> strList45 = excludeYears36.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeYears36.initilizeCountries();
        java.util.Vector<java.lang.String> strList47 = excludeYears36.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.ArrayList<java.lang.String> strList55 = excludeYears48.analysisType();
        java.util.ArrayList<java.lang.String> strList56 = excludeYears48.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears57.ISOconverter();
        java.util.Vector<java.lang.String> strList65 = excludeYears57.initilizeCountries();
        java.util.Vector<java.lang.String> strList66 = excludeYears57.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList74 = excludeYears57.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList75 = excludeYears48.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList76 = excludeYears36.findExcludedCountries(strList71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList77 = excludeYears0.removeExcludedYears(intList32, strMap34, "", strList76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears39.ISOconverter();
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears39.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears0.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList53 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList54 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList56 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList56);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.ArrayList<java.lang.String> strList17 = excludeYears10.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears10.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears10.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears27.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears29.ISOconverter();
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList39 = new java.util.Vector<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        java.util.Vector<java.lang.String> strList41 = excludeYears29.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList42 = excludeYears27.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList43 = excludeYears10.findExcludedCountries(strList39);
        java.util.Vector<java.lang.String> strList44 = excludeYears0.findExcludedCountries(strList39);
        java.util.ArrayList<java.lang.String> strList45 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList16 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 100 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList27 = excludeYears26.initilizeCountries();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.String> strList32 = excludeYears26.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList33 = excludeYears26.initilizeCountries();
        java.util.Vector<java.lang.String> strList34 = excludeYears26.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears26.analysisType();
        java.util.Vector<java.lang.String> strList36 = excludeYears26.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears37.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears37.ISOconverter();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears37.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.ArrayList<java.lang.String> strList54 = excludeYears47.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears47.findExcludedCountries(strList59);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears47.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears64 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears64.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears66 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList67 = excludeYears66.initilizeCountries();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears66.findExcludedCountries(strList70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = excludeYears66.ISOconverter();
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList76 = new java.util.Vector<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        java.util.Vector<java.lang.String> strList78 = excludeYears66.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList79 = excludeYears64.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList80 = excludeYears47.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList81 = excludeYears37.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList82 = excludeYears26.findExcludedCountries(strList76);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList83 = excludeYears0.excludeYears(intList22, strMap24, "hi!", strList76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList37 = excludeYears0.findExcludedCountries(strList36);
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears38.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears46.ISOconverter();
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears46.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears38.findExcludedCountries(strList58);
        java.util.ArrayList<java.lang.String> strList60 = excludeYears38.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = excludeYears38.ISOconverter();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears38.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears0.findExcludedCountries(strList67);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList70 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strList70);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.ArrayList<java.lang.String> strList1 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList3 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList4 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList5 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(strList5);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears31.ISOconverter();
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears31.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears0.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList45 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList47 = null;
        java.util.Vector<java.lang.String> strList48 = excludeYears0.findExcludedCountries(strList47);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strList48);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears17.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears17.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList33 = excludeYears0.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList34 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList36 = null;
        java.util.Vector<java.lang.String> strList37 = excludeYears0.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass39 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.ArrayList<java.lang.String> strList18 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears11.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList27 = excludeYears0.findExcludedCountries(strList26);
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 0, 0, 1, (-1), 0 };
        java.util.Vector<java.lang.Integer> intList35 = new java.util.Vector<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap37 = null;
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.ArrayList<java.lang.String> strList46 = excludeYears39.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.Vector<java.lang.String> strList54 = excludeYears39.findExcludedCountries(strList51);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears39.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears56.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears58.ISOconverter();
        java.lang.String[] strArray67 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList68 = new java.util.Vector<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Vector<java.lang.String> strList70 = excludeYears58.findExcludedCountries(strList68);
        java.util.Vector<java.lang.String> strList71 = excludeYears56.findExcludedCountries(strList68);
        java.util.Vector<java.lang.String> strList72 = excludeYears39.findExcludedCountries(strList68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList73 = excludeYears0.excludeYears(intList35, strMap37, "", strList72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList10 = new java.util.Vector<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.util.Vector<java.lang.String> strList12 = excludeYears0.findExcludedCountries(strList10);
        statsVisualiser.facade.ExcludeYears excludeYears13 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears13.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears13.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears16 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears16.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears16.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears16.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears33.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = excludeYears33.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears33.analysisType();
        java.util.Vector<java.lang.String> strList43 = excludeYears33.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears44.findExcludedCountries(strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears44.ISOconverter();
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList70 = new java.util.Vector<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        java.util.Vector<java.lang.String> strList72 = excludeYears44.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList73 = excludeYears33.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList74 = excludeYears16.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList75 = excludeYears13.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList76 = excludeYears0.findExcludedCountries(strList70);
        java.util.Vector<java.lang.String> strList77 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList78 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList79 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList80 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList81 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList83 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass85 = strMap84.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(strMap84);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList16 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears19.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears19.analysisType();
        java.util.Vector<java.lang.String> strList29 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList37 = excludeYears30.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = excludeYears38.ISOconverter();
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears38.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears30.findExcludedCountries(strList50);
        java.util.ArrayList<java.lang.String> strList52 = excludeYears30.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears30.ISOconverter();
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears30.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList59 = excludeYears19.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList60 = excludeYears0.findExcludedCountries(strList56);
        java.util.Vector<java.lang.String> strList61 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList62 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList18 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList27 = excludeYears26.initilizeCountries();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.String> strList32 = excludeYears26.findExcludedCountries(strList30);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears26.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears26.findExcludedCountries(strList38);
        java.util.ArrayList<java.lang.String> strList42 = excludeYears26.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears26.ISOconverter();
        java.util.Vector<java.lang.String> strList44 = excludeYears26.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears45.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears53 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList54 = excludeYears53.initilizeCountries();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList57 = new java.util.Vector<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Vector<java.lang.String> strList59 = excludeYears53.findExcludedCountries(strList57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = excludeYears53.ISOconverter();
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears53.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears45.findExcludedCountries(strList65);
        java.util.ArrayList<java.lang.String> strList67 = excludeYears45.analysisType();
        java.util.ArrayList<java.lang.String> strList68 = excludeYears45.analysisType();
        java.util.ArrayList<java.lang.String> strList69 = excludeYears45.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears45.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears45.ISOconverter();
        java.util.ArrayList<java.lang.String> strList72 = excludeYears45.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears73 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList74 = excludeYears73.initilizeCountries();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears73.findExcludedCountries(strList77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears73.ISOconverter();
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.String> strList85 = excludeYears73.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList86 = excludeYears45.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList87 = excludeYears26.findExcludedCountries(strList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList88 = excludeYears0.removeExcludedYears(intList22, strMap24, "hi!", strList83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.util.Vector<java.lang.String> strList25 = excludeYears17.initilizeCountries();
        java.util.Vector<java.lang.String> strList26 = excludeYears17.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears27 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList28 = excludeYears27.initilizeCountries();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList31 = new java.util.Vector<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Vector<java.lang.String> strList33 = excludeYears27.findExcludedCountries(strList31);
        java.util.Vector<java.lang.String> strList34 = excludeYears17.findExcludedCountries(strList31);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears17.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.ArrayList<java.lang.String> strList43 = excludeYears36.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears36.findExcludedCountries(strList48);
        java.util.ArrayList<java.lang.String> strList52 = excludeYears36.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears36.ISOconverter();
        java.util.Vector<java.lang.String> strList54 = excludeYears36.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears55.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears63 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList64 = excludeYears63.initilizeCountries();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears63.findExcludedCountries(strList67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = excludeYears63.ISOconverter();
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList73 = new java.util.Vector<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        java.util.Vector<java.lang.String> strList75 = excludeYears63.findExcludedCountries(strList73);
        java.util.Vector<java.lang.String> strList76 = excludeYears55.findExcludedCountries(strList75);
        java.util.ArrayList<java.lang.String> strList77 = excludeYears55.analysisType();
        java.util.ArrayList<java.lang.String> strList78 = excludeYears55.analysisType();
        java.util.ArrayList<java.lang.String> strList79 = excludeYears55.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears55.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = excludeYears55.ISOconverter();
        java.util.ArrayList<java.lang.String> strList82 = excludeYears55.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears83 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList84 = excludeYears83.initilizeCountries();
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList87 = new java.util.Vector<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Vector<java.lang.String> strList89 = excludeYears83.findExcludedCountries(strList87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = excludeYears83.ISOconverter();
        java.lang.String[] strArray92 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList93 = new java.util.Vector<java.lang.String>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList93, strArray92);
        java.util.Vector<java.lang.String> strList95 = excludeYears83.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList96 = excludeYears55.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList97 = excludeYears36.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList98 = excludeYears17.findExcludedCountries(strList93);
        java.util.Vector<java.lang.String> strList99 = excludeYears0.findExcludedCountries(strList98);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNull(strList98);
        org.junit.Assert.assertNull(strList99);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList16 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList19 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears20.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears20.ISOconverter();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears20.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears30 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList31 = excludeYears30.initilizeCountries();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears30.findExcludedCountries(strList34);
        java.util.ArrayList<java.lang.String> strList37 = excludeYears30.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears30.findExcludedCountries(strList42);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears30.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears47.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = excludeYears49.ISOconverter();
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears49.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears47.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList63 = excludeYears30.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList64 = excludeYears20.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList65 = excludeYears0.findExcludedCountries(strList64);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass67 = strMap66.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strMap66);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.Vector<java.lang.String> strList22 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList26);
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears29.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears29.ISOconverter();
        java.util.Vector<java.lang.String> strList38 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList39 = excludeYears29.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears29.ISOconverter();
        java.util.ArrayList<java.lang.String> strList41 = excludeYears29.analysisType();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears29.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears29.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Vector<java.lang.String> strList51 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears52 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList53 = excludeYears52.initilizeCountries();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList56 = new java.util.Vector<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Vector<java.lang.String> strList58 = excludeYears52.findExcludedCountries(strList56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = excludeYears52.ISOconverter();
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears52.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList65 = excludeYears44.findExcludedCountries(strList64);
        java.util.ArrayList<java.lang.String> strList66 = excludeYears44.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears44.ISOconverter();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears44.findExcludedCountries(strList71);
        java.lang.String[] strArray76 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears44.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears29.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList81 = excludeYears0.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList82 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList83 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList84 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList85 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass86 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList42 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList43 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList16 = excludeYears15.initilizeCountries();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList19 = new java.util.Vector<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        java.util.Vector<java.lang.String> strList21 = excludeYears15.findExcludedCountries(strList19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeYears15.ISOconverter();
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears15.findExcludedCountries(strList25);
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears28.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears28.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears31.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears33.ISOconverter();
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears33.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears31.findExcludedCountries(strList43);
        java.util.ArrayList<java.lang.String> strList47 = excludeYears31.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Vector<java.lang.String> strList55 = excludeYears48.initilizeCountries();
        java.util.Vector<java.lang.String> strList56 = excludeYears48.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList57 = excludeYears48.analysisType();
        java.util.Vector<java.lang.String> strList58 = excludeYears48.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears59 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList60 = excludeYears59.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears59.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears59.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears67.ISOconverter();
        java.lang.String[] strArray76 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears67.findExcludedCountries(strList77);
        java.util.Vector<java.lang.String> strList80 = excludeYears59.findExcludedCountries(strList79);
        java.util.ArrayList<java.lang.String> strList81 = excludeYears59.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = excludeYears59.ISOconverter();
        java.lang.String[] strArray84 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears59.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList88 = excludeYears48.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList89 = excludeYears31.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList90 = excludeYears28.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList91 = excludeYears15.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList92 = excludeYears0.findExcludedCountries(strList91);
        java.util.Map<java.lang.String, java.lang.String> strMap93 = excludeYears0.ISOconverter();
        java.lang.Class<?> wildcardClass94 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList34 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass38 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears37.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears37.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears37.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears54.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears56.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears56.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears54.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears37.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList71 = excludeYears0.findExcludedCountries(strList66);
        java.util.ArrayList<java.lang.String> strList72 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList74 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears9 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList10 = excludeYears9.initilizeCountries();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList13 = new java.util.Vector<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Vector<java.lang.String> strList15 = excludeYears9.findExcludedCountries(strList13);
        java.util.Vector<java.lang.String> strList16 = excludeYears9.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears9.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList31 = excludeYears9.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears32.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears9.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList46 = excludeYears9.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears47 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList48 = excludeYears47.initilizeCountries();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList51 = new java.util.Vector<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        java.util.Vector<java.lang.String> strList53 = excludeYears47.findExcludedCountries(strList51);
        java.util.ArrayList<java.lang.String> strList54 = excludeYears47.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears55 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList56 = excludeYears55.initilizeCountries();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList59 = new java.util.Vector<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        java.util.Vector<java.lang.String> strList61 = excludeYears55.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList62 = excludeYears47.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList63 = excludeYears9.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList64 = excludeYears0.findExcludedCountries(strList59);
        java.util.Vector<java.lang.String> strList65 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList66 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass67 = strList66.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = strMap10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList11 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { 0 };
        java.util.Vector<java.lang.Integer> intList16 = new java.util.Vector<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap18 = null;
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears20.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears20.findExcludedCountries(strList40);
        java.util.ArrayList<java.lang.String> strList42 = excludeYears20.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears20.ISOconverter();
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears20.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList49 = excludeYears20.analysisType();
        java.util.Vector<java.lang.String> strList50 = excludeYears20.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList58 = excludeYears51.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeYears51.initilizeCountries();
        java.util.Vector<java.lang.String> strList60 = excludeYears51.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = excludeYears61.ISOconverter();
        java.lang.String[] strArray70 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears61.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList74 = excludeYears51.findExcludedCountries(strList71);
        java.util.Vector<java.lang.String> strList75 = excludeYears20.findExcludedCountries(strList71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList76 = excludeYears0.removeExcludedYears(intList16, strMap18, "", strList71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList19 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList28 = excludeYears11.findExcludedCountries(strList25);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList28);
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList32 = excludeYears31.initilizeCountries();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears31.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = excludeYears31.ISOconverter();
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears31.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears0.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList45 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList46 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList47 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList49 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList52 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass53 = strList52.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears23.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.findExcludedCountries(strList35);
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.ArrayList<java.lang.String> strList44 = excludeYears37.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Vector<java.lang.String> strList52 = excludeYears37.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears37.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears54.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears56.ISOconverter();
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears56.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears54.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList70 = excludeYears37.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList71 = excludeYears0.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList72 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList73 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass75 = strMap74.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(strMap74);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass31 = strMap30.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList15 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList16 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears12.findExcludedCountries(strList22);
        java.util.Vector<java.lang.String> strList25 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList26 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList28 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList30 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList32 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears33.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = excludeYears33.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = excludeYears33.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears33.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears44.ISOconverter();
        java.util.Vector<java.lang.String> strList52 = excludeYears44.initilizeCountries();
        java.util.Vector<java.lang.String> strList53 = excludeYears44.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears44.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList62 = excludeYears33.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList63 = excludeYears0.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList64 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears12 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList13 = excludeYears12.initilizeCountries();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList16 = new java.util.Vector<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Vector<java.lang.String> strList18 = excludeYears12.findExcludedCountries(strList16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears12.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = excludeYears12.ISOconverter();
        java.util.ArrayList<java.lang.String> strList21 = excludeYears12.analysisType();
        java.util.ArrayList<java.lang.String> strList22 = excludeYears12.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears23 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList24 = excludeYears23.initilizeCountries();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears23.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears23.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears23.initilizeCountries();
        java.util.Vector<java.lang.String> strList32 = excludeYears23.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears23.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears12.findExcludedCountries(strList40);
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears42.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears44 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList45 = excludeYears44.initilizeCountries();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList48 = new java.util.Vector<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Vector<java.lang.String> strList50 = excludeYears44.findExcludedCountries(strList48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = excludeYears44.ISOconverter();
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears44.findExcludedCountries(strList54);
        java.util.Vector<java.lang.String> strList57 = excludeYears42.findExcludedCountries(strList54);
        java.util.ArrayList<java.lang.String> strList58 = excludeYears42.analysisType();
        java.util.ArrayList<java.lang.String> strList59 = excludeYears42.analysisType();
        java.util.Vector<java.lang.String> strList60 = excludeYears42.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears61.initilizeCountries();
        java.util.Vector<java.lang.String> strList69 = excludeYears61.initilizeCountries();
        java.util.Vector<java.lang.String> strList70 = excludeYears61.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears71 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList72 = excludeYears71.initilizeCountries();
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears71.findExcludedCountries(strList75);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = excludeYears71.ISOconverter();
        java.lang.String[] strArray80 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList81 = new java.util.Vector<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Vector<java.lang.String> strList83 = excludeYears71.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList84 = excludeYears61.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList85 = excludeYears42.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList86 = excludeYears12.findExcludedCountries(strList81);
        java.util.Vector<java.lang.String> strList87 = excludeYears0.findExcludedCountries(strList81);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strMap88);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears17.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears17.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList33 = excludeYears0.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList34 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears0.analysisType();
        java.lang.Class<?> wildcardClass36 = strList35.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList14 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears0.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList38 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList12 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList13 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList17 = excludeYears0.analysisType();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 100, 100 };
        java.util.Vector<java.lang.Integer> intList22 = new java.util.Vector<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap24 = null;
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList27 = excludeYears26.initilizeCountries();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.String> strList32 = excludeYears26.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList33 = excludeYears26.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears34.ISOconverter();
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears34.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears26.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList48 = excludeYears26.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears26.ISOconverter();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears26.findExcludedCountries(strList53);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList56 = excludeYears0.excludeYears(intList22, strMap24, "", strList55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears11.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears0.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList42 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList43 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears45.findExcludedCountries(strList55);
        statsVisualiser.facade.ExcludeYears excludeYears58 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList59 = excludeYears58.initilizeCountries();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList62 = new java.util.Vector<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Vector<java.lang.String> strList64 = excludeYears58.findExcludedCountries(strList62);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears58.ISOconverter();
        java.util.Vector<java.lang.String> strList66 = excludeYears58.initilizeCountries();
        java.util.Vector<java.lang.String> strList67 = excludeYears58.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears68 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList69 = excludeYears68.initilizeCountries();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.String> strList74 = excludeYears68.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList75 = excludeYears58.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList76 = excludeYears45.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList77 = excludeYears0.findExcludedCountries(strList76);
        java.util.Vector<java.lang.String> strList78 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList79 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList80 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList81 = excludeYears0.initilizeCountries();
        java.lang.Class<?> wildcardClass82 = excludeYears0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.ArrayList<java.lang.String> strList1 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList3 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList4 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList5 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList8 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears11.ISOconverter();
        java.util.Vector<java.lang.String> strList20 = excludeYears11.initilizeCountries();
        java.util.Vector<java.lang.String> strList21 = excludeYears11.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = excludeYears11.ISOconverter();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears11.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears11.analysisType();
        java.util.ArrayList<java.lang.String> strList25 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = excludeYears26.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears28 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList29 = excludeYears28.initilizeCountries();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears28.findExcludedCountries(strList32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears28.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears28.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList41 = excludeYears26.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList42 = excludeYears11.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList43 = excludeYears0.findExcludedCountries(strList38);
        java.util.Vector<java.lang.String> strList44 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears10.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears10.initilizeCountries();
        java.util.Vector<java.lang.String> strList19 = excludeYears10.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears20 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList21 = excludeYears20.initilizeCountries();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList24 = new java.util.Vector<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        java.util.Vector<java.lang.String> strList26 = excludeYears20.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList27 = excludeYears10.findExcludedCountries(strList24);
        java.util.Vector<java.lang.String> strList28 = excludeYears0.findExcludedCountries(strList24);
        java.util.ArrayList<java.lang.String> strList29 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList33 = excludeYears32.initilizeCountries();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList36 = new java.util.Vector<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        java.util.Vector<java.lang.String> strList38 = excludeYears32.findExcludedCountries(strList36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears32.ISOconverter();
        java.util.Vector<java.lang.String> strList40 = excludeYears32.initilizeCountries();
        java.util.Vector<java.lang.String> strList41 = excludeYears32.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears32.findExcludedCountries(strList46);
        statsVisualiser.facade.ExcludeYears excludeYears50 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList51 = excludeYears50.initilizeCountries();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList54 = new java.util.Vector<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        java.util.Vector<java.lang.String> strList56 = excludeYears50.findExcludedCountries(strList54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears50.ISOconverter();
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears50.findExcludedCountries(strList60);
        java.util.Vector<java.lang.String> strList63 = excludeYears32.findExcludedCountries(strList62);
        java.util.Vector<java.lang.String> strList64 = excludeYears32.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList65 = excludeYears32.analysisType();
        java.util.ArrayList<java.lang.String> strList66 = excludeYears32.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears67 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList68 = excludeYears67.initilizeCountries();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList71 = new java.util.Vector<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        java.util.Vector<java.lang.String> strList73 = excludeYears67.findExcludedCountries(strList71);
        java.util.ArrayList<java.lang.String> strList74 = excludeYears67.analysisType();
        java.util.ArrayList<java.lang.String> strList75 = excludeYears67.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears76 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList77 = excludeYears76.initilizeCountries();
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.String> strList82 = excludeYears76.findExcludedCountries(strList80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = excludeYears76.ISOconverter();
        java.util.Vector<java.lang.String> strList84 = excludeYears76.initilizeCountries();
        java.util.Vector<java.lang.String> strList85 = excludeYears76.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears86 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList87 = excludeYears86.initilizeCountries();
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList90 = new java.util.Vector<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        java.util.Vector<java.lang.String> strList92 = excludeYears86.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList93 = excludeYears76.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList94 = excludeYears67.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList95 = excludeYears32.findExcludedCountries(strList90);
        java.util.Vector<java.lang.String> strList96 = excludeYears0.findExcludedCountries(strList90);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNull(strList95);
        org.junit.Assert.assertNull(strList96);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { 1, (-1) };
        java.util.Vector<java.lang.Integer> intList14 = new java.util.Vector<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList14, intArray13);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap16 = null;
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        statsVisualiser.facade.ExcludeYears excludeYears31 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears31.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears31.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears34.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears36.ISOconverter();
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears36.findExcludedCountries(strList46);
        java.util.Vector<java.lang.String> strList49 = excludeYears34.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList50 = excludeYears34.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList58 = excludeYears51.initilizeCountries();
        java.util.Vector<java.lang.String> strList59 = excludeYears51.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList60 = excludeYears51.analysisType();
        java.util.Vector<java.lang.String> strList61 = excludeYears51.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.Vector<java.lang.String> strList69 = excludeYears62.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears70 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList71 = excludeYears70.initilizeCountries();
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList74 = new java.util.Vector<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Vector<java.lang.String> strList76 = excludeYears70.findExcludedCountries(strList74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = excludeYears70.ISOconverter();
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.String> strList82 = excludeYears70.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList83 = excludeYears62.findExcludedCountries(strList82);
        java.util.ArrayList<java.lang.String> strList84 = excludeYears62.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeYears62.ISOconverter();
        java.lang.String[] strArray87 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList88 = new java.util.Vector<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Vector<java.lang.String> strList90 = excludeYears62.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList91 = excludeYears51.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList92 = excludeYears34.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList93 = excludeYears31.findExcludedCountries(strList88);
        java.util.Vector<java.lang.String> strList94 = excludeYears18.findExcludedCountries(strList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList95 = excludeYears0.excludeYears(intList14, strMap16, "", strList88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNull(strList94);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears11.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = excludeYears11.ISOconverter();
        java.util.ArrayList<java.lang.String> strList20 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears21 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList22 = excludeYears21.initilizeCountries();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList25 = new java.util.Vector<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        java.util.Vector<java.lang.String> strList27 = excludeYears21.findExcludedCountries(strList25);
        java.util.ArrayList<java.lang.String> strList28 = excludeYears21.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Vector<java.lang.String> strList36 = excludeYears21.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = excludeYears21.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = excludeYears38.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears40 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList41 = excludeYears40.initilizeCountries();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears40.findExcludedCountries(strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears40.ISOconverter();
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears40.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList53 = excludeYears38.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList54 = excludeYears21.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList55 = excludeYears11.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList56 = excludeYears0.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList58 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { 100, 10, 10 };
        java.util.Vector<java.lang.Integer> intList63 = new java.util.Vector<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap65 = null;
        java.util.Vector<java.lang.String> strList67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList68 = excludeYears0.excludeYears(intList63, strMap65, "hi!", strList67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears15 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears15.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears17.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList30 = excludeYears15.findExcludedCountries(strList27);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList33 = null;
        java.util.Vector<java.lang.String> strList34 = excludeYears0.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears37.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears45 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList46 = excludeYears45.initilizeCountries();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList49 = new java.util.Vector<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        java.util.Vector<java.lang.String> strList51 = excludeYears45.findExcludedCountries(strList49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears45.ISOconverter();
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears45.findExcludedCountries(strList55);
        java.util.Vector<java.lang.String> strList58 = excludeYears37.findExcludedCountries(strList57);
        java.util.Vector<java.lang.String> strList59 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray62 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList63 = new java.util.Vector<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Vector<java.lang.String> strList65 = excludeYears37.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList66 = excludeYears0.findExcludedCountries(strList63);
        java.util.Vector<java.lang.String> strList67 = null;
        java.util.Vector<java.lang.String> strList68 = excludeYears0.findExcludedCountries(strList67);
        java.util.Vector<java.lang.String> strList69 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList70 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList71 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList11 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears14.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears14.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears14.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = excludeYears25.ISOconverter();
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList35 = new java.util.Vector<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Vector<java.lang.String> strList37 = excludeYears25.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList38 = excludeYears14.findExcludedCountries(strList35);
        java.util.Vector<java.lang.String> strList39 = excludeYears0.findExcludedCountries(strList35);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList41 = null;
        java.util.Vector<java.lang.String> strList42 = excludeYears0.findExcludedCountries(strList41);
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 0, (-1), 0, 1 };
        java.util.Vector<java.lang.Integer> intList48 = new java.util.Vector<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList48, intArray47);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap50 = null;
        java.util.Vector<java.lang.String> strList52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList53 = excludeYears0.removeExcludedYears(intList48, strMap50, "", strList52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList23 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList24 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears26 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList27 = excludeYears26.initilizeCountries();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList30 = new java.util.Vector<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        java.util.Vector<java.lang.String> strList32 = excludeYears26.findExcludedCountries(strList30);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears26.analysisType();
        java.util.Vector<java.lang.String> strList34 = excludeYears26.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList35 = excludeYears26.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears36 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList37 = excludeYears36.initilizeCountries();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList40 = new java.util.Vector<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        java.util.Vector<java.lang.String> strList42 = excludeYears36.findExcludedCountries(strList40);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = excludeYears36.ISOconverter();
        java.util.Vector<java.lang.String> strList44 = excludeYears36.initilizeCountries();
        java.util.Vector<java.lang.String> strList45 = excludeYears36.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears46 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList47 = excludeYears46.initilizeCountries();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList50 = new java.util.Vector<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        java.util.Vector<java.lang.String> strList52 = excludeYears46.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList53 = excludeYears36.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList54 = excludeYears26.findExcludedCountries(strList50);
        java.util.Vector<java.lang.String> strList55 = excludeYears0.findExcludedCountries(strList54);
        statsVisualiser.facade.ExcludeYears excludeYears56 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList57 = excludeYears56.initilizeCountries();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList60 = new java.util.Vector<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Vector<java.lang.String> strList62 = excludeYears56.findExcludedCountries(strList60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = excludeYears56.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears56.ISOconverter();
        java.util.Vector<java.lang.String> strList65 = excludeYears56.initilizeCountries();
        java.util.Vector<java.lang.String> strList66 = excludeYears56.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears56.ISOconverter();
        java.util.ArrayList<java.lang.String> strList68 = excludeYears56.analysisType();
        java.util.ArrayList<java.lang.String> strList69 = excludeYears56.analysisType();
        java.util.ArrayList<java.lang.String> strList70 = excludeYears56.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears71 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears71.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears73 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList74 = excludeYears73.initilizeCountries();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList77 = new java.util.Vector<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        java.util.Vector<java.lang.String> strList79 = excludeYears73.findExcludedCountries(strList77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = excludeYears73.ISOconverter();
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList83 = new java.util.Vector<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Vector<java.lang.String> strList85 = excludeYears73.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList86 = excludeYears71.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList87 = excludeYears56.findExcludedCountries(strList83);
        java.util.Vector<java.lang.String> strList88 = excludeYears0.findExcludedCountries(strList83);
        java.util.ArrayList<java.lang.String> strList89 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(strList89);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList2 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList3 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList4 = excludeYears0.initilizeCountries();
        java.lang.Integer[] intArray9 = new java.lang.Integer[] { (-1), 100, 0, 100 };
        java.util.Vector<java.lang.Integer> intList10 = new java.util.Vector<java.lang.Integer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
        java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>> strMap12 = null;
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears14.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears22 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList23 = excludeYears22.initilizeCountries();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList26 = new java.util.Vector<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        java.util.Vector<java.lang.String> strList28 = excludeYears22.findExcludedCountries(strList26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = excludeYears22.ISOconverter();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList32 = new java.util.Vector<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        java.util.Vector<java.lang.String> strList34 = excludeYears22.findExcludedCountries(strList32);
        java.util.Vector<java.lang.String> strList35 = excludeYears14.findExcludedCountries(strList34);
        java.util.ArrayList<java.lang.String> strList36 = excludeYears14.analysisType();
        java.util.ArrayList<java.lang.String> strList37 = excludeYears14.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears38 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList39 = excludeYears38.initilizeCountries();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList42 = new java.util.Vector<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Vector<java.lang.String> strList44 = excludeYears38.findExcludedCountries(strList42);
        java.util.Vector<java.lang.String> strList45 = excludeYears38.initilizeCountries();
        java.util.Vector<java.lang.String> strList46 = excludeYears38.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList47 = excludeYears38.analysisType();
        java.util.Vector<java.lang.String> strList48 = excludeYears38.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.Vector<java.lang.String> strList56 = excludeYears49.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = excludeYears57.ISOconverter();
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList67 = new java.util.Vector<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Vector<java.lang.String> strList69 = excludeYears57.findExcludedCountries(strList67);
        java.util.Vector<java.lang.String> strList70 = excludeYears49.findExcludedCountries(strList69);
        java.util.ArrayList<java.lang.String> strList71 = excludeYears49.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = excludeYears49.ISOconverter();
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList75 = new java.util.Vector<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Vector<java.lang.String> strList77 = excludeYears49.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList78 = excludeYears38.findExcludedCountries(strList75);
        java.util.Vector<java.lang.String> strList79 = excludeYears14.findExcludedCountries(strList75);
        java.util.ArrayList<java.lang.String> strList80 = excludeYears14.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears81 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList82 = excludeYears81.initilizeCountries();
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList85 = new java.util.Vector<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Vector<java.lang.String> strList87 = excludeYears81.findExcludedCountries(strList85);
        java.util.Vector<java.lang.String> strList88 = excludeYears14.findExcludedCountries(strList85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Vector<java.lang.Integer> intList89 = excludeYears0.excludeYears(intList10, strMap12, "hi!", strList88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.HashMap.get(Object)\" because \"excludedList\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(strList88);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList27 = new java.util.Vector<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        java.util.Vector<java.lang.String> strList29 = excludeYears0.findExcludedCountries(strList27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList31 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList32 = null;
        java.util.Vector<java.lang.String> strList33 = excludeYears0.findExcludedCountries(strList32);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList33);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = excludeYears17.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears17.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList33 = excludeYears0.findExcludedCountries(strList29);
        java.lang.Class<?> wildcardClass34 = strList29.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Vector<java.lang.String> strList7 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = excludeYears8.ISOconverter();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears8.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears0.findExcludedCountries(strList20);
        java.util.ArrayList<java.lang.String> strList22 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.ArrayList<java.lang.String> strList32 = excludeYears25.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears33 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList34 = excludeYears33.initilizeCountries();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList37 = new java.util.Vector<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.util.Vector<java.lang.String> strList39 = excludeYears33.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList40 = excludeYears25.findExcludedCountries(strList37);
        java.util.Vector<java.lang.String> strList41 = excludeYears0.findExcludedCountries(strList40);
        statsVisualiser.facade.ExcludeYears excludeYears42 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList43 = excludeYears42.initilizeCountries();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList46 = new java.util.Vector<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Vector<java.lang.String> strList48 = excludeYears42.findExcludedCountries(strList46);
        java.util.ArrayList<java.lang.String> strList49 = excludeYears42.analysisType();
        java.util.ArrayList<java.lang.String> strList50 = excludeYears42.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears51 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList52 = excludeYears51.initilizeCountries();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList55 = new java.util.Vector<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        java.util.Vector<java.lang.String> strList57 = excludeYears51.findExcludedCountries(strList55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = excludeYears51.ISOconverter();
        java.util.Vector<java.lang.String> strList59 = excludeYears51.initilizeCountries();
        java.util.Vector<java.lang.String> strList60 = excludeYears51.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears61 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList62 = excludeYears61.initilizeCountries();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList65 = new java.util.Vector<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Vector<java.lang.String> strList67 = excludeYears61.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList68 = excludeYears51.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList69 = excludeYears42.findExcludedCountries(strList65);
        java.util.Vector<java.lang.String> strList70 = excludeYears0.findExcludedCountries(strList65);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList72 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList73 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNull(strList73);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears2.ISOconverter();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears2.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList17 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList18 = excludeYears0.analysisType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears14 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList15 = excludeYears14.initilizeCountries();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList18 = new java.util.Vector<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        java.util.Vector<java.lang.String> strList20 = excludeYears14.findExcludedCountries(strList18);
        java.util.Vector<java.lang.String> strList21 = excludeYears14.initilizeCountries();
        java.util.Vector<java.lang.String> strList22 = excludeYears14.initilizeCountries();
        java.util.Vector<java.lang.String> strList23 = excludeYears14.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears24 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList25 = excludeYears24.initilizeCountries();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears24.findExcludedCountries(strList28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = excludeYears24.ISOconverter();
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList34 = new java.util.Vector<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Vector<java.lang.String> strList36 = excludeYears24.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList37 = excludeYears14.findExcludedCountries(strList34);
        java.util.Vector<java.lang.String> strList38 = excludeYears0.findExcludedCountries(strList37);
        java.util.ArrayList<java.lang.String> strList39 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNull(strMap40);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears2 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList3 = excludeYears2.initilizeCountries();
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList6 = new java.util.Vector<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.Vector<java.lang.String> strList8 = excludeYears2.findExcludedCountries(strList6);
        java.util.Map<java.lang.String, java.lang.String> strMap9 = excludeYears2.ISOconverter();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears2.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = excludeYears0.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.ArrayList<java.lang.String> strList24 = excludeYears17.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears25 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList26 = excludeYears25.initilizeCountries();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears25.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears17.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList33 = excludeYears17.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears17.ISOconverter();
        java.util.Vector<java.lang.String> strList35 = excludeYears17.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList36 = excludeYears17.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears37 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList38 = excludeYears37.initilizeCountries();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList41 = new java.util.Vector<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        java.util.Vector<java.lang.String> strList43 = excludeYears37.findExcludedCountries(strList41);
        java.util.Vector<java.lang.String> strList44 = excludeYears37.initilizeCountries();
        java.util.Vector<java.lang.String> strList45 = excludeYears37.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = excludeYears37.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = excludeYears37.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears48 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList49 = excludeYears48.initilizeCountries();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList52 = new java.util.Vector<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Vector<java.lang.String> strList54 = excludeYears48.findExcludedCountries(strList52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = excludeYears48.ISOconverter();
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears48.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears37.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList62 = excludeYears17.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList63 = excludeYears0.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList64 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList9 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList10 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears11 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList12 = excludeYears11.initilizeCountries();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList15 = new java.util.Vector<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Vector<java.lang.String> strList17 = excludeYears11.findExcludedCountries(strList15);
        java.util.Vector<java.lang.String> strList18 = excludeYears11.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = excludeYears19.ISOconverter();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList29 = new java.util.Vector<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Vector<java.lang.String> strList31 = excludeYears19.findExcludedCountries(strList29);
        java.util.Vector<java.lang.String> strList32 = excludeYears11.findExcludedCountries(strList31);
        java.util.ArrayList<java.lang.String> strList33 = excludeYears11.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = excludeYears11.ISOconverter();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears11.findExcludedCountries(strList38);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears11.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears11.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList48 = excludeYears11.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears49 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList50 = excludeYears49.initilizeCountries();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList53 = new java.util.Vector<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Vector<java.lang.String> strList55 = excludeYears49.findExcludedCountries(strList53);
        java.util.ArrayList<java.lang.String> strList56 = excludeYears49.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears57 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList58 = excludeYears57.initilizeCountries();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList61 = new java.util.Vector<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Vector<java.lang.String> strList63 = excludeYears57.findExcludedCountries(strList61);
        java.util.Vector<java.lang.String> strList64 = excludeYears49.findExcludedCountries(strList61);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = excludeYears49.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears66 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap67 = excludeYears66.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears68 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList69 = excludeYears68.initilizeCountries();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.String> strList74 = excludeYears68.findExcludedCountries(strList72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = excludeYears68.ISOconverter();
        java.lang.String[] strArray77 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList78 = new java.util.Vector<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Vector<java.lang.String> strList80 = excludeYears68.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList81 = excludeYears66.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList82 = excludeYears49.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList83 = excludeYears11.findExcludedCountries(strList78);
        java.util.Vector<java.lang.String> strList84 = excludeYears0.findExcludedCountries(strList83);
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList86 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNull(strList86);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.ArrayList<java.lang.String> strList7 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears8 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList9 = excludeYears8.initilizeCountries();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList12 = new java.util.Vector<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Vector<java.lang.String> strList14 = excludeYears8.findExcludedCountries(strList12);
        java.util.Vector<java.lang.String> strList15 = excludeYears0.findExcludedCountries(strList12);
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList18 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears19 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList20 = excludeYears19.initilizeCountries();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList23 = new java.util.Vector<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        java.util.Vector<java.lang.String> strList25 = excludeYears19.findExcludedCountries(strList23);
        java.util.Vector<java.lang.String> strList26 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears19.initilizeCountries();
        java.util.Vector<java.lang.String> strList28 = excludeYears19.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears29 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList30 = excludeYears29.initilizeCountries();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList33 = new java.util.Vector<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Vector<java.lang.String> strList35 = excludeYears29.findExcludedCountries(strList33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = excludeYears29.ISOconverter();
        java.util.Vector<java.lang.String> strList37 = excludeYears29.initilizeCountries();
        java.util.Vector<java.lang.String> strList38 = excludeYears29.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears39 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList40 = excludeYears39.initilizeCountries();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList43 = new java.util.Vector<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Vector<java.lang.String> strList45 = excludeYears39.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList46 = excludeYears29.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList47 = excludeYears19.findExcludedCountries(strList43);
        java.util.Vector<java.lang.String> strList48 = excludeYears0.findExcludedCountries(strList47);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList50 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList51 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList52 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList53 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNull(strList53);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList10 = excludeYears0.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = excludeYears0.ISOconverter();
        java.util.ArrayList<java.lang.String> strList12 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList13 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList14 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList15 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList16 = excludeYears0.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears17 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList18 = excludeYears17.initilizeCountries();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList21 = new java.util.Vector<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        java.util.Vector<java.lang.String> strList23 = excludeYears17.findExcludedCountries(strList21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = excludeYears17.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears17.ISOconverter();
        java.util.Vector<java.lang.String> strList26 = excludeYears17.initilizeCountries();
        java.util.Vector<java.lang.String> strList27 = excludeYears17.initilizeCountries();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = excludeYears17.ISOconverter();
        java.util.ArrayList<java.lang.String> strList29 = excludeYears17.analysisType();
        java.util.ArrayList<java.lang.String> strList30 = excludeYears17.analysisType();
        java.util.ArrayList<java.lang.String> strList31 = excludeYears17.analysisType();
        statsVisualiser.facade.ExcludeYears excludeYears32 = new statsVisualiser.facade.ExcludeYears();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = excludeYears32.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears34 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList35 = excludeYears34.initilizeCountries();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList38 = new java.util.Vector<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        java.util.Vector<java.lang.String> strList40 = excludeYears34.findExcludedCountries(strList38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = excludeYears34.ISOconverter();
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList44 = new java.util.Vector<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        java.util.Vector<java.lang.String> strList46 = excludeYears34.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList47 = excludeYears32.findExcludedCountries(strList44);
        java.util.Vector<java.lang.String> strList48 = excludeYears17.findExcludedCountries(strList44);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = excludeYears17.ISOconverter();
        java.util.Vector<java.lang.String> strList50 = null;
        java.util.Vector<java.lang.String> strList51 = excludeYears17.findExcludedCountries(strList50);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = excludeYears17.ISOconverter();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = excludeYears17.ISOconverter();
        statsVisualiser.facade.ExcludeYears excludeYears54 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList55 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList58 = new java.util.Vector<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        java.util.Vector<java.lang.String> strList60 = excludeYears54.findExcludedCountries(strList58);
        java.util.Vector<java.lang.String> strList61 = excludeYears54.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears62 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList63 = excludeYears62.initilizeCountries();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList66 = new java.util.Vector<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Vector<java.lang.String> strList68 = excludeYears62.findExcludedCountries(strList66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = excludeYears62.ISOconverter();
        java.lang.String[] strArray71 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList72 = new java.util.Vector<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        java.util.Vector<java.lang.String> strList74 = excludeYears62.findExcludedCountries(strList72);
        java.util.Vector<java.lang.String> strList75 = excludeYears54.findExcludedCountries(strList74);
        java.util.Vector<java.lang.String> strList76 = excludeYears54.initilizeCountries();
        java.lang.String[] strArray79 = new java.lang.String[] { "", "hi!" };
        java.util.Vector<java.lang.String> strList80 = new java.util.Vector<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Vector<java.lang.String> strList82 = excludeYears54.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList83 = excludeYears17.findExcludedCountries(strList80);
        java.util.Vector<java.lang.String> strList84 = excludeYears0.findExcludedCountries(strList80);
        java.util.Map<java.lang.String, java.lang.String> strMap85 = excludeYears0.ISOconverter();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(strMap85);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        statsVisualiser.facade.ExcludeYears excludeYears0 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList1 = excludeYears0.initilizeCountries();
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList4 = new java.util.Vector<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        java.util.Vector<java.lang.String> strList6 = excludeYears0.findExcludedCountries(strList4);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = excludeYears0.ISOconverter();
        java.util.Vector<java.lang.String> strList8 = excludeYears0.initilizeCountries();
        java.util.Vector<java.lang.String> strList9 = excludeYears0.initilizeCountries();
        statsVisualiser.facade.ExcludeYears excludeYears10 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList11 = excludeYears10.initilizeCountries();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList14 = new java.util.Vector<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        java.util.Vector<java.lang.String> strList16 = excludeYears10.findExcludedCountries(strList14);
        java.util.Vector<java.lang.String> strList17 = excludeYears0.findExcludedCountries(strList14);
        statsVisualiser.facade.ExcludeYears excludeYears18 = new statsVisualiser.facade.ExcludeYears();
        java.util.Vector<java.lang.String> strList19 = excludeYears18.initilizeCountries();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.Vector<java.lang.String> strList22 = new java.util.Vector<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Vector<java.lang.String> strList24 = excludeYears18.findExcludedCountries(strList22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = excludeYears18.ISOconverter();
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.Vector<java.lang.String> strList28 = new java.util.Vector<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Vector<java.lang.String> strList30 = excludeYears18.findExcludedCountries(strList28);
        java.util.Vector<java.lang.String> strList31 = excludeYears0.findExcludedCountries(strList30);
        java.util.Vector<java.lang.String> strList32 = excludeYears0.initilizeCountries();
        java.util.ArrayList<java.lang.String> strList33 = excludeYears0.analysisType();
        java.util.ArrayList<java.lang.String> strList34 = excludeYears0.analysisType();
        java.util.Vector<java.lang.String> strList35 = excludeYears0.initilizeCountries();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(strList35);
    }
}

